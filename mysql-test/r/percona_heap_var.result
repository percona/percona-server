set @@session.max_heap_table_size=16*1024*1024;
CREATE TABLE t1 (a INT NOT NULL, b VARCHAR(400), c INT, PRIMARY KEY (a), KEY (c)) ENGINE=HEAP COMMENT="testing heaps" KEY_BLOCK_SIZE=128 CHARACTER SET=latin1;
ERROR 42000: Incorrect usage/placement of 'key_block_size'
CREATE TABLE t1 (a INT NOT NULL, b INT, c VARCHAR(400), PRIMARY KEY (a), KEY (b)) ENGINE=HEAP COMMENT="testing heaps" KEY_BLOCK_SIZE=4 CHARACTER SET=latin1;
ERROR 42000: Incorrect usage/placement of 'key_block_size'
CREATE TABLE t1 (a INT NOT NULL, b INT, c VARCHAR(400), d VARCHAR(400), PRIMARY KEY (a), KEY (b)) ENGINE=HEAP COMMENT="testing heaps" KEY_BLOCK_SIZE=24 CHARACTER SET=latin1;
SHOW TABLE STATUS LIKE "t1";
Name	t1
Engine	MEMORY
Version	10
Row_format	Dynamic
Rows	0
Avg_row_length	X
Data_length	X
Max_data_length	X
Index_length	X
Data_free	X
Auto_increment	X
Create_time	X
Update_time	X
Check_time	X
Collation	latin1_swedish_ci
Checksum	NULL
Create_options	KEY_BLOCK_SIZE=24
Comment	testing heaps
INSERT INTO t1 VALUES (1,1,'012',NULL), (2,2,'0123456789',NULL), (3,3,'012345678901234567890123456789',NULL), (4,4,NULL,'0123456789012345678901234567890123456789012345678901234567890123456789');
SELECT * FROM t1;
a	b	c	d
1	1	012	NULL
2	2	0123456789	NULL
3	3	012345678901234567890123456789	NULL
4	4	NULL	0123456789012345678901234567890123456789012345678901234567890123456789
DELETE FROM t1 WHERE a = 3;
SELECT * FROM t1;
a	b	c	d
1	1	012	NULL
2	2	0123456789	NULL
4	4	NULL	0123456789012345678901234567890123456789012345678901234567890123456789
INSERT INTO t1 VALUES (5,5,NULL,'0123'), (6,6,NULL,'0123');
SELECT * FROM t1;
a	b	c	d
1	1	012	NULL
2	2	0123456789	NULL
6	6	NULL	0123
5	5	NULL	0123
4	4	NULL	0123456789012345678901234567890123456789012345678901234567890123456789
UPDATE t1 SET c = '012345678901234567890123456789' WHERE a = 2;
SELECT * FROM t1;
a	b	c	d
1	1	012	NULL
2	2	012345678901234567890123456789	NULL
6	6	NULL	0123
5	5	NULL	0123
4	4	NULL	0123456789012345678901234567890123456789012345678901234567890123456789
UPDATE t1 SET c = '0123456789' WHERE a = 2;
SELECT * FROM t1;
a	b	c	d
1	1	012	NULL
2	2	0123456789	NULL
6	6	NULL	0123
5	5	NULL	0123
4	4	NULL	0123456789012345678901234567890123456789012345678901234567890123456789
INSERT INTO t1 VALUES (7,7,'0123',NULL), (8,8,'0123',NULL);
SELECT * FROM t1;
a	b	c	d
1	1	012	NULL
2	2	0123456789	NULL
6	6	NULL	0123
5	5	NULL	0123
4	4	NULL	0123456789012345678901234567890123456789012345678901234567890123456789
7	7	0123	NULL
8	8	0123	NULL
SHOW TABLE STATUS LIKE "t1";
Name	t1
Engine	MEMORY
Version	10
Row_format	Dynamic
Rows	0
Avg_row_length	X
Data_length	X
Max_data_length	X
Index_length	X
Data_free	X
Auto_increment	X
Create_time	X
Update_time	X
Check_time	X
Collation	latin1_swedish_ci
Checksum	NULL
Create_options	KEY_BLOCK_SIZE=24
Comment	testing heaps
ALTER TABLE t1 KEY_BLOCK_SIZE = 0;
SHOW TABLE STATUS LIKE "t1";
Name	t1
Engine	MEMORY
Version	10
Row_format	Fixed
Rows	0
Avg_row_length	X
Data_length	X
Max_data_length	X
Index_length	X
Data_free	X
Auto_increment	X
Create_time	X
Update_time	X
Check_time	X
Collation	latin1_swedish_ci
Checksum	NULL
Create_options	
Comment	testing heaps
ALTER TABLE t1 ROW_FORMAT = DYNAMIC;
SHOW TABLE STATUS LIKE "t1";
Name	t1
Engine	MEMORY
Version	10
Row_format	Fixed
Rows	0
Avg_row_length	X
Data_length	X
Max_data_length	X
Index_length	X
Data_free	X
Auto_increment	X
Create_time	X
Update_time	X
Check_time	X
Collation	latin1_swedish_ci
Checksum	NULL
Create_options	row_format=DYNAMIC
Comment	testing heaps
ALTER TABLE t1 KEY_BLOCK_SIZE = 128, MAX_ROWS = 10001;
SHOW TABLE STATUS LIKE "t1";
Name	t1
Engine	MEMORY
Version	10
Row_format	Dynamic
Rows	0
Avg_row_length	X
Data_length	X
Max_data_length	X
Index_length	X
Data_free	X
Auto_increment	X
Create_time	X
Update_time	X
Check_time	X
Collation	latin1_swedish_ci
Checksum	NULL
Create_options	max_rows=10001 row_format=DYNAMIC KEY_BLOCK_SIZE=128
Comment	testing heaps
SELECT * FROM t1;
a	b	c	d
1	1	012	NULL
2	2	0123456789	NULL
6	6	NULL	0123
5	5	NULL	0123
4	4	NULL	0123456789012345678901234567890123456789012345678901234567890123456789
7	7	0123	NULL
8	8	0123	NULL
DELETE FROM t1;
SELECT * FROM t1;
a	b	c	d
call mtr.add_suppression("The table 't1' is full");
SELECT COUNT(*) FROM t1;
COUNT(*)
10001
INSERT INTO t1 VALUES (100000,100000,NULL,'0123'), (100000,100000,NULL,'0123');
ERROR HY000: The table 't1' is full
SHOW TABLE STATUS LIKE "t1";
Name	t1
Engine	MEMORY
Version	10
Row_format	Dynamic
Rows	0
Avg_row_length	X
Data_length	X
Max_data_length	X
Index_length	X
Data_free	X
Auto_increment	X
Create_time	X
Update_time	X
Check_time	X
Collation	latin1_swedish_ci
Checksum	NULL
Create_options	max_rows=10001 row_format=DYNAMIC KEY_BLOCK_SIZE=128
Comment	testing heaps
SELECT COUNT(*) FROM t1;
COUNT(*)
10001
SET @@session.max_heap_table_size=default;
DROP TABLE t1;
#
# Bug 1731483: MEMORY storage engine incorrectly allows BLOB columns before indexed columns
#
CREATE TABLE t1 (a BLOB, b INT PRIMARY KEY) ENGINE=MEMORY;
ERROR 42000: The used table type doesn't support BLOB/TEXT columns
CREATE TABLE t1 (a TEXT, b INT PRIMARY KEY) ENGINE=MEMORY;
ERROR 42000: The used table type doesn't support BLOB/TEXT columns
CREATE TABLE t1 (a INT PRIMARY KEY, b BLOB, c INT, KEY c(c)) ENGINE=MEMORY;
ERROR 42000: The used table type doesn't support BLOB/TEXT columns
CREATE TABLE t1 (a INT PRIMARY KEY, b TEXT, c INT, KEY c(c)) ENGINE=MEMORY;
ERROR 42000: The used table type doesn't support BLOB/TEXT columns
CREATE TABLE t1 (a BLOB, b INT) ENGINE=MEMORY;
ALTER TABLE t1 ADD INDEX idx_b (b);
ERROR 42000: The used table type doesn't support BLOB/TEXT columns
ALTER TABLE t1 ADD PRIMARY KEY (b);
ERROR 42000: The used table type doesn't support BLOB/TEXT columns
DROP TABLE t1;
CREATE TABLE t1 (a TEXT, b INT) ENGINE=MEMORY;
ALTER TABLE t1 ADD INDEX idx_b (b);
ERROR 42000: The used table type doesn't support BLOB/TEXT columns
ALTER TABLE t1 ADD PRIMARY KEY (b);
ERROR 42000: The used table type doesn't support BLOB/TEXT columns
DROP TABLE t1;
CREATE TABLE t1 (a INT PRIMARY KEY, b BLOB, c INT) ENGINE=MEMORY;
ALTER TABLE t1 ADD INDEX c (c);
ERROR 42000: The used table type doesn't support BLOB/TEXT columns
DROP TABLE t1;
CREATE TABLE t1 (a INT PRIMARY KEY, b TEXT, c INT) ENGINE=MEMORY;
ALTER TABLE t1 ADD INDEX c (c);
ERROR 42000: The used table type doesn't support BLOB/TEXT columns
DROP TABLE t1;
CREATE TABLE t1 (a BLOB, b INT PRIMARY KEY) ENGINE=InnoDB;
ALTER TABLE t1 ENGINE=MEMORY;
ERROR 42000: The used table type doesn't support BLOB/TEXT columns
DROP TABLE t1;
CREATE TABLE t1 (a TEXT, b INT PRIMARY KEY) ENGINE=InnoDB;
ALTER TABLE t1 ENGINE=MEMORY;
ERROR 42000: The used table type doesn't support BLOB/TEXT columns
DROP TABLE t1;
CREATE TABLE t1 (a INT PRIMARY KEY, b BLOB, c INT, KEY c(c)) ENGINE=InnoDB;
ALTER TABLE t1 ENGINE=MEMORY;
ERROR 42000: The used table type doesn't support BLOB/TEXT columns
DROP TABLE t1;
CREATE TABLE t1 (a INT PRIMARY KEY, b TEXT, c INT, KEY c(c)) ENGINE=InnoDB;
ALTER TABLE t1 ENGINE=MEMORY;
ERROR 42000: The used table type doesn't support BLOB/TEXT columns
DROP TABLE t1;
CREATE TABLE t1 (a INT PRIMARY KEY, b BLOB, c TEXT) ENGINE=MEMORY;
ALTER TABLE t1 MODIFY b BLOB FIRST;
ERROR 42000: The used table type doesn't support BLOB/TEXT columns
ALTER TABLE t1 MODIFY c TEXT FIRST;
ERROR 42000: The used table type doesn't support BLOB/TEXT columns
DROP TABLE t1;
CREATE TABLE t1 (a INT, b BLOB, c INT, PRIMARY KEY(a, c)) ENGINE=MEMORY;
ERROR 42000: The used table type doesn't support BLOB/TEXT columns
CREATE TABLE t1 (a INT, b TEXT, c INT, PRIMARY KEY(c, a)) ENGINE=MEMORY;
ERROR 42000: The used table type doesn't support BLOB/TEXT columns
CREATE TABLE t1 (a INT, b TEXT, c INT) ENGINE=MEMORY;
ALTER TABLE t1 ADD PRIMARY KEY (a, c);
ERROR 42000: The used table type doesn't support BLOB/TEXT columns
ALTER TABLE t1 ADD INDEX idx (c, a);
ERROR 42000: The used table type doesn't support BLOB/TEXT columns
DROP TABLE t1;
#
# PS-3940: Engine can be changed to innodb and back
#
CREATE TABLE `t1` (
`id` INT NOT NULL AUTO_INCREMENT,
`json_column` TEXT,
PRIMARY KEY (`id`)
) ENGINE=MEMORY;
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `id` int NOT NULL AUTO_INCREMENT,
  `json_column` text,
  PRIMARY KEY (`id`)
) ENGINE=MEMORY DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci
ALTER TABLE  t1 ENGINE=INNODB;
ALTER TABLE  t1 ENGINE=MEMORY;
#
# PS-3943: Adding additional columns won't change the key_block size
#
ALTER TABLE t1 MODIFY json_column BLOB;
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `id` int NOT NULL AUTO_INCREMENT,
  `json_column` blob,
  PRIMARY KEY (`id`)
) ENGINE=MEMORY DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci
ALTER TABLE t1 MODIFY json_column TEXT;
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `id` int NOT NULL AUTO_INCREMENT,
  `json_column` text,
  PRIMARY KEY (`id`)
) ENGINE=MEMORY DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci
ALTER TABLE t1 MODIFY json_column BLOB;
ALTER TABLE t1 MODIFY json_column TEXT;
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `id` int NOT NULL AUTO_INCREMENT,
  `json_column` text,
  PRIMARY KEY (`id`)
) ENGINE=MEMORY DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci
DROP TABLE t1;
#
# PS-3943: Explicit key_block_size is kept and doesn't change
#
CREATE TABLE `t1` (
`id` INT NOT NULL AUTO_INCREMENT,
`json_column` TEXT,
PRIMARY KEY (`id`)
) ENGINE=MEMORY KEY_BLOCK_SIZE=200;
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `id` int NOT NULL AUTO_INCREMENT,
  `json_column` text,
  PRIMARY KEY (`id`)
) ENGINE=MEMORY DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci KEY_BLOCK_SIZE=200
ALTER TABLE  t1 ENGINE=INNODB KEY_BLOCK_SIZE=0;
ALTER TABLE  t1 ENGINE=MEMORY;
ALTER TABLE t1 MODIFY json_column BLOB;
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `id` int NOT NULL AUTO_INCREMENT,
  `json_column` blob,
  PRIMARY KEY (`id`)
) ENGINE=MEMORY DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci
ALTER TABLE t1 MODIFY json_column TEXT;
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `id` int NOT NULL AUTO_INCREMENT,
  `json_column` text,
  PRIMARY KEY (`id`)
) ENGINE=MEMORY DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci
DROP TABLE t1;
