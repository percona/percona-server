CREATE TABLE t (a INT, b INT, c INT, d INT, e INT, PRIMARY KEY(a, b, c, d), KEY(b, d)) ENGINE=innodb;
# Since ANALYZE TABLE only reads a subset of the data, the statistics for
# table t depends on the row order. And since the INSERT INTO ... SELECT
# may be executed using different execution plans, we've added ORDER BY
# to ensure that we rows has the same order every time. If not, the
# estimated number of rows in EXPLAIN may change on different platforms.
ANALYZE TABLE t;
Table	Op	Msg_type	Msg_text
test.t	analyze	status	OK
set optimizer_switch = 'skip_scan=on';
EXPLAIN FORMAT=TREE SELECT b, d FROM t WHERE d < 2;
EXPLAIN
-> Covering index skip scan on t using b over d < 2  (rows=833)

FLUSH STATUS;
SELECT b, d FROM t WHERE d < 2;
SHOW STATUS LIKE 'handler_read%';
Variable_name	Value
Handler_read_first	1
Handler_read_key	11
Handler_read_last	0
Handler_read_next	250
Handler_read_prev	0
Handler_read_rnd	0
Handler_read_rnd_next	0
set optimizer_switch = 'skip_scan=off';
EXPLAIN FORMAT=TREE SELECT b, d FROM t WHERE d < 2;
EXPLAIN
-> Filter: (t.d < 2)  (rows=833)
    -> Covering index scan on t using b  (rows=2500)

FLUSH STATUS;
SELECT b, d FROM t WHERE d < 2;
SHOW STATUS LIKE 'handler_read%';
Variable_name	Value
Handler_read_first	1
Handler_read_key	1
Handler_read_last	0
Handler_read_next	2500
Handler_read_prev	0
Handler_read_rnd	0
Handler_read_rnd_next	0
include/diff_tables.inc [test.skip_scan, test.no_skip_scan]
EXPLAIN FORMAT=TREE SELECT /*+ SKIP_SCAN(t) */ b, d FROM t WHERE d < 2;
EXPLAIN
-> Covering index skip scan on t using b over d < 2  (rows=833)

FLUSH STATUS;
SELECT /*+ SKIP_SCAN(t) */ b, d FROM t WHERE d < 2;
SHOW STATUS LIKE 'handler_read%';
Variable_name	Value
Handler_read_first	1
Handler_read_key	11
Handler_read_last	0
Handler_read_next	250
Handler_read_prev	0
Handler_read_rnd	0
Handler_read_rnd_next	0
include/diff_tables.inc [test.hint_skip_scan, test.no_skip_scan]
set optimizer_switch = 'skip_scan=on';
EXPLAIN FORMAT=TREE SELECT b, d FROM t WHERE d > 4;
EXPLAIN
-> Covering index skip scan on t using b over 4 < d  (rows=833)

FLUSH STATUS;
SELECT b, d FROM t WHERE d > 4;
SHOW STATUS LIKE 'handler_read%';
Variable_name	Value
Handler_read_first	1
Handler_read_key	11
Handler_read_last	0
Handler_read_next	1500
Handler_read_prev	0
Handler_read_rnd	0
Handler_read_rnd_next	0
set optimizer_switch = 'skip_scan=off';
EXPLAIN FORMAT=TREE SELECT b, d FROM t WHERE d > 4;
EXPLAIN
-> Filter: (t.d > 4)  (rows=833)
    -> Covering index scan on t using b  (rows=2500)

FLUSH STATUS;
SELECT b, d FROM t WHERE d > 4;
SHOW STATUS LIKE 'handler_read%';
Variable_name	Value
Handler_read_first	1
Handler_read_key	1
Handler_read_last	0
Handler_read_next	2500
Handler_read_prev	0
Handler_read_rnd	0
Handler_read_rnd_next	0
include/diff_tables.inc [test.skip_scan, test.no_skip_scan]
EXPLAIN FORMAT=TREE SELECT /*+ SKIP_SCAN(t) */ b, d FROM t WHERE d > 4;
EXPLAIN
-> Covering index skip scan on t using b over 4 < d  (rows=833)

FLUSH STATUS;
SELECT /*+ SKIP_SCAN(t) */ b, d FROM t WHERE d > 4;
SHOW STATUS LIKE 'handler_read%';
Variable_name	Value
Handler_read_first	1
Handler_read_key	11
Handler_read_last	0
Handler_read_next	1500
Handler_read_prev	0
Handler_read_rnd	0
Handler_read_rnd_next	0
include/diff_tables.inc [test.hint_skip_scan, test.no_skip_scan]
set optimizer_switch = 'skip_scan=on';
EXPLAIN FORMAT=TREE SELECT a, b, c, d FROM t WHERE a = 5 AND d <= 3;
EXPLAIN
-> Filter: (t.d <= 3)  (rows=83.3)
    -> Covering index lookup on t using PRIMARY (a=5)  (rows=250)

FLUSH STATUS;
SELECT a, b, c, d FROM t WHERE a = 5 AND d <= 3;
SHOW STATUS LIKE 'handler_read%';
Variable_name	Value
Handler_read_first	0
Handler_read_key	1
Handler_read_last	0
Handler_read_next	250
Handler_read_prev	0
Handler_read_rnd	0
Handler_read_rnd_next	0
set optimizer_switch = 'skip_scan=off';
EXPLAIN FORMAT=TREE SELECT a, b, c, d FROM t WHERE a = 5 AND d <= 3;
EXPLAIN
-> Filter: (t.d <= 3)  (rows=83.3)
    -> Covering index lookup on t using PRIMARY (a=5)  (rows=250)

FLUSH STATUS;
SELECT a, b, c, d FROM t WHERE a = 5 AND d <= 3;
SHOW STATUS LIKE 'handler_read%';
Variable_name	Value
Handler_read_first	0
Handler_read_key	1
Handler_read_last	0
Handler_read_next	250
Handler_read_prev	0
Handler_read_rnd	0
Handler_read_rnd_next	0
include/diff_tables.inc [test.skip_scan, test.no_skip_scan]
EXPLAIN FORMAT=TREE SELECT /*+ SKIP_SCAN(t) */ a, b, c, d FROM t WHERE a = 5 AND d <= 3;
EXPLAIN
-> Filter: (t.d <= 3)  (rows=83.3)
    -> Covering index lookup on t using PRIMARY (a=5)  (rows=250)

FLUSH STATUS;
SELECT /*+ SKIP_SCAN(t) */ a, b, c, d FROM t WHERE a = 5 AND d <= 3;
SHOW STATUS LIKE 'handler_read%';
Variable_name	Value
Handler_read_first	0
Handler_read_key	1
Handler_read_last	0
Handler_read_next	250
Handler_read_prev	0
Handler_read_rnd	0
Handler_read_rnd_next	0
include/diff_tables.inc [test.hint_skip_scan, test.no_skip_scan]
set optimizer_switch = 'skip_scan=on';
EXPLAIN FORMAT=TREE SELECT a, b, c, d FROM t WHERE a = 5 AND d >= 98;
EXPLAIN
-> Filter: (t.d >= 98)  (rows=83.3)
    -> Covering index lookup on t using PRIMARY (a=5)  (rows=250)

FLUSH STATUS;
SELECT a, b, c, d FROM t WHERE a = 5 AND d >= 98;
SHOW STATUS LIKE 'handler_read%';
Variable_name	Value
Handler_read_first	0
Handler_read_key	1
Handler_read_last	0
Handler_read_next	250
Handler_read_prev	0
Handler_read_rnd	0
Handler_read_rnd_next	0
set optimizer_switch = 'skip_scan=off';
EXPLAIN FORMAT=TREE SELECT a, b, c, d FROM t WHERE a = 5 AND d >= 98;
EXPLAIN
-> Filter: (t.d >= 98)  (rows=83.3)
    -> Covering index lookup on t using PRIMARY (a=5)  (rows=250)

FLUSH STATUS;
SELECT a, b, c, d FROM t WHERE a = 5 AND d >= 98;
SHOW STATUS LIKE 'handler_read%';
Variable_name	Value
Handler_read_first	0
Handler_read_key	1
Handler_read_last	0
Handler_read_next	250
Handler_read_prev	0
Handler_read_rnd	0
Handler_read_rnd_next	0
include/diff_tables.inc [test.skip_scan, test.no_skip_scan]
EXPLAIN FORMAT=TREE SELECT /*+ SKIP_SCAN(t) */ a, b, c, d FROM t WHERE a = 5 AND d >= 98;
EXPLAIN
-> Filter: (t.d >= 98)  (rows=83.3)
    -> Covering index lookup on t using PRIMARY (a=5)  (rows=250)

FLUSH STATUS;
SELECT /*+ SKIP_SCAN(t) */ a, b, c, d FROM t WHERE a = 5 AND d >= 98;
SHOW STATUS LIKE 'handler_read%';
Variable_name	Value
Handler_read_first	0
Handler_read_key	1
Handler_read_last	0
Handler_read_next	250
Handler_read_prev	0
Handler_read_rnd	0
Handler_read_rnd_next	0
include/diff_tables.inc [test.hint_skip_scan, test.no_skip_scan]
set optimizer_switch = 'skip_scan=on';
EXPLAIN FORMAT=TREE SELECT a, b, c, d FROM t WHERE a IN (1, 5) AND d >= 98;
EXPLAIN
-> Filter: (t.d >= 98)  (rows=167)
    -> Covering index range scan on t using PRIMARY over (a = 1) OR (a = 5)  (rows=500)

FLUSH STATUS;
SELECT a, b, c, d FROM t WHERE a IN (1, 5) AND d >= 98;
SHOW STATUS LIKE 'handler_read%';
Variable_name	Value
Handler_read_first	0
Handler_read_key	2
Handler_read_last	0
Handler_read_next	500
Handler_read_prev	0
Handler_read_rnd	0
Handler_read_rnd_next	0
set optimizer_switch = 'skip_scan=off';
EXPLAIN FORMAT=TREE SELECT a, b, c, d FROM t WHERE a IN (1, 5) AND d >= 98;
EXPLAIN
-> Filter: (t.d >= 98)  (rows=167)
    -> Covering index range scan on t using PRIMARY over (a = 1) OR (a = 5)  (rows=500)

FLUSH STATUS;
SELECT a, b, c, d FROM t WHERE a IN (1, 5) AND d >= 98;
SHOW STATUS LIKE 'handler_read%';
Variable_name	Value
Handler_read_first	0
Handler_read_key	2
Handler_read_last	0
Handler_read_next	500
Handler_read_prev	0
Handler_read_rnd	0
Handler_read_rnd_next	0
include/diff_tables.inc [test.skip_scan, test.no_skip_scan]
EXPLAIN FORMAT=TREE SELECT /*+ SKIP_SCAN(t) */ a, b, c, d FROM t WHERE a IN (1, 5) AND d >= 98;
EXPLAIN
-> Filter: (t.d >= 98)  (rows=167)
    -> Covering index range scan on t using PRIMARY over (a = 1) OR (a = 5)  (rows=500)

FLUSH STATUS;
SELECT /*+ SKIP_SCAN(t) */ a, b, c, d FROM t WHERE a IN (1, 5) AND d >= 98;
SHOW STATUS LIKE 'handler_read%';
Variable_name	Value
Handler_read_first	0
Handler_read_key	2
Handler_read_last	0
Handler_read_next	500
Handler_read_prev	0
Handler_read_rnd	0
Handler_read_rnd_next	0
include/diff_tables.inc [test.hint_skip_scan, test.no_skip_scan]
set optimizer_switch = 'skip_scan=on';
EXPLAIN FORMAT=TREE SELECT a, b, c, d FROM t WHERE a IN (1, 3, 5) AND d >= 98;
EXPLAIN
-> Filter: (t.d >= 98)  (rows=250)
    -> Covering index range scan on t using PRIMARY over (a = 1) OR (a = 3) OR (a = 5)  (rows=750)

FLUSH STATUS;
SELECT a, b, c, d FROM t WHERE a IN (1, 3, 5) AND d >= 98;
SHOW STATUS LIKE 'handler_read%';
Variable_name	Value
Handler_read_first	0
Handler_read_key	3
Handler_read_last	0
Handler_read_next	750
Handler_read_prev	0
Handler_read_rnd	0
Handler_read_rnd_next	0
set optimizer_switch = 'skip_scan=off';
EXPLAIN FORMAT=TREE SELECT a, b, c, d FROM t WHERE a IN (1, 3, 5) AND d >= 98;
EXPLAIN
-> Filter: (t.d >= 98)  (rows=250)
    -> Covering index range scan on t using PRIMARY over (a = 1) OR (a = 3) OR (a = 5)  (rows=750)

FLUSH STATUS;
SELECT a, b, c, d FROM t WHERE a IN (1, 3, 5) AND d >= 98;
SHOW STATUS LIKE 'handler_read%';
Variable_name	Value
Handler_read_first	0
Handler_read_key	3
Handler_read_last	0
Handler_read_next	750
Handler_read_prev	0
Handler_read_rnd	0
Handler_read_rnd_next	0
include/diff_tables.inc [test.skip_scan, test.no_skip_scan]
EXPLAIN FORMAT=TREE SELECT /*+ SKIP_SCAN(t) */ a, b, c, d FROM t WHERE a IN (1, 3, 5) AND d >= 98;
EXPLAIN
-> Filter: (t.d >= 98)  (rows=250)
    -> Covering index range scan on t using PRIMARY over (a = 1) OR (a = 3) OR (a = 5)  (rows=750)

FLUSH STATUS;
SELECT /*+ SKIP_SCAN(t) */ a, b, c, d FROM t WHERE a IN (1, 3, 5) AND d >= 98;
SHOW STATUS LIKE 'handler_read%';
Variable_name	Value
Handler_read_first	0
Handler_read_key	3
Handler_read_last	0
Handler_read_next	750
Handler_read_prev	0
Handler_read_rnd	0
Handler_read_rnd_next	0
include/diff_tables.inc [test.hint_skip_scan, test.no_skip_scan]
set optimizer_switch = 'skip_scan=on';
EXPLAIN FORMAT=TREE SELECT a, b, c, d FROM t WHERE a IN (1, 5) AND b IN (1, 2) AND d >= 98;
EXPLAIN
-> Filter: (t.a in (1,5))  (rows=66.7)
    -> Covering index range scan on t using b over (b = 1 AND 98 <= d AND 1 <= a) OR (b = 2 AND 98 <= d AND 1 <= a)  (rows=2)

FLUSH STATUS;
SELECT a, b, c, d FROM t WHERE a IN (1, 5) AND b IN (1, 2) AND d >= 98;
SHOW STATUS LIKE 'handler_read%';
Variable_name	Value
Handler_read_first	0
Handler_read_key	2
Handler_read_last	0
Handler_read_next	0
Handler_read_prev	0
Handler_read_rnd	0
Handler_read_rnd_next	0
set optimizer_switch = 'skip_scan=off';
EXPLAIN FORMAT=TREE SELECT a, b, c, d FROM t WHERE a IN (1, 5) AND b IN (1, 2) AND d >= 98;
EXPLAIN
-> Filter: (t.a in (1,5))  (rows=66.7)
    -> Covering index range scan on t using b over (b = 1 AND 98 <= d AND 1 <= a) OR (b = 2 AND 98 <= d AND 1 <= a)  (rows=2)

FLUSH STATUS;
SELECT a, b, c, d FROM t WHERE a IN (1, 5) AND b IN (1, 2) AND d >= 98;
SHOW STATUS LIKE 'handler_read%';
Variable_name	Value
Handler_read_first	0
Handler_read_key	2
Handler_read_last	0
Handler_read_next	0
Handler_read_prev	0
Handler_read_rnd	0
Handler_read_rnd_next	0
include/diff_tables.inc [test.skip_scan, test.no_skip_scan]
EXPLAIN FORMAT=TREE SELECT /*+ SKIP_SCAN(t) */ a, b, c, d FROM t WHERE a IN (1, 5) AND b IN (1, 2) AND d >= 98;
EXPLAIN
-> Filter: (t.a in (1,5))  (rows=66.7)
    -> Covering index range scan on t using b over (b = 1 AND 98 <= d AND 1 <= a) OR (b = 2 AND 98 <= d AND 1 <= a)  (rows=2)

FLUSH STATUS;
SELECT /*+ SKIP_SCAN(t) */ a, b, c, d FROM t WHERE a IN (1, 5) AND b IN (1, 2) AND d >= 98;
SHOW STATUS LIKE 'handler_read%';
Variable_name	Value
Handler_read_first	0
Handler_read_key	2
Handler_read_last	0
Handler_read_next	0
Handler_read_prev	0
Handler_read_rnd	0
Handler_read_rnd_next	0
include/diff_tables.inc [test.hint_skip_scan, test.no_skip_scan]
set optimizer_switch = 'skip_scan=on';
EXPLAIN FORMAT=TREE SELECT a, b, c, d FROM t WHERE a IN (1, 2, 3, 4, 5) AND b IN (1, 2, 3) AND d >= 98;
EXPLAIN
-> Filter: (t.a in (1,2,3,4,5))  (rows=250)
    -> Covering index range scan on t using b over (b = 1 AND 98 <= d AND 1 <= a) OR (b = 2 AND 98 <= d AND 1 <= a) OR (b = 3 AND 98 <= d AND 1 <= a)  (rows=3)

FLUSH STATUS;
SELECT a, b, c, d FROM t WHERE a IN (1, 2, 3, 4, 5) AND b IN (1, 2, 3) AND d >= 98;
SHOW STATUS LIKE 'handler_read%';
Variable_name	Value
Handler_read_first	0
Handler_read_key	3
Handler_read_last	0
Handler_read_next	0
Handler_read_prev	0
Handler_read_rnd	0
Handler_read_rnd_next	0
set optimizer_switch = 'skip_scan=off';
EXPLAIN FORMAT=TREE SELECT a, b, c, d FROM t WHERE a IN (1, 2, 3, 4, 5) AND b IN (1, 2, 3) AND d >= 98;
EXPLAIN
-> Filter: (t.a in (1,2,3,4,5))  (rows=250)
    -> Covering index range scan on t using b over (b = 1 AND 98 <= d AND 1 <= a) OR (b = 2 AND 98 <= d AND 1 <= a) OR (b = 3 AND 98 <= d AND 1 <= a)  (rows=3)

FLUSH STATUS;
SELECT a, b, c, d FROM t WHERE a IN (1, 2, 3, 4, 5) AND b IN (1, 2, 3) AND d >= 98;
SHOW STATUS LIKE 'handler_read%';
Variable_name	Value
Handler_read_first	0
Handler_read_key	3
Handler_read_last	0
Handler_read_next	0
Handler_read_prev	0
Handler_read_rnd	0
Handler_read_rnd_next	0
include/diff_tables.inc [test.skip_scan, test.no_skip_scan]
EXPLAIN FORMAT=TREE SELECT /*+ SKIP_SCAN(t) */ a, b, c, d FROM t WHERE a IN (1, 2, 3, 4, 5) AND b IN (1, 2, 3) AND d >= 98;
EXPLAIN
-> Filter: (t.a in (1,2,3,4,5))  (rows=250)
    -> Covering index range scan on t using b over (b = 1 AND 98 <= d AND 1 <= a) OR (b = 2 AND 98 <= d AND 1 <= a) OR (b = 3 AND 98 <= d AND 1 <= a)  (rows=3)

FLUSH STATUS;
SELECT /*+ SKIP_SCAN(t) */ a, b, c, d FROM t WHERE a IN (1, 2, 3, 4, 5) AND b IN (1, 2, 3) AND d >= 98;
SHOW STATUS LIKE 'handler_read%';
Variable_name	Value
Handler_read_first	0
Handler_read_key	3
Handler_read_last	0
Handler_read_next	0
Handler_read_prev	0
Handler_read_rnd	0
Handler_read_rnd_next	0
include/diff_tables.inc [test.hint_skip_scan, test.no_skip_scan]
set optimizer_switch = 'skip_scan=on';
EXPLAIN FORMAT=TREE SELECT a, b, c, d FROM t WHERE a = 5 AND b = 2 AND d >= 98;
EXPLAIN
-> Filter: (t.a = 5)  (rows=16.7)
    -> Covering index range scan on t using b over (b = 2 AND 98 <= d AND 5 <= a)  (rows=1)

FLUSH STATUS;
SELECT a, b, c, d FROM t WHERE a = 5 AND b = 2 AND d >= 98;
SHOW STATUS LIKE 'handler_read%';
Variable_name	Value
Handler_read_first	0
Handler_read_key	1
Handler_read_last	0
Handler_read_next	0
Handler_read_prev	0
Handler_read_rnd	0
Handler_read_rnd_next	0
set optimizer_switch = 'skip_scan=off';
EXPLAIN FORMAT=TREE SELECT a, b, c, d FROM t WHERE a = 5 AND b = 2 AND d >= 98;
EXPLAIN
-> Filter: (t.a = 5)  (rows=16.7)
    -> Covering index range scan on t using b over (b = 2 AND 98 <= d AND 5 <= a)  (rows=1)

FLUSH STATUS;
SELECT a, b, c, d FROM t WHERE a = 5 AND b = 2 AND d >= 98;
SHOW STATUS LIKE 'handler_read%';
Variable_name	Value
Handler_read_first	0
Handler_read_key	1
Handler_read_last	0
Handler_read_next	0
Handler_read_prev	0
Handler_read_rnd	0
Handler_read_rnd_next	0
include/diff_tables.inc [test.skip_scan, test.no_skip_scan]
EXPLAIN FORMAT=TREE SELECT /*+ SKIP_SCAN(t) */ a, b, c, d FROM t WHERE a = 5 AND b = 2 AND d >= 98;
EXPLAIN
-> Filter: (t.a = 5)  (rows=16.7)
    -> Covering index range scan on t using b over (b = 2 AND 98 <= d AND 5 <= a)  (rows=1)

FLUSH STATUS;
SELECT /*+ SKIP_SCAN(t) */ a, b, c, d FROM t WHERE a = 5 AND b = 2 AND d >= 98;
SHOW STATUS LIKE 'handler_read%';
Variable_name	Value
Handler_read_first	0
Handler_read_key	1
Handler_read_last	0
Handler_read_next	0
Handler_read_prev	0
Handler_read_rnd	0
Handler_read_rnd_next	0
include/diff_tables.inc [test.hint_skip_scan, test.no_skip_scan]
set optimizer_switch = 'skip_scan=on';
EXPLAIN FORMAT=TREE SELECT a+1, b, c, d FROM t WHERE a = 5 AND d < 3;
EXPLAIN
-> Filter: (t.d < 3)  (rows=83.3)
    -> Covering index lookup on t using PRIMARY (a=5)  (rows=250)

FLUSH STATUS;
SELECT a+1, b, c, d FROM t WHERE a = 5 AND d < 3;
SHOW STATUS LIKE 'handler_read%';
Variable_name	Value
Handler_read_first	0
Handler_read_key	1
Handler_read_last	0
Handler_read_next	250
Handler_read_prev	0
Handler_read_rnd	0
Handler_read_rnd_next	0
set optimizer_switch = 'skip_scan=off';
EXPLAIN FORMAT=TREE SELECT a+1, b, c, d FROM t WHERE a = 5 AND d < 3;
EXPLAIN
-> Filter: (t.d < 3)  (rows=83.3)
    -> Covering index lookup on t using PRIMARY (a=5)  (rows=250)

FLUSH STATUS;
SELECT a+1, b, c, d FROM t WHERE a = 5 AND d < 3;
SHOW STATUS LIKE 'handler_read%';
Variable_name	Value
Handler_read_first	0
Handler_read_key	1
Handler_read_last	0
Handler_read_next	250
Handler_read_prev	0
Handler_read_rnd	0
Handler_read_rnd_next	0
include/diff_tables.inc [test.skip_scan, test.no_skip_scan]
EXPLAIN FORMAT=TREE SELECT /*+ SKIP_SCAN(t) */ a+1, b, c, d FROM t WHERE a = 5 AND d < 3;
EXPLAIN
-> Filter: (t.d < 3)  (rows=83.3)
    -> Covering index lookup on t using PRIMARY (a=5)  (rows=250)

FLUSH STATUS;
SELECT /*+ SKIP_SCAN(t) */ a+1, b, c, d FROM t WHERE a = 5 AND d < 3;
SHOW STATUS LIKE 'handler_read%';
Variable_name	Value
Handler_read_first	0
Handler_read_key	1
Handler_read_last	0
Handler_read_next	250
Handler_read_prev	0
Handler_read_rnd	0
Handler_read_rnd_next	0
include/diff_tables.inc [test.hint_skip_scan, test.no_skip_scan]
set optimizer_switch = 'skip_scan=on';
EXPLAIN FORMAT=TREE SELECT b, c, d FROM t WHERE a = 5 AND d < 3;
EXPLAIN
-> Filter: (t.d < 3)  (rows=83.3)
    -> Covering index lookup on t using PRIMARY (a=5)  (rows=250)

FLUSH STATUS;
SELECT b, c, d FROM t WHERE a = 5 AND d < 3;
SHOW STATUS LIKE 'handler_read%';
Variable_name	Value
Handler_read_first	0
Handler_read_key	1
Handler_read_last	0
Handler_read_next	250
Handler_read_prev	0
Handler_read_rnd	0
Handler_read_rnd_next	0
set optimizer_switch = 'skip_scan=off';
EXPLAIN FORMAT=TREE SELECT b, c, d FROM t WHERE a = 5 AND d < 3;
EXPLAIN
-> Filter: (t.d < 3)  (rows=83.3)
    -> Covering index lookup on t using PRIMARY (a=5)  (rows=250)

FLUSH STATUS;
SELECT b, c, d FROM t WHERE a = 5 AND d < 3;
SHOW STATUS LIKE 'handler_read%';
Variable_name	Value
Handler_read_first	0
Handler_read_key	1
Handler_read_last	0
Handler_read_next	250
Handler_read_prev	0
Handler_read_rnd	0
Handler_read_rnd_next	0
include/diff_tables.inc [test.skip_scan, test.no_skip_scan]
EXPLAIN FORMAT=TREE SELECT /*+ SKIP_SCAN(t) */ b, c, d FROM t WHERE a = 5 AND d < 3;
EXPLAIN
-> Filter: (t.d < 3)  (rows=83.3)
    -> Covering index lookup on t using PRIMARY (a=5)  (rows=250)

FLUSH STATUS;
SELECT /*+ SKIP_SCAN(t) */ b, c, d FROM t WHERE a = 5 AND d < 3;
SHOW STATUS LIKE 'handler_read%';
Variable_name	Value
Handler_read_first	0
Handler_read_key	1
Handler_read_last	0
Handler_read_next	250
Handler_read_prev	0
Handler_read_rnd	0
Handler_read_rnd_next	0
include/diff_tables.inc [test.hint_skip_scan, test.no_skip_scan]
set optimizer_switch = 'skip_scan=on';
EXPLAIN FORMAT=TREE SELECT a, b, c, d FROM t WHERE a = b AND d >= 98;
EXPLAIN
-> Filter: (t.a = t.b)  (rows=167)
    -> Covering index skip scan on t using b over 98 <= d  (rows=833)

FLUSH STATUS;
SELECT a, b, c, d FROM t WHERE a = b AND d >= 98;
SHOW STATUS LIKE 'handler_read%';
Variable_name	Value
Handler_read_first	1
Handler_read_key	11
Handler_read_last	0
Handler_read_next	0
Handler_read_prev	0
Handler_read_rnd	0
Handler_read_rnd_next	0
set optimizer_switch = 'skip_scan=off';
EXPLAIN FORMAT=TREE SELECT a, b, c, d FROM t WHERE a = b AND d >= 98;
EXPLAIN
-> Filter: ((t.a = t.b) and (t.d >= 98))  (rows=167)
    -> Covering index scan on t using b  (rows=2500)

FLUSH STATUS;
SELECT a, b, c, d FROM t WHERE a = b AND d >= 98;
SHOW STATUS LIKE 'handler_read%';
Variable_name	Value
Handler_read_first	1
Handler_read_key	1
Handler_read_last	0
Handler_read_next	2500
Handler_read_prev	0
Handler_read_rnd	0
Handler_read_rnd_next	0
include/diff_tables.inc [test.skip_scan, test.no_skip_scan]
EXPLAIN FORMAT=TREE SELECT /*+ SKIP_SCAN(t) */ a, b, c, d FROM t WHERE a = b AND d >= 98;
EXPLAIN
-> Filter: (t.a = t.b)  (rows=167)
    -> Covering index skip scan on t using b over 98 <= d  (rows=833)

FLUSH STATUS;
SELECT /*+ SKIP_SCAN(t) */ a, b, c, d FROM t WHERE a = b AND d >= 98;
SHOW STATUS LIKE 'handler_read%';
Variable_name	Value
Handler_read_first	1
Handler_read_key	11
Handler_read_last	0
Handler_read_next	0
Handler_read_prev	0
Handler_read_rnd	0
Handler_read_rnd_next	0
include/diff_tables.inc [test.hint_skip_scan, test.no_skip_scan]
set optimizer_switch = 'skip_scan=on';
EXPLAIN FORMAT=TREE SELECT b, c, d FROM t WHERE a = 5 AND c > 10 AND d < 3;
EXPLAIN
-> Filter: ((t.c > 10) and (t.d < 3))  (rows=27.8)
    -> Covering index lookup on t using PRIMARY (a=5)  (rows=250)

FLUSH STATUS;
SELECT b, c, d FROM t WHERE a = 5 AND c > 10 AND d < 3;
SHOW STATUS LIKE 'handler_read%';
Variable_name	Value
Handler_read_first	0
Handler_read_key	1
Handler_read_last	0
Handler_read_next	250
Handler_read_prev	0
Handler_read_rnd	0
Handler_read_rnd_next	0
set optimizer_switch = 'skip_scan=off';
EXPLAIN FORMAT=TREE SELECT b, c, d FROM t WHERE a = 5 AND c > 10 AND d < 3;
EXPLAIN
-> Filter: ((t.c > 10) and (t.d < 3))  (rows=27.8)
    -> Covering index lookup on t using PRIMARY (a=5)  (rows=250)

FLUSH STATUS;
SELECT b, c, d FROM t WHERE a = 5 AND c > 10 AND d < 3;
SHOW STATUS LIKE 'handler_read%';
Variable_name	Value
Handler_read_first	0
Handler_read_key	1
Handler_read_last	0
Handler_read_next	250
Handler_read_prev	0
Handler_read_rnd	0
Handler_read_rnd_next	0
include/diff_tables.inc [test.skip_scan, test.no_skip_scan]
EXPLAIN FORMAT=TREE SELECT /*+ SKIP_SCAN(t) */ b, c, d FROM t WHERE a = 5 AND c > 10 AND d < 3;
EXPLAIN
-> Filter: ((t.c > 10) and (t.d < 3))  (rows=27.8)
    -> Covering index lookup on t using PRIMARY (a=5)  (rows=250)

FLUSH STATUS;
SELECT /*+ SKIP_SCAN(t) */ b, c, d FROM t WHERE a = 5 AND c > 10 AND d < 3;
SHOW STATUS LIKE 'handler_read%';
Variable_name	Value
Handler_read_first	0
Handler_read_key	1
Handler_read_last	0
Handler_read_next	250
Handler_read_prev	0
Handler_read_rnd	0
Handler_read_rnd_next	0
include/diff_tables.inc [test.hint_skip_scan, test.no_skip_scan]
set optimizer_switch = 'skip_scan=on';
EXPLAIN FORMAT=TREE SELECT b, c, d FROM t WHERE a = 5 AND c > 10 AND d < 3 ORDER BY d, c;
EXPLAIN
-> Sort: t.d, t.c  (rows=27.8)
    -> Filter: ((t.c > 10) and (t.d < 3))  (rows=27.8)
        -> Covering index lookup on t using PRIMARY (a=5)  (rows=250)

FLUSH STATUS;
SELECT b, c, d FROM t WHERE a = 5 AND c > 10 AND d < 3 ORDER BY d, c;
SHOW STATUS LIKE 'handler_read%';
Variable_name	Value
Handler_read_first	0
Handler_read_key	1
Handler_read_last	0
Handler_read_next	250
Handler_read_prev	0
Handler_read_rnd	0
Handler_read_rnd_next	0
set optimizer_switch = 'skip_scan=off';
EXPLAIN FORMAT=TREE SELECT b, c, d FROM t WHERE a = 5 AND c > 10 AND d < 3 ORDER BY d, c;
EXPLAIN
-> Sort: t.d, t.c  (rows=27.8)
    -> Filter: ((t.c > 10) and (t.d < 3))  (rows=27.8)
        -> Covering index lookup on t using PRIMARY (a=5)  (rows=250)

FLUSH STATUS;
SELECT b, c, d FROM t WHERE a = 5 AND c > 10 AND d < 3 ORDER BY d, c;
SHOW STATUS LIKE 'handler_read%';
Variable_name	Value
Handler_read_first	0
Handler_read_key	1
Handler_read_last	0
Handler_read_next	250
Handler_read_prev	0
Handler_read_rnd	0
Handler_read_rnd_next	0
include/diff_tables.inc [test.skip_scan, test.no_skip_scan]
EXPLAIN FORMAT=TREE SELECT /*+ SKIP_SCAN(t) */ b, c, d FROM t WHERE a = 5 AND c > 10 AND d < 3 ORDER BY d, c;
EXPLAIN
-> Sort: t.d, t.c  (rows=27.8)
    -> Filter: ((t.c > 10) and (t.d < 3))  (rows=27.8)
        -> Covering index lookup on t using PRIMARY (a=5)  (rows=250)

FLUSH STATUS;
SELECT /*+ SKIP_SCAN(t) */ b, c, d FROM t WHERE a = 5 AND c > 10 AND d < 3 ORDER BY d, c;
SHOW STATUS LIKE 'handler_read%';
Variable_name	Value
Handler_read_first	0
Handler_read_key	1
Handler_read_last	0
Handler_read_next	250
Handler_read_prev	0
Handler_read_rnd	0
Handler_read_rnd_next	0
include/diff_tables.inc [test.hint_skip_scan, test.no_skip_scan]
set optimizer_switch = 'skip_scan=on';
EXPLAIN FORMAT=TREE SELECT b, c, d FROM t WHERE a = 5 AND c > 1 AND d < 3 ORDER BY d, c * -1;
EXPLAIN
-> Sort: t.d, (t.c * -(1))  (rows=27.8)
    -> Filter: ((t.c > 1) and (t.d < 3))  (rows=27.8)
        -> Covering index lookup on t using PRIMARY (a=5)  (rows=250)

FLUSH STATUS;
SELECT b, c, d FROM t WHERE a = 5 AND c > 1 AND d < 3 ORDER BY d, c * -1;
SHOW STATUS LIKE 'handler_read%';
Variable_name	Value
Handler_read_first	0
Handler_read_key	1
Handler_read_last	0
Handler_read_next	250
Handler_read_prev	0
Handler_read_rnd	0
Handler_read_rnd_next	0
set optimizer_switch = 'skip_scan=off';
EXPLAIN FORMAT=TREE SELECT b, c, d FROM t WHERE a = 5 AND c > 1 AND d < 3 ORDER BY d, c * -1;
EXPLAIN
-> Sort: t.d, (t.c * -(1))  (rows=27.8)
    -> Filter: ((t.c > 1) and (t.d < 3))  (rows=27.8)
        -> Covering index lookup on t using PRIMARY (a=5)  (rows=250)

FLUSH STATUS;
SELECT b, c, d FROM t WHERE a = 5 AND c > 1 AND d < 3 ORDER BY d, c * -1;
SHOW STATUS LIKE 'handler_read%';
Variable_name	Value
Handler_read_first	0
Handler_read_key	1
Handler_read_last	0
Handler_read_next	250
Handler_read_prev	0
Handler_read_rnd	0
Handler_read_rnd_next	0
include/diff_tables.inc [test.skip_scan, test.no_skip_scan]
EXPLAIN FORMAT=TREE SELECT /*+ SKIP_SCAN(t) */ b, c, d FROM t WHERE a = 5 AND c > 1 AND d < 3 ORDER BY d, c * -1;
EXPLAIN
-> Sort: t.d, (t.c * -(1))  (rows=27.8)
    -> Filter: ((t.c > 1) and (t.d < 3))  (rows=27.8)
        -> Covering index lookup on t using PRIMARY (a=5)  (rows=250)

FLUSH STATUS;
SELECT /*+ SKIP_SCAN(t) */ b, c, d FROM t WHERE a = 5 AND c > 1 AND d < 3 ORDER BY d, c * -1;
SHOW STATUS LIKE 'handler_read%';
Variable_name	Value
Handler_read_first	0
Handler_read_key	1
Handler_read_last	0
Handler_read_next	250
Handler_read_prev	0
Handler_read_rnd	0
Handler_read_rnd_next	0
include/diff_tables.inc [test.hint_skip_scan, test.no_skip_scan]
set optimizer_switch = 'skip_scan=on';
EXPLAIN FORMAT=TREE SELECT e FROM t WHERE a = 5 AND d <= 3;
EXPLAIN
-> Filter: (t.d <= 3)  (rows=83.3)
    -> Index lookup on t using PRIMARY (a=5)  (rows=250)

FLUSH STATUS;
SELECT e FROM t WHERE a = 5 AND d <= 3;
SHOW STATUS LIKE 'handler_read%';
Variable_name	Value
Handler_read_first	0
Handler_read_key	1
Handler_read_last	0
Handler_read_next	250
Handler_read_prev	0
Handler_read_rnd	0
Handler_read_rnd_next	0
set optimizer_switch = 'skip_scan=off';
EXPLAIN FORMAT=TREE SELECT e FROM t WHERE a = 5 AND d <= 3;
EXPLAIN
-> Filter: (t.d <= 3)  (rows=83.3)
    -> Index lookup on t using PRIMARY (a=5)  (rows=250)

FLUSH STATUS;
SELECT e FROM t WHERE a = 5 AND d <= 3;
SHOW STATUS LIKE 'handler_read%';
Variable_name	Value
Handler_read_first	0
Handler_read_key	1
Handler_read_last	0
Handler_read_next	250
Handler_read_prev	0
Handler_read_rnd	0
Handler_read_rnd_next	0
include/diff_tables.inc [test.skip_scan, test.no_skip_scan]
EXPLAIN FORMAT=TREE SELECT /*+ SKIP_SCAN(t) */ e FROM t WHERE a = 5 AND d <= 3;
EXPLAIN
-> Filter: (t.d <= 3)  (rows=83.3)
    -> Index lookup on t using PRIMARY (a=5)  (rows=250)

FLUSH STATUS;
SELECT /*+ SKIP_SCAN(t) */ e FROM t WHERE a = 5 AND d <= 3;
SHOW STATUS LIKE 'handler_read%';
Variable_name	Value
Handler_read_first	0
Handler_read_key	1
Handler_read_last	0
Handler_read_next	250
Handler_read_prev	0
Handler_read_rnd	0
Handler_read_rnd_next	0
include/diff_tables.inc [test.hint_skip_scan, test.no_skip_scan]
set optimizer_switch = 'skip_scan=on';
EXPLAIN FORMAT=TREE SELECT b, c, d FROM t WHERE a = 5 AND c > 10 AND d < 3 ORDER BY d, c, e;
EXPLAIN
-> Sort: t.d, t.c, t.e  (rows=27.8)
    -> Filter: ((t.c > 10) and (t.d < 3))  (rows=27.8)
        -> Index lookup on t using PRIMARY (a=5)  (rows=250)

FLUSH STATUS;
SELECT b, c, d FROM t WHERE a = 5 AND c > 10 AND d < 3 ORDER BY d, c, e;
SHOW STATUS LIKE 'handler_read%';
Variable_name	Value
Handler_read_first	0
Handler_read_key	1
Handler_read_last	0
Handler_read_next	250
Handler_read_prev	0
Handler_read_rnd	0
Handler_read_rnd_next	0
set optimizer_switch = 'skip_scan=off';
EXPLAIN FORMAT=TREE SELECT b, c, d FROM t WHERE a = 5 AND c > 10 AND d < 3 ORDER BY d, c, e;
EXPLAIN
-> Sort: t.d, t.c, t.e  (rows=27.8)
    -> Filter: ((t.c > 10) and (t.d < 3))  (rows=27.8)
        -> Index lookup on t using PRIMARY (a=5)  (rows=250)

FLUSH STATUS;
SELECT b, c, d FROM t WHERE a = 5 AND c > 10 AND d < 3 ORDER BY d, c, e;
SHOW STATUS LIKE 'handler_read%';
Variable_name	Value
Handler_read_first	0
Handler_read_key	1
Handler_read_last	0
Handler_read_next	250
Handler_read_prev	0
Handler_read_rnd	0
Handler_read_rnd_next	0
include/diff_tables.inc [test.skip_scan, test.no_skip_scan]
EXPLAIN FORMAT=TREE SELECT /*+ SKIP_SCAN(t) */ b, c, d FROM t WHERE a = 5 AND c > 10 AND d < 3 ORDER BY d, c, e;
EXPLAIN
-> Sort: t.d, t.c, t.e  (rows=27.8)
    -> Filter: ((t.c > 10) and (t.d < 3))  (rows=27.8)
        -> Index lookup on t using PRIMARY (a=5)  (rows=250)

FLUSH STATUS;
SELECT /*+ SKIP_SCAN(t) */ b, c, d FROM t WHERE a = 5 AND c > 10 AND d < 3 ORDER BY d, c, e;
SHOW STATUS LIKE 'handler_read%';
Variable_name	Value
Handler_read_first	0
Handler_read_key	1
Handler_read_last	0
Handler_read_next	250
Handler_read_prev	0
Handler_read_rnd	0
Handler_read_rnd_next	0
include/diff_tables.inc [test.hint_skip_scan, test.no_skip_scan]
set optimizer_switch = 'skip_scan=on';
EXPLAIN FORMAT=TREE SELECT count(a), count(b), count(c)  FROM t WHERE a = 5 AND c > 10 AND d < 3;
EXPLAIN
-> Aggregate: count(t.a), count(t.b), count(t.c)  (rows=1)
    -> Filter: ((t.c > 10) and (t.d < 3))  (rows=27.8)
        -> Covering index lookup on t using PRIMARY (a=5)  (rows=250)

FLUSH STATUS;
SELECT count(a), count(b), count(c)  FROM t WHERE a = 5 AND c > 10 AND d < 3;
SHOW STATUS LIKE 'handler_read%';
Variable_name	Value
Handler_read_first	0
Handler_read_key	1
Handler_read_last	0
Handler_read_next	250
Handler_read_prev	0
Handler_read_rnd	0
Handler_read_rnd_next	0
set optimizer_switch = 'skip_scan=off';
EXPLAIN FORMAT=TREE SELECT count(a), count(b), count(c)  FROM t WHERE a = 5 AND c > 10 AND d < 3;
EXPLAIN
-> Aggregate: count(t.a), count(t.b), count(t.c)  (rows=1)
    -> Filter: ((t.c > 10) and (t.d < 3))  (rows=27.8)
        -> Covering index lookup on t using PRIMARY (a=5)  (rows=250)

FLUSH STATUS;
SELECT count(a), count(b), count(c)  FROM t WHERE a = 5 AND c > 10 AND d < 3;
SHOW STATUS LIKE 'handler_read%';
Variable_name	Value
Handler_read_first	0
Handler_read_key	1
Handler_read_last	0
Handler_read_next	250
Handler_read_prev	0
Handler_read_rnd	0
Handler_read_rnd_next	0
include/diff_tables.inc [test.skip_scan, test.no_skip_scan]
EXPLAIN FORMAT=TREE SELECT /*+ SKIP_SCAN(t) */ count(a), count(b), count(c) FROM t WHERE a = 5 AND c > 10 AND d < 3;
EXPLAIN
-> Aggregate: count(t.a), count(t.b), count(t.c)  (rows=1)
    -> Filter: ((t.c > 10) and (t.d < 3))  (rows=27.8)
        -> Covering index lookup on t using PRIMARY (a=5)  (rows=250)

FLUSH STATUS;
SELECT /*+ SKIP_SCAN(t) */ count(a), count(b), count(c) FROM t WHERE a = 5 AND c > 10 AND d < 3;
SHOW STATUS LIKE 'handler_read%';
Variable_name	Value
Handler_read_first	0
Handler_read_key	1
Handler_read_last	0
Handler_read_next	250
Handler_read_prev	0
Handler_read_rnd	0
Handler_read_rnd_next	0
include/diff_tables.inc [test.hint_skip_scan, test.no_skip_scan]
set optimizer_switch = 'skip_scan=on';
EXPLAIN FORMAT=TREE SELECT min(a), max(b), min(c)  FROM t WHERE a = 5 AND c > 10 AND d < 3;
EXPLAIN
-> Aggregate: min(t.a), max(t.b), min(t.c)  (rows=1)
    -> Filter: ((t.c > 10) and (t.d < 3))  (rows=27.8)
        -> Covering index lookup on t using PRIMARY (a=5)  (rows=250)

FLUSH STATUS;
SELECT min(a), max(b), min(c)  FROM t WHERE a = 5 AND c > 10 AND d < 3;
SHOW STATUS LIKE 'handler_read%';
Variable_name	Value
Handler_read_first	0
Handler_read_key	1
Handler_read_last	0
Handler_read_next	250
Handler_read_prev	0
Handler_read_rnd	0
Handler_read_rnd_next	0
set optimizer_switch = 'skip_scan=off';
EXPLAIN FORMAT=TREE SELECT min(a), max(b), min(c)  FROM t WHERE a = 5 AND c > 10 AND d < 3;
EXPLAIN
-> Aggregate: min(t.a), max(t.b), min(t.c)  (rows=1)
    -> Filter: ((t.c > 10) and (t.d < 3))  (rows=27.8)
        -> Covering index lookup on t using PRIMARY (a=5)  (rows=250)

FLUSH STATUS;
SELECT min(a), max(b), min(c)  FROM t WHERE a = 5 AND c > 10 AND d < 3;
SHOW STATUS LIKE 'handler_read%';
Variable_name	Value
Handler_read_first	0
Handler_read_key	1
Handler_read_last	0
Handler_read_next	250
Handler_read_prev	0
Handler_read_rnd	0
Handler_read_rnd_next	0
include/diff_tables.inc [test.skip_scan, test.no_skip_scan]
EXPLAIN FORMAT=TREE SELECT /*+ SKIP_SCAN(t) */ min(a), max(b), min(c) FROM t WHERE a = 5 AND c > 10 AND d < 3;
EXPLAIN
-> Aggregate: min(t.a), max(t.b), min(t.c)  (rows=1)
    -> Filter: ((t.c > 10) and (t.d < 3))  (rows=27.8)
        -> Covering index lookup on t using PRIMARY (a=5)  (rows=250)

FLUSH STATUS;
SELECT /*+ SKIP_SCAN(t) */ min(a), max(b), min(c) FROM t WHERE a = 5 AND c > 10 AND d < 3;
SHOW STATUS LIKE 'handler_read%';
Variable_name	Value
Handler_read_first	0
Handler_read_key	1
Handler_read_last	0
Handler_read_next	250
Handler_read_prev	0
Handler_read_rnd	0
Handler_read_rnd_next	0
include/diff_tables.inc [test.hint_skip_scan, test.no_skip_scan]
set optimizer_switch = 'skip_scan=on';
EXPLAIN FORMAT=TREE SELECT sum(a), sum(b), sum(c)  FROM t WHERE a = 5 AND c > 10 AND d < 3;
EXPLAIN
-> Aggregate: sum(t.a), sum(t.b), sum(t.c)  (rows=1)
    -> Filter: ((t.c > 10) and (t.d < 3))  (rows=27.8)
        -> Covering index lookup on t using PRIMARY (a=5)  (rows=250)

FLUSH STATUS;
SELECT sum(a), sum(b), sum(c)  FROM t WHERE a = 5 AND c > 10 AND d < 3;
SHOW STATUS LIKE 'handler_read%';
Variable_name	Value
Handler_read_first	0
Handler_read_key	1
Handler_read_last	0
Handler_read_next	250
Handler_read_prev	0
Handler_read_rnd	0
Handler_read_rnd_next	0
set optimizer_switch = 'skip_scan=off';
EXPLAIN FORMAT=TREE SELECT sum(a), sum(b), sum(c)  FROM t WHERE a = 5 AND c > 10 AND d < 3;
EXPLAIN
-> Aggregate: sum(t.a), sum(t.b), sum(t.c)  (rows=1)
    -> Filter: ((t.c > 10) and (t.d < 3))  (rows=27.8)
        -> Covering index lookup on t using PRIMARY (a=5)  (rows=250)

FLUSH STATUS;
SELECT sum(a), sum(b), sum(c)  FROM t WHERE a = 5 AND c > 10 AND d < 3;
SHOW STATUS LIKE 'handler_read%';
Variable_name	Value
Handler_read_first	0
Handler_read_key	1
Handler_read_last	0
Handler_read_next	250
Handler_read_prev	0
Handler_read_rnd	0
Handler_read_rnd_next	0
include/diff_tables.inc [test.skip_scan, test.no_skip_scan]
EXPLAIN FORMAT=TREE SELECT /*+ SKIP_SCAN(t) */ sum(a), avg(b), sum(c) FROM t WHERE a = 5 AND c > 10 AND d < 3;
EXPLAIN
-> Aggregate: sum(t.a), avg(t.b), sum(t.c)  (rows=1)
    -> Filter: ((t.c > 10) and (t.d < 3))  (rows=27.8)
        -> Covering index lookup on t using PRIMARY (a=5)  (rows=250)

FLUSH STATUS;
SELECT /*+ SKIP_SCAN(t) */ sum(a), avg(b), sum(c) FROM t WHERE a = 5 AND c > 10 AND d < 3;
SHOW STATUS LIKE 'handler_read%';
Variable_name	Value
Handler_read_first	0
Handler_read_key	1
Handler_read_last	0
Handler_read_next	250
Handler_read_prev	0
Handler_read_rnd	0
Handler_read_rnd_next	0
include/diff_tables.inc [test.hint_skip_scan, test.no_skip_scan]
set optimizer_switch = 'skip_scan=on';
EXPLAIN FORMAT=TREE SELECT count(*) FROM t WHERE d < 2;;
EXPLAIN
-> Aggregate: count(0)  (rows=1)
    -> Covering index skip scan on t using b over d < 2  (rows=833)

FLUSH STATUS;
SELECT count(*) FROM t WHERE d < 2;;
SHOW STATUS LIKE 'handler_read%';
Variable_name	Value
Handler_read_first	1
Handler_read_key	11
Handler_read_last	0
Handler_read_next	250
Handler_read_prev	0
Handler_read_rnd	0
Handler_read_rnd_next	0
set optimizer_switch = 'skip_scan=off';
EXPLAIN FORMAT=TREE SELECT count(*) FROM t WHERE d < 2;;
EXPLAIN
-> Aggregate: count(0)  (rows=1)
    -> Filter: (t.d < 2)  (rows=833)
        -> Covering index scan on t using b  (rows=2500)

FLUSH STATUS;
SELECT count(*) FROM t WHERE d < 2;;
SHOW STATUS LIKE 'handler_read%';
Variable_name	Value
Handler_read_first	1
Handler_read_key	1
Handler_read_last	0
Handler_read_next	2500
Handler_read_prev	0
Handler_read_rnd	0
Handler_read_rnd_next	0
include/diff_tables.inc [test.skip_scan, test.no_skip_scan]
EXPLAIN FORMAT=TREE SELECT /*+ SKIP_SCAN(t) */ count(*) FROM t WHERE d < 2;;
EXPLAIN
-> Aggregate: count(0)  (rows=1)
    -> Covering index skip scan on t using b over d < 2  (rows=833)

FLUSH STATUS;
SELECT /*+ SKIP_SCAN(t) */ count(*) FROM t WHERE d < 2;;
SHOW STATUS LIKE 'handler_read%';
Variable_name	Value
Handler_read_first	1
Handler_read_key	11
Handler_read_last	0
Handler_read_next	250
Handler_read_prev	0
Handler_read_rnd	0
Handler_read_rnd_next	0
include/diff_tables.inc [test.hint_skip_scan, test.no_skip_scan]
Testing DESC index with skip scan.
ALTER TABLE t DROP PRIMARY KEY;
ALTER TABLE t DROP KEY b;
ALTER TABLE t ADD PRIMARY KEY(a DESC, b, c DESC, d);
ANALYZE TABLE t;
Table	Op	Msg_type	Msg_text
test.t	analyze	status	OK
set optimizer_switch = 'skip_scan=on';
EXPLAIN FORMAT=TREE SELECT b, c, d FROM t WHERE a = 5 AND c > 3 AND d < 3;;
EXPLAIN
-> Filter: ((t.c > 3) and (t.d < 3))  (rows=27.8)
    -> Covering index lookup on t using PRIMARY (a=5)  (rows=250)

FLUSH STATUS;
SELECT b, c, d FROM t WHERE a = 5 AND c > 3 AND d < 3;;
SHOW STATUS LIKE 'handler_read%';
Variable_name	Value
Handler_read_first	0
Handler_read_key	1
Handler_read_last	0
Handler_read_next	250
Handler_read_prev	0
Handler_read_rnd	0
Handler_read_rnd_next	0
set optimizer_switch = 'skip_scan=off';
EXPLAIN FORMAT=TREE SELECT b, c, d FROM t WHERE a = 5 AND c > 3 AND d < 3;;
EXPLAIN
-> Filter: ((t.c > 3) and (t.d < 3))  (rows=27.8)
    -> Covering index lookup on t using PRIMARY (a=5)  (rows=250)

FLUSH STATUS;
SELECT b, c, d FROM t WHERE a = 5 AND c > 3 AND d < 3;;
SHOW STATUS LIKE 'handler_read%';
Variable_name	Value
Handler_read_first	0
Handler_read_key	1
Handler_read_last	0
Handler_read_next	250
Handler_read_prev	0
Handler_read_rnd	0
Handler_read_rnd_next	0
include/diff_tables.inc [test.skip_scan, test.no_skip_scan]
EXPLAIN FORMAT=TREE SELECT /*+ SKIP_SCAN(t) */ b, c, d FROM t WHERE a = 5 AND c > 3 AND d < 3;;
EXPLAIN
-> Filter: ((t.c > 3) and (t.d < 3))  (rows=27.8)
    -> Covering index lookup on t using PRIMARY (a=5)  (rows=250)

FLUSH STATUS;
SELECT /*+ SKIP_SCAN(t) */ b, c, d FROM t WHERE a = 5 AND c > 3 AND d < 3;;
SHOW STATUS LIKE 'handler_read%';
Variable_name	Value
Handler_read_first	0
Handler_read_key	1
Handler_read_last	0
Handler_read_next	250
Handler_read_prev	0
Handler_read_rnd	0
Handler_read_rnd_next	0
include/diff_tables.inc [test.hint_skip_scan, test.no_skip_scan]
set optimizer_switch = 'skip_scan=on';
EXPLAIN FORMAT=TREE SELECT b, c, d FROM t WHERE a = 5 AND c < 3 AND d < 3;;
EXPLAIN
-> Filter: ((t.c < 3) and (t.d < 3))  (rows=27.8)
    -> Covering index lookup on t using PRIMARY (a=5)  (rows=250)

FLUSH STATUS;
SELECT b, c, d FROM t WHERE a = 5 AND c < 3 AND d < 3;;
SHOW STATUS LIKE 'handler_read%';
Variable_name	Value
Handler_read_first	0
Handler_read_key	1
Handler_read_last	0
Handler_read_next	250
Handler_read_prev	0
Handler_read_rnd	0
Handler_read_rnd_next	0
set optimizer_switch = 'skip_scan=off';
EXPLAIN FORMAT=TREE SELECT b, c, d FROM t WHERE a = 5 AND c < 3 AND d < 3;;
EXPLAIN
-> Filter: ((t.c < 3) and (t.d < 3))  (rows=27.8)
    -> Covering index lookup on t using PRIMARY (a=5)  (rows=250)

FLUSH STATUS;
SELECT b, c, d FROM t WHERE a = 5 AND c < 3 AND d < 3;;
SHOW STATUS LIKE 'handler_read%';
Variable_name	Value
Handler_read_first	0
Handler_read_key	1
Handler_read_last	0
Handler_read_next	250
Handler_read_prev	0
Handler_read_rnd	0
Handler_read_rnd_next	0
include/diff_tables.inc [test.skip_scan, test.no_skip_scan]
EXPLAIN FORMAT=TREE SELECT /*+ SKIP_SCAN(t) */ b, c, d FROM t WHERE a = 5 AND c < 3 AND d < 3;;
EXPLAIN
-> Filter: ((t.c < 3) and (t.d < 3))  (rows=27.8)
    -> Covering index lookup on t using PRIMARY (a=5)  (rows=250)

FLUSH STATUS;
SELECT /*+ SKIP_SCAN(t) */ b, c, d FROM t WHERE a = 5 AND c < 3 AND d < 3;;
SHOW STATUS LIKE 'handler_read%';
Variable_name	Value
Handler_read_first	0
Handler_read_key	1
Handler_read_last	0
Handler_read_next	250
Handler_read_prev	0
Handler_read_rnd	0
Handler_read_rnd_next	0
include/diff_tables.inc [test.hint_skip_scan, test.no_skip_scan]
set optimizer_switch = 'skip_scan=on';
EXPLAIN FORMAT=TREE SELECT b, c, d FROM t WHERE a = 5 AND c = 3 AND d < 3;;
EXPLAIN
-> Filter: ((t.c = 3) and (t.d < 3))  (rows=8.33)
    -> Covering index lookup on t using PRIMARY (a=5)  (rows=250)

FLUSH STATUS;
SELECT b, c, d FROM t WHERE a = 5 AND c = 3 AND d < 3;;
SHOW STATUS LIKE 'handler_read%';
Variable_name	Value
Handler_read_first	0
Handler_read_key	1
Handler_read_last	0
Handler_read_next	250
Handler_read_prev	0
Handler_read_rnd	0
Handler_read_rnd_next	0
set optimizer_switch = 'skip_scan=off';
EXPLAIN FORMAT=TREE SELECT b, c, d FROM t WHERE a = 5 AND c = 3 AND d < 3;;
EXPLAIN
-> Filter: ((t.c = 3) and (t.d < 3))  (rows=8.33)
    -> Covering index lookup on t using PRIMARY (a=5)  (rows=250)

FLUSH STATUS;
SELECT b, c, d FROM t WHERE a = 5 AND c = 3 AND d < 3;;
SHOW STATUS LIKE 'handler_read%';
Variable_name	Value
Handler_read_first	0
Handler_read_key	1
Handler_read_last	0
Handler_read_next	250
Handler_read_prev	0
Handler_read_rnd	0
Handler_read_rnd_next	0
include/diff_tables.inc [test.skip_scan, test.no_skip_scan]
EXPLAIN FORMAT=TREE SELECT /*+ SKIP_SCAN(t) */ b, c, d FROM t WHERE a = 5 AND c = 3 AND d < 3;;
EXPLAIN
-> Filter: ((t.c = 3) and (t.d < 3))  (rows=8.33)
    -> Covering index lookup on t using PRIMARY (a=5)  (rows=250)

FLUSH STATUS;
SELECT /*+ SKIP_SCAN(t) */ b, c, d FROM t WHERE a = 5 AND c = 3 AND d < 3;;
SHOW STATUS LIKE 'handler_read%';
Variable_name	Value
Handler_read_first	0
Handler_read_key	1
Handler_read_last	0
Handler_read_next	250
Handler_read_prev	0
Handler_read_rnd	0
Handler_read_rnd_next	0
include/diff_tables.inc [test.hint_skip_scan, test.no_skip_scan]
set optimizer_switch = 'skip_scan=on';
EXPLAIN FORMAT=TREE SELECT b, c, d FROM t WHERE a = 5 AND c BETWEEN 3 AND 5 AND d < 3;;
EXPLAIN
-> Filter: ((t.c between 3 and 5) and (t.d < 3))  (rows=9.26)
    -> Covering index lookup on t using PRIMARY (a=5)  (rows=250)

FLUSH STATUS;
SELECT b, c, d FROM t WHERE a = 5 AND c BETWEEN 3 AND 5 AND d < 3;;
SHOW STATUS LIKE 'handler_read%';
Variable_name	Value
Handler_read_first	0
Handler_read_key	1
Handler_read_last	0
Handler_read_next	250
Handler_read_prev	0
Handler_read_rnd	0
Handler_read_rnd_next	0
set optimizer_switch = 'skip_scan=off';
EXPLAIN FORMAT=TREE SELECT b, c, d FROM t WHERE a = 5 AND c BETWEEN 3 AND 5 AND d < 3;;
EXPLAIN
-> Filter: ((t.c between 3 and 5) and (t.d < 3))  (rows=9.26)
    -> Covering index lookup on t using PRIMARY (a=5)  (rows=250)

FLUSH STATUS;
SELECT b, c, d FROM t WHERE a = 5 AND c BETWEEN 3 AND 5 AND d < 3;;
SHOW STATUS LIKE 'handler_read%';
Variable_name	Value
Handler_read_first	0
Handler_read_key	1
Handler_read_last	0
Handler_read_next	250
Handler_read_prev	0
Handler_read_rnd	0
Handler_read_rnd_next	0
include/diff_tables.inc [test.skip_scan, test.no_skip_scan]
EXPLAIN FORMAT=TREE SELECT /*+ SKIP_SCAN(t) */ b, c, d FROM t WHERE a = 5 AND c BETWEEN 3 AND 5 AND d < 3;;
EXPLAIN
-> Filter: ((t.c between 3 and 5) and (t.d < 3))  (rows=9.26)
    -> Covering index lookup on t using PRIMARY (a=5)  (rows=250)

FLUSH STATUS;
SELECT /*+ SKIP_SCAN(t) */ b, c, d FROM t WHERE a = 5 AND c BETWEEN 3 AND 5 AND d < 3;;
SHOW STATUS LIKE 'handler_read%';
Variable_name	Value
Handler_read_first	0
Handler_read_key	1
Handler_read_last	0
Handler_read_next	250
Handler_read_prev	0
Handler_read_rnd	0
Handler_read_rnd_next	0
include/diff_tables.inc [test.hint_skip_scan, test.no_skip_scan]
set optimizer_switch = 'skip_scan=on';
EXPLAIN FORMAT=TREE SELECT b, c, d FROM t WHERE c BETWEEN 3 AND 5 AND d < 3;;
EXPLAIN
-> Filter: ((t.c between 3 and 5) and (t.d < 3))  (rows=92.6)
    -> Covering index skip scan on t using PRIMARY over 5 <= c <= 3  (rows=500)

FLUSH STATUS;
SELECT b, c, d FROM t WHERE c BETWEEN 3 AND 5 AND d < 3;;
SHOW STATUS LIKE 'handler_read%';
Variable_name	Value
Handler_read_first	1
Handler_read_key	101
Handler_read_last	0
Handler_read_next	1500
Handler_read_prev	0
Handler_read_rnd	0
Handler_read_rnd_next	0
set optimizer_switch = 'skip_scan=off';
EXPLAIN FORMAT=TREE SELECT b, c, d FROM t WHERE c BETWEEN 3 AND 5 AND d < 3;;
EXPLAIN
-> Filter: ((t.c between 3 and 5) and (t.d < 3))  (rows=92.6)
    -> Table scan on t  (rows=2500)

FLUSH STATUS;
SELECT b, c, d FROM t WHERE c BETWEEN 3 AND 5 AND d < 3;;
SHOW STATUS LIKE 'handler_read%';
Variable_name	Value
Handler_read_first	1
Handler_read_key	1
Handler_read_last	0
Handler_read_next	0
Handler_read_prev	0
Handler_read_rnd	0
Handler_read_rnd_next	2501
include/diff_tables.inc [test.skip_scan, test.no_skip_scan]
EXPLAIN FORMAT=TREE SELECT /*+ SKIP_SCAN(t) */ b, c, d FROM t WHERE c BETWEEN 3 AND 5 AND d < 3;;
EXPLAIN
-> Filter: ((t.c between 3 and 5) and (t.d < 3))  (rows=92.6)
    -> Covering index skip scan on t using PRIMARY over 5 <= c <= 3  (rows=500)

FLUSH STATUS;
SELECT /*+ SKIP_SCAN(t) */ b, c, d FROM t WHERE c BETWEEN 3 AND 5 AND d < 3;;
SHOW STATUS LIKE 'handler_read%';
Variable_name	Value
Handler_read_first	1
Handler_read_key	101
Handler_read_last	0
Handler_read_next	1500
Handler_read_prev	0
Handler_read_rnd	0
Handler_read_rnd_next	0
include/diff_tables.inc [test.hint_skip_scan, test.no_skip_scan]
set optimizer_switch = 'skip_scan=on';
EXPLAIN FORMAT=TREE SELECT b, c, d FROM t WHERE d < 3;;
EXPLAIN
-> Filter: (t.d < 3)  (rows=833)
    -> Table scan on t  (rows=2500)

FLUSH STATUS;
SELECT b, c, d FROM t WHERE d < 3;;
SHOW STATUS LIKE 'handler_read%';
Variable_name	Value
Handler_read_first	1
Handler_read_key	1
Handler_read_last	0
Handler_read_next	0
Handler_read_prev	0
Handler_read_rnd	0
Handler_read_rnd_next	2501
set optimizer_switch = 'skip_scan=off';
EXPLAIN FORMAT=TREE SELECT b, c, d FROM t WHERE d < 3;;
EXPLAIN
-> Filter: (t.d < 3)  (rows=833)
    -> Table scan on t  (rows=2500)

FLUSH STATUS;
SELECT b, c, d FROM t WHERE d < 3;;
SHOW STATUS LIKE 'handler_read%';
Variable_name	Value
Handler_read_first	1
Handler_read_key	1
Handler_read_last	0
Handler_read_next	0
Handler_read_prev	0
Handler_read_rnd	0
Handler_read_rnd_next	2501
include/diff_tables.inc [test.skip_scan, test.no_skip_scan]
EXPLAIN FORMAT=TREE SELECT /*+ SKIP_SCAN(t) */ b, c, d FROM t WHERE d < 3;;
EXPLAIN
-> Filter: (t.d < 3)  (rows=833)
    -> Table scan on t  (rows=2500)

FLUSH STATUS;
SELECT /*+ SKIP_SCAN(t) */ b, c, d FROM t WHERE d < 3;;
SHOW STATUS LIKE 'handler_read%';
Variable_name	Value
Handler_read_first	1
Handler_read_key	1
Handler_read_last	0
Handler_read_next	0
Handler_read_prev	0
Handler_read_rnd	0
Handler_read_rnd_next	2501
include/diff_tables.inc [test.hint_skip_scan, test.no_skip_scan]
set optimizer_switch = 'skip_scan=on';
EXPLAIN FORMAT=TREE SELECT a, b, c, d FROM t WHERE a IN (1, 3, 5) AND d >= 5;
EXPLAIN
-> Filter: (t.d >= 5)  (rows=250)
    -> Covering index range scan on t using PRIMARY over (a = 5) OR (a = 3) OR (a = 1)  (rows=750)

FLUSH STATUS;
SELECT a, b, c, d FROM t WHERE a IN (1, 3, 5) AND d >= 5;
SHOW STATUS LIKE 'handler_read%';
Variable_name	Value
Handler_read_first	0
Handler_read_key	3
Handler_read_last	0
Handler_read_next	750
Handler_read_prev	0
Handler_read_rnd	0
Handler_read_rnd_next	0
set optimizer_switch = 'skip_scan=off';
EXPLAIN FORMAT=TREE SELECT a, b, c, d FROM t WHERE a IN (1, 3, 5) AND d >= 5;
EXPLAIN
-> Filter: (t.d >= 5)  (rows=250)
    -> Covering index range scan on t using PRIMARY over (a = 5) OR (a = 3) OR (a = 1)  (rows=750)

FLUSH STATUS;
SELECT a, b, c, d FROM t WHERE a IN (1, 3, 5) AND d >= 5;
SHOW STATUS LIKE 'handler_read%';
Variable_name	Value
Handler_read_first	0
Handler_read_key	3
Handler_read_last	0
Handler_read_next	750
Handler_read_prev	0
Handler_read_rnd	0
Handler_read_rnd_next	0
include/diff_tables.inc [test.skip_scan, test.no_skip_scan]
EXPLAIN FORMAT=TREE SELECT /*+ SKIP_SCAN(t) */ a, b, c, d FROM t WHERE a IN (1, 3, 5) AND d >= 5;
EXPLAIN
-> Filter: (t.d >= 5)  (rows=250)
    -> Covering index range scan on t using PRIMARY over (a = 5) OR (a = 3) OR (a = 1)  (rows=750)

FLUSH STATUS;
SELECT /*+ SKIP_SCAN(t) */ a, b, c, d FROM t WHERE a IN (1, 3, 5) AND d >= 5;
SHOW STATUS LIKE 'handler_read%';
Variable_name	Value
Handler_read_first	0
Handler_read_key	3
Handler_read_last	0
Handler_read_next	750
Handler_read_prev	0
Handler_read_rnd	0
Handler_read_rnd_next	0
include/diff_tables.inc [test.hint_skip_scan, test.no_skip_scan]
set optimizer_switch = 'skip_scan=on';
EXPLAIN FORMAT=TREE SELECT a, b, c, d FROM t WHERE a IN (1, 5, 3) AND b IN (1, 2) AND d >= 5;
EXPLAIN
-> Filter: (t.d >= 5)  (rows=100)
    -> Covering index range scan on t using PRIMARY over (a = 5 AND b = 1) OR (a = 5 AND b = 2) OR (4 more)  (rows=300)

FLUSH STATUS;
SELECT a, b, c, d FROM t WHERE a IN (1, 5, 3) AND b IN (1, 2) AND d >= 5;
SHOW STATUS LIKE 'handler_read%';
Variable_name	Value
Handler_read_first	0
Handler_read_key	6
Handler_read_last	0
Handler_read_next	300
Handler_read_prev	0
Handler_read_rnd	0
Handler_read_rnd_next	0
set optimizer_switch = 'skip_scan=off';
EXPLAIN FORMAT=TREE SELECT a, b, c, d FROM t WHERE a IN (1, 5, 3) AND b IN (1, 2) AND d >= 5;
EXPLAIN
-> Filter: (t.d >= 5)  (rows=100)
    -> Covering index range scan on t using PRIMARY over (a = 5 AND b = 1) OR (a = 5 AND b = 2) OR (4 more)  (rows=300)

FLUSH STATUS;
SELECT a, b, c, d FROM t WHERE a IN (1, 5, 3) AND b IN (1, 2) AND d >= 5;
SHOW STATUS LIKE 'handler_read%';
Variable_name	Value
Handler_read_first	0
Handler_read_key	6
Handler_read_last	0
Handler_read_next	300
Handler_read_prev	0
Handler_read_rnd	0
Handler_read_rnd_next	0
include/diff_tables.inc [test.skip_scan, test.no_skip_scan]
EXPLAIN FORMAT=TREE SELECT /*+ SKIP_SCAN(t) */ a, b, c, d FROM t WHERE a IN (1, 5, 3) AND b in (1, 2) AND d >= 5;
EXPLAIN
-> Filter: (t.d >= 5)  (rows=100)
    -> Covering index range scan on t using PRIMARY over (a = 5 AND b = 1) OR (a = 5 AND b = 2) OR (4 more)  (rows=300)

FLUSH STATUS;
SELECT /*+ SKIP_SCAN(t) */ a, b, c, d FROM t WHERE a IN (1, 5, 3) AND b in (1, 2) AND d >= 5;
SHOW STATUS LIKE 'handler_read%';
Variable_name	Value
Handler_read_first	0
Handler_read_key	6
Handler_read_last	0
Handler_read_next	300
Handler_read_prev	0
Handler_read_rnd	0
Handler_read_rnd_next	0
include/diff_tables.inc [test.hint_skip_scan, test.no_skip_scan]
set optimizer_switch = default;
DROP TABLE t;
Testing DESC index with skip scan and NULL range.
CREATE TABLE t1 (a INT, b INT, c INT, d INT, e INT,
KEY k1(a DESC, b, c DESC, d, e DESC));
INSERT INTO t1 VALUES
(NULL, 1, 1, 3, 4), (NULL, 2, 1, 4, 5),
(1, 2, 1, 3, 4), (2, 2, 1, 4, 5),
(5, 2, 3, 3, 4), (2, 2, 1, 4, 11),
(8, 2, 1, 3, 4), (7, 2, 1, 4, 9);
INSERT INTO t1 SELECT * FROM t1;
INSERT INTO t1 SELECT * FROM t1;
INSERT INTO t1 SELECT * FROM t1;
ANALYZE TABLE t1;
Table	Op	Msg_type	Msg_text
test.t1	analyze	status	OK
set optimizer_switch = 'skip_scan=on';
EXPLAIN FORMAT=TREE SELECT a, b, c, d FROM t1 WHERE (a IN (1, 5) or a IS NULL) AND b in (1, 2) AND d BETWEEN 2 AND 5;
EXPLAIN
-> Filter: (t1.d between 2 and 5)  (rows=3.78)
    -> Covering index range scan on t1 using k1 over (a = 5 AND b = 1) OR (a = 5 AND b = 2) OR (4 more)  (rows=34)

FLUSH STATUS;
SELECT a, b, c, d FROM t1 WHERE (a IN (1, 5) or a IS NULL) AND b in (1, 2) AND d BETWEEN 2 AND 5;
SHOW STATUS LIKE 'handler_read%';
Variable_name	Value
Handler_read_first	0
Handler_read_key	6
Handler_read_last	0
Handler_read_next	32
Handler_read_prev	0
Handler_read_rnd	0
Handler_read_rnd_next	0
set optimizer_switch = 'skip_scan=off';
EXPLAIN FORMAT=TREE SELECT a, b, c, d FROM t1 WHERE (a IN (1, 5) or a IS NULL) AND b in (1, 2) AND d BETWEEN 2 AND 5;
EXPLAIN
-> Filter: (t1.d between 2 and 5)  (rows=3.78)
    -> Covering index range scan on t1 using k1 over (a = 5 AND b = 1) OR (a = 5 AND b = 2) OR (4 more)  (rows=34)

FLUSH STATUS;
SELECT a, b, c, d FROM t1 WHERE (a IN (1, 5) or a IS NULL) AND b in (1, 2) AND d BETWEEN 2 AND 5;
SHOW STATUS LIKE 'handler_read%';
Variable_name	Value
Handler_read_first	0
Handler_read_key	6
Handler_read_last	0
Handler_read_next	32
Handler_read_prev	0
Handler_read_rnd	0
Handler_read_rnd_next	0
include/diff_tables.inc [test.skip_scan, test.no_skip_scan]
EXPLAIN FORMAT=TREE SELECT /*+ SKIP_SCAN(t1) */ a, b, c, d FROM t1 WHERE (a IN (1, 5) or a IS NULL) AND b in (1, 2) AND d BETWEEN 2 AND 5;
EXPLAIN
-> Filter: (t1.d between 2 and 5)  (rows=3.78)
    -> Covering index range scan on t1 using k1 over (a = 5 AND b = 1) OR (a = 5 AND b = 2) OR (4 more)  (rows=34)

FLUSH STATUS;
SELECT /*+ SKIP_SCAN(t1) */ a, b, c, d FROM t1 WHERE (a IN (1, 5) or a IS NULL) AND b in (1, 2) AND d BETWEEN 2 AND 5;
SHOW STATUS LIKE 'handler_read%';
Variable_name	Value
Handler_read_first	0
Handler_read_key	6
Handler_read_last	0
Handler_read_next	32
Handler_read_prev	0
Handler_read_rnd	0
Handler_read_rnd_next	0
include/diff_tables.inc [test.hint_skip_scan, test.no_skip_scan]
DROP TABLE t1;
CREATE TABLE t1 (a INT, b INT, c INT, d INT, e INT,
KEY k1(a, b DESC, c, d DESC, e));
INSERT INTO t1 VALUES
(NULL, 1, 1, 3, 4), (NULL, 2, 1, 4, 5),
(1, 2, 1, 3, 4), (2, 2, 1, 4, 5),
(5, 2, 3, 3, 4), (2, 2, 1, 4, 11),
(8, 2, 1, 3, 4), (7, 2, 1, 4, 9);
INSERT INTO t1 SELECT * FROM t1;
INSERT INTO t1 SELECT * FROM t1;
INSERT INTO t1 SELECT * FROM t1;
ANALYZE TABLE t1;
Table	Op	Msg_type	Msg_text
test.t1	analyze	status	OK
set optimizer_switch = 'skip_scan=on';
EXPLAIN FORMAT=TREE SELECT a, b, c, d FROM t1 WHERE (a IN (1, 5) or a IS NULL) AND b in (1, 2) AND d BETWEEN 2 AND 5;
EXPLAIN
-> Filter: (t1.d between 2 and 5)  (rows=3.78)
    -> Covering index range scan on t1 using k1 over (a = NULL AND b = 2) OR (a = NULL AND b = 1) OR (4 more)  (rows=34)

FLUSH STATUS;
SELECT a, b, c, d FROM t1 WHERE (a IN (1, 5) or a IS NULL) AND b in (1, 2) AND d BETWEEN 2 AND 5;
SHOW STATUS LIKE 'handler_read%';
Variable_name	Value
Handler_read_first	0
Handler_read_key	6
Handler_read_last	0
Handler_read_next	32
Handler_read_prev	0
Handler_read_rnd	0
Handler_read_rnd_next	0
set optimizer_switch = 'skip_scan=off';
EXPLAIN FORMAT=TREE SELECT a, b, c, d FROM t1 WHERE (a IN (1, 5) or a IS NULL) AND b in (1, 2) AND d BETWEEN 2 AND 5;
EXPLAIN
-> Filter: (t1.d between 2 and 5)  (rows=3.78)
    -> Covering index range scan on t1 using k1 over (a = NULL AND b = 2) OR (a = NULL AND b = 1) OR (4 more)  (rows=34)

FLUSH STATUS;
SELECT a, b, c, d FROM t1 WHERE (a IN (1, 5) or a IS NULL) AND b in (1, 2) AND d BETWEEN 2 AND 5;
SHOW STATUS LIKE 'handler_read%';
Variable_name	Value
Handler_read_first	0
Handler_read_key	6
Handler_read_last	0
Handler_read_next	32
Handler_read_prev	0
Handler_read_rnd	0
Handler_read_rnd_next	0
include/diff_tables.inc [test.skip_scan, test.no_skip_scan]
EXPLAIN FORMAT=TREE SELECT /*+ SKIP_SCAN(t1) */ a, b, c, d FROM t1 WHERE (a IN (1, 5) or a IS NULL) AND b in (1, 2) AND d BETWEEN 2 AND 5;
EXPLAIN
-> Filter: (t1.d between 2 and 5)  (rows=3.78)
    -> Covering index range scan on t1 using k1 over (a = NULL AND b = 2) OR (a = NULL AND b = 1) OR (4 more)  (rows=34)

FLUSH STATUS;
SELECT /*+ SKIP_SCAN(t1) */ a, b, c, d FROM t1 WHERE (a IN (1, 5) or a IS NULL) AND b in (1, 2) AND d BETWEEN 2 AND 5;
SHOW STATUS LIKE 'handler_read%';
Variable_name	Value
Handler_read_first	0
Handler_read_key	6
Handler_read_last	0
Handler_read_next	32
Handler_read_prev	0
Handler_read_rnd	0
Handler_read_rnd_next	0
include/diff_tables.inc [test.hint_skip_scan, test.no_skip_scan]
set optimizer_switch = default;
DROP TABLE t1;
Skip scan with subqueries
CREATE TABLE `t1` (
`pk` int NOT NULL AUTO_INCREMENT,
`col_int_key` int DEFAULT NULL,
`col_varchar_key` varchar(1) DEFAULT NULL,
PRIMARY KEY (`pk`),
KEY `idx_t1_col_int_key` (`col_int_key`),
KEY `idx_t1_col_varchar_key` (`col_varchar_key`));
CREATE TABLE `t2` (
`pk` int NOT NULL AUTO_INCREMENT,
`col_varchar_key` varchar(1) DEFAULT NULL,
PRIMARY KEY (`pk`),
KEY `idx_t2_col_varchar_key` (`col_varchar_key`));
SELECT SUBQUERY1_t1.col_varchar_key AS SUBQUERY1_field1
FROM t2 AS SUBQUERY1_t1
WHERE (SUBQUERY1_t1.pk > 5 AND
SUBQUERY1_t1.col_varchar_key NOT IN (SELECT CHILD_SUBQUERY1_t1 .col_varchar_key AS CHILD_SUBQUERY1_field1
FROM t1 AS CHILD_SUBQUERY1_t1
WHERE CHILD_SUBQUERY1_t1.col_int_key = 3));
SUBQUERY1_field1
SELECT SUM(table1.pk )AS field1 , COUNT(table2.col_varchar_key ) AS field2
FROM (t1 AS table1 JOIN (t2 AS table2))
WHERE (table2.col_varchar_key <> SOME (SELECT SUBQUERY2_t1. col_varchar_key AS SUBQUERY2_field1
FROM t1 AS SUBQUERY2_t1
WHERE (SUBQUERY2_t1.pk < 4
AND SUBQUERY2_t1. pk IN (SELECT 2 EXCEPT SELECT 9))));
field1	field2
NULL	0
DROP TABLE t1;
DROP TABLE t2;
SET OPTIMIZER_SWITCH = default;
