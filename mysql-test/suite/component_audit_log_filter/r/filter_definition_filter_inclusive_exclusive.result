SET GLOBAL DEBUG='+d,audit_log_filter_add_record_debug_info';
SET GLOBAL DEBUG='+d,audit_log_filter_rotate_after_audit_rules_flush';
#
# Filter definition in inclusive mode, logs only explicitly specified items
SELECT audit_log_filter_set_filter('log_inclusive', '{
"filter": {
"log": false,
"class": [
{
"name": "connection",
"event": {
"name": "connect",
"log": true
}
},
{
"name": "general",
"log": true
}
]
}
}');
audit_log_filter_set_filter('log_inclusive', '{
"filter": {
"log": false,
"class": [
{
"name": "connection",
"event": {
"name": "connect",
"log": true
}
},
{
"name": "general",
"log": true
}
]
}
}')
OK
SELECT audit_log_filter_set_user('%', 'log_inclusive');
audit_log_filter_set_user('%', 'log_inclusive')
OK
Tag (?:<EVENT_CLASS_NAME>general</EVENT_CLASS_NAME>|<EVENT_SUBCLASS_NAME>connect</EVENT_SUBCLASS_NAME>) Ok
#
# Exclusive logging, this filter logs everything except events in the general class
SELECT audit_log_filter_set_filter('log_exclusive', '{
"filter": {
"log": true,
"class": {
"name": "general",
"log": false
}
}
}');
audit_log_filter_set_filter('log_exclusive', '{
"filter": {
"log": true,
"class": {
"name": "general",
"log": false
}
}
}')
OK
SELECT audit_log_filter_set_user('%', 'log_exclusive');
audit_log_filter_set_user('%', 'log_exclusive')
OK
No tag <EVENT_CLASS_NAME>general</EVENT_CLASS_NAME> Ok
#
# Cleanup
SET GLOBAL DEBUG='-d,audit_log_filter_add_record_debug_info';
SET GLOBAL DEBUG='-d,audit_log_filter_rotate_after_audit_rules_flush';
