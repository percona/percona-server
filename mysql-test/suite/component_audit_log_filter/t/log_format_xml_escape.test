--source include/have_component_audit_log.inc
--source ../inc/audit_tables_init.inc
--source ../inc/audit_comp_install.inc

--let $MYSQLD_DATADIR = `SELECT @@global.datadir`
--let $MYSQL_TMP_DIR = `select @@tmpdir`
--let $TMP_QUERY_FILE = $MYSQL_TMP_DIR/tmp_query

SELECT audit_log_filter_set_filter('log_query', '{"filter": {"class": {"name": "query", "event": {"name": "start"}}}}');
SELECT audit_log_filter_set_user('%', 'log_query');

--let MYSQLD_DATADIR = $MYSQLD_DATADIR
--let TMP_QUERY_FILE = $TMP_QUERY_FILE

--perl
  use strict;
  use warnings;

  my $query_file = $ENV{'TMP_QUERY_FILE'} or die "TMP_QUERY_FILE not set";
  open(my $fh, ">", $query_file) or die "Can't open < $query_file: $!";

  print $fh "CREATE TABLE a (id int) ENGINE = InnoDB;\n";
  print $fh "INSERT INTO a \nVALUES (1);\n";
  print $fh "INSERT INTO a \tVALUES (2);\n";
  print $fh "INSERT INTO a \rVALUES (3);\n";

  close($fh);
EOF

--source clean_current_audit_log.inc

--disable_query_log
--source $TMP_QUERY_FILE
--enable_query_log

perl;
  use strict;
  use warnings;

  my $log_file = "$ENV{MYSQLD_DATADIR}/audit_filter.log";
  open(my $fh, "<", $log_file) or die "Can't open < $log_file: $!";

  my $escape_seq_count = 0;
  my $expected_escape_seq_count = 3;

  while (my $line = <$fh>) {
    if ($line =~ m/INSERT\sINTO\sa\s&#10;VALUES\s\(1\)/
          || $line =~ m/INSERT\sINTO\sa\s&#9;VALUES\s\(2\)/
          || $line =~ m/INSERT\sINTO\sa\s&#13;VALUES\s\(3\)/) {
      ++$escape_seq_count;
    }
  }

  if ($escape_seq_count == $expected_escape_seq_count) {
    print "Escape rules Ok\n";
  }
  else {
    print "Found $escape_seq_count escape sequences, expected $expected_escape_seq_count\n";
  }

  close($fh);
EOF

--echo #
--echo # Cleanup
--source ../inc/audit_comp_uninstall.inc
--source ../inc/audit_tables_cleanup.inc

DROP TABLE a;
