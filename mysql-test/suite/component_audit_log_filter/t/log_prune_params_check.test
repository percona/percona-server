--source include/have_component_audit_log.inc
--source ../inc/audit_tables_init.inc
--source ../inc/audit_comp_install.inc

--disable_query_log
call mtr.add_suppression("Both audit_log_filter.max_size and audit_log_filter.prune_seconds are set to non-zero");
--enable_query_log

--echo #
--echo # Only one of max_size and prune_seconds may be set at any time
SET GLOBAL audit_log_filter.prune_seconds=100;
SET GLOBAL audit_log_filter.max_size=4096;
SELECT @@global.audit_log_filter.max_size;
SELECT @@global.audit_log_filter.prune_seconds;

SET GLOBAL audit_log_filter.prune_seconds=100;
SELECT @@global.audit_log_filter.max_size;
SELECT @@global.audit_log_filter.prune_seconds;

--echo #
--echo # When non-zero prune_seconds provided during startup, default max_size ignored and it gets set to 0
--let $restart_parameters="restart: --audit-log-filter.prune-seconds=100"
--source include/restart_mysqld.inc

SELECT @@global.audit_log_filter.max_size;
SELECT @@global.audit_log_filter.prune_seconds;

--echo #
--echo # When both prune_seconds and max_size are provided during startup, max_size takes precedence, there will be warning in error log
--let $restart_parameters="restart: --audit-log-filter.max-size=4096 --audit-log-filter.prune-seconds=100"
--source include/restart_mysqld.inc

--let $assert_text = ER_WARN_ADUIT_FILTER_MAX_SIZE_AND_PRUNE_SECONDS_LOG in error log
--let $assert_file = $MYSQLTEST_VARDIR/log/mysqld.1.err
--let $assert_select = Both audit_log_filter.max_size and audit_log_filter.prune_seconds are set to non-zero
--let $assert_count = 1
--source include/assert_grep.inc

# Parameters are set despite the warning
SELECT @@global.audit_log_filter.max_size;
SELECT @@global.audit_log_filter.prune_seconds;

--echo #
--echo # Cleanup
--let $restart_parameters="restart:"
--source include/restart_mysqld.inc
--source ../inc/audit_comp_uninstall.inc
--source ../inc/audit_tables_cleanup.inc
