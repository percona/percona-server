SET GLOBAL innodb_encryption_threads=4;
SET GLOBAL innodb_file_per_table = ON;
create table t1 (a varchar(255)) engine=innodb encryption='KEYRING';
create table t2 (a varchar(255)) engine=innodb encryption_key_id=5;
create table t3 (a varchar(255)) engine=innodb;
create table t4 (a varchar(255)) engine=innodb encryption='Y';
create table t5 (a varchar(255)) engine=innodb;
create table t6 (a varchar(255)) engine=innodb encryption='N';
insert t1 values (repeat('foobarsecret', 12));
insert t2 values (repeat('tempsecret', 12));
insert t3 values (repeat('dummysecret', 12));
insert t4 values (repeat('verysecret', 12));
insert t5 values (repeat('sooosecret', 12));
insert t6 values (repeat('nosecret', 12));
include/assert.inc [Successful rotation of percona_innodb-0 to version 2]
# Just make sure that none of the table started re-encrypting
include/assert.inc [None of the tables should get re-encrypted with version 2]
include/assert.inc [Successful rotation of percona_innodb-0 to version 3]
include/assert.inc [table t2 should not get re-encrypted as key 5 is still in version 1]
include/assert.inc [table t6 should stay unencrypted]
# Now, let's rotate key 5 twice
include/assert.inc [Successful rotation of percona_innodb-5 to version 2]
include/assert.inc [Successful rotation of percona_innodb-5 to version 3]
# Setting innodb_encryption_rotate_key_age to 1. Now each key rotation should result
# in re-encryption of the table
SET GLOBAL innodb_encryption_rotate_key_age = 1;
include/assert.inc [Successful rotation of percona_innodb-0 to version 4]
include/assert.inc [table t2 should not get re-encrypted as key 5 is still in version 3]
# Rotate key 5 to version 4 => this should trigger table t2 re-encryption
include/assert.inc [Successful rotation of percona_innodb-5 to version 4]
# Now turn the re-encryption off by setting innodb_encryption_rotate_key_age to 0
SET GLOBAL innodb_encryption_rotate_key_age = 0;
# Rotating key should not cause any re-encryption
include/assert.inc [Successful rotation of percona_innodb-0 to version 5]
# Rotate key 5 to version 5 => this should trigger table t2 re-encryption
include/assert.inc [Successful rotation of percona_innodb-5 to version 5]
# Just make sure that none of the table started re-encrypting
include/assert.inc [All tables should be still encrypted with key version 4 at most.]
#Make sure t6 is still unencrypted
include/assert.inc [table t6 should stay unencrypted]
# Now let's alter t6 so it become encrypted
alter table t6 encryption='KEYRING';
# t6 should get rebuilt with latest version of percona_innodb-0, i.e. version 5
include/assert.inc [table t6 should get rebuilt with latest version of percona_innodb-0, i.e. version 5]
# Now change t6's encryption key to a new one 6 - it should have version 1
alter table t6 encryption_key_id = 6;
include/assert.inc [table t6 should get rebuilt with latest version of percona_innodb-6, i.e. version 1]
# Now change t6's encryption key to an existing key 5. It should have its latest
# key_version assigned, i.e. 5
alter table t6 encryption_key_id = 5;
include/assert.inc [table t6 should get rebuilt with latest version of percona_innodb-5, i.e. version 5]
# Turn off encryption for t6
alter table t6 encryption='N';
# Wait for t6 to get decrypted
include/assert.inc [table t6 should be marked as unencrypted]
# Make sure t6 is unencrypted
# restart:--innodb-encryption-threads=4
# Now turn off the encryption. Only one table should remain encrypted - the one with explicite encryption
# ie. t1
SET GLOBAL default_table_encryption = ONLINE_FROM_KEYRING_TO_UNENCRYPTED;
include/assert.inc [table t1 should stay encrypted with version 4 of key 0]
SET GLOBAL default_table_encryption = ONLINE_TO_KEYRING;
include/assert.inc [table t6 should be marked as unencrypted]
# Create table t7 encrypted with an existing key 5. It should have its latest
# key_version assigned, i.e. 5
create table t7 (a varchar(255)) engine=innodb encryption='KEYRING' ENCRYPTION_KEY_ID=5;
include/assert.inc [table t7 should be encrypted with latest version of percona_innodb-5, i.e. version 5]
drop table t1, t2, t3, t4, t5, t6, t7;
SET GLOBAL default_table_encryption = ONLINE_FROM_KEYRING_TO_UNENCRYPTED;
SET GLOBAL default_table_encryption=ONLINE_TO_KEYRING;
SET GLOBAL innodb_encryption_threads=0;
