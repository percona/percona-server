#
# MDEV-8750: Server crashes in page_cur_is_after_last on altering table using a wrong encryption key
# MDEV-8769: Server crash at file btr0btr.ic line 122 when defragmenting encrypted table using incorrect keys
# MDEV-8768: Server crash at file btr0btr.ic line 122 when checking encrypted table using incorrect keys
# MDEV-8727: Server/InnoDB hangs on shutdown after trying to read an encrypted table with a wrong key
#

call mtr.add_suppression("\\[InnoDB\\] Tablespace id [0-9]+ in file t1\.ibd is encrypted but keyring or used key_id 4 is not available\. Can't continue reading table\. Please provide the correct keyring\.");
call mtr.add_suppression("\\[InnoDB\\] Table `test`\.`t1` does not have an \.ibd file in the database directory\.");

CREATE TABLE t1 (pk INT PRIMARY KEY, f VARCHAR(8)) ENGINE=InnoDB ENCRYPTION='KEYRING' ENCRYPTION_KEY_ID=4;
INSERT INTO t1 VALUES (1,'foo'),(2,'bar');

--replace_result $MYSQLTEST_VARDIR MYSQLTEST_VARDIR
--let $restart_parameters=restart:--keyring-file-data=$MYSQLTEST_VARDIR/std_data/keys3.txt
--source include/restart_mysqld.inc

SET GLOBAL innodb_stats_persistent=OFF;
--error ER_GET_ERRMSG
SELECT * FROM t1;
--replace_regex /(tablespace|key_id) [1-9][0-9]*/\1 /
SHOW WARNINGS;
--error ER_GET_ERRMSG
ALTER TABLE t1 ENGINE=InnoDB;
--replace_regex /(tablespace|key_id) [1-9][0-9]*/\1 /
SHOW WARNINGS;

OPTIMIZE TABLE t1;
--replace_regex /(tablespace|key_id) [1-9][0-9]*/\1 /
SHOW WARNINGS;

CHECK TABLE t1;
--replace_regex /(tablespace|key_id) [1-9][0-9]*/\1 /
SHOW WARNINGS;

--replace_result $MYSQLTEST_VARDIR MYSQLTEST_VARDIR
--let $restart_parameters=restart:--keyring-file-data=$MYSQLTEST_VARDIR/std_data/keys2.txt
--source include/restart_mysqld.inc

SET GLOBAL innodb_stats_persistent=OFF;
let MYSQLD_DATADIR =`SELECT @@datadir`;

FLUSH TABLES t1 FOR EXPORT;
perl;
do "$ENV{MYSQL_TEST_DIR}/include/innodb-util.inc";
ib_backup_tablespaces("test", "t1");
EOF
UNLOCK TABLES;

--replace_result $MYSQLTEST_VARDIR MYSQLTEST_VARDIR
--let $restart_parameters=restart:--keyring-file-data=$MYSQLTEST_VARDIR/std_data/keys3.txt
--source include/restart_mysqld.inc

SET GLOBAL innodb_stats_persistent=OFF;
# Discard should not pass with incorrect keys
--error ER_GET_ERRMSG
ALTER TABLE t1 DISCARD TABLESPACE;

--replace_result $MYSQLTEST_VARDIR MYSQLTEST_VARDIR
--let $restart_parameters=restart:--keyring-file-data=$MYSQLTEST_VARDIR/std_data/keys2.txt
--source include/restart_mysqld.inc

ALTER TABLE t1 DISCARD TABLESPACE;

perl;
do "$ENV{MYSQL_TEST_DIR}/include/innodb-util.inc";
ib_discard_tablespaces("test", "t1");
ib_restore_tablespaces("test", "t1");
EOF

SET GLOBAL innodb_stats_persistent=OFF;
ALTER TABLE t1 IMPORT TABLESPACE;
SHOW CREATE TABLE t1;

--replace_result $MYSQLTEST_VARDIR MYSQLTEST_VARDIR
--let $restart_parameters=restart: --keyring-file-data=$MYSQLTEST_VARDIR/std_data/keys3.txt
--source include/restart_mysqld.inc

SET GLOBAL innodb_stats_persistent=OFF;
--error ER_ERROR_ON_RENAME
RENAME TABLE t1 TO t1new;
--replace_regex /(tablespace|key_id) [1-9][0-9]*/\1 /

# Alter table rename is not allowed with incorrect keys
--error ER_NO_SUCH_TABLE
ALTER TABLE t1new RENAME TO t2new;
# Drop should pass even with incorrect keys
--replace_regex /(tablespace|key_id) [1-9][0-9]*/\1 /
--error ER_BAD_TABLE_ERROR
DROP TABLE t1new;

DROP TABLE t1;
