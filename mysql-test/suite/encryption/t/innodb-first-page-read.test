SET GLOBAL default_table_encryption=ONLINE_TO_KEYRING;

--disable_warnings
SET GLOBAL innodb_file_per_table = ON;
--enable_warnings

create database innodb_test;
use innodb_test;
create table innodb_normal(c1 bigint not null, b char(200)) engine=innodb;
create table innodb_compact(c1 bigint not null, b char(200)) engine=innodb row_format=compact;
create table innodb_dynamic(c1 bigint not null, b char(200)) engine=innodb row_format=dynamic;
create table innodb_compressed(c1 bigint not null, b char(200)) engine=innodb row_format=compressed;
create table innodb_compressed1(c1 bigint not null, b char(200)) engine=innodb row_format=compressed key_block_size=1;
create table innodb_compressed2(c1 bigint not null, b char(200)) engine=innodb row_format=compressed key_block_size=2;
create table innodb_compressed4(c1 bigint not null, b char(200)) engine=innodb row_format=compressed key_block_size=4;
create table innodb_compressed8(c1 bigint not null, b char(200)) engine=innodb row_format=compressed key_block_size=8;
create table innodb_compressed16(c1 bigint not null, b char(200)) engine=innodb row_format=compressed key_block_size=16;
create table innodb_redundant(c1 bigint not null, b char(200)) engine=innodb row_format=redundant;
create table innodb_pagecomp(c1 bigint not null, b char(200)) engine=innodb COMPRESSION="zlib";
create table innodb_pagecomp1(c1 bigint not null, b char(200)) engine=innodb COMPRESSION="zlib";
create table innodb_pagecomp2(c1 bigint not null, b char(200)) engine=innodb COMPRESSION="zlib";
create table innodb_pagecomp3(c1 bigint not null, b char(200)) engine=innodb COMPRESSION="zlib";
create table innodb_pagecomp4(c1 bigint not null, b char(200)) engine=innodb COMPRESSION="zlib";
create table innodb_pagecomp5(c1 bigint not null, b char(200)) engine=innodb COMPRESSION="zlib";
create table innodb_pagecomp6(c1 bigint not null, b char(200)) engine=innodb COMPRESSION="zlib";
create table innodb_pagecomp7(c1 bigint not null, b char(200)) engine=innodb COMPRESSION="zlib";
create table innodb_pagecomp8(c1 bigint not null, b char(200)) engine=innodb COMPRESSION="zlib";
create table innodb_pagecomp9(c1 bigint not null, b char(200)) engine=innodb COMPRESSION="zlib";

--replace_result $MYSQL_TMP_DIR MYSQL_TMP_DIR
eval create table innodb_datadir1(c1 bigint not null, b char(200)) engine=innodb DATA DIRECTORY='$MYSQL_TMP_DIR';
--replace_result $MYSQL_TMP_DIR MYSQL_TMP_DIR
eval create table innodb_datadir2(c1 bigint not null, b char(200)) engine=innodb row_format=compressed DATA DIRECTORY='$MYSQL_TMP_DIR';
--replace_result $MYSQL_TMP_DIR MYSQL_TMP_DIR
eval create table innodb_datadir3(c1 bigint not null, b char(200)) engine=innodb COMPRESSION="zlib" DATA DIRECTORY='$MYSQL_TMP_DIR';

# For all the tables the first page can be read twice - first when it is validate and the second time when space
# is created in fil_system
let $number_of_tables_that_could_be_opened=`SELECT COUNT(DISTINCT TABLE_NAME)*2 FROM information_schema.tables WHERE table_schema='mysql' OR table_schema='innodb_test'`;

begin;
insert into innodb_normal values (1,'secret');
insert into innodb_compact select * from innodb_normal;
insert into innodb_dynamic select * from innodb_normal;
insert into innodb_compressed select * from innodb_normal;
insert into innodb_compressed1 select * from innodb_normal;
insert into innodb_compressed2 select * from innodb_normal;
insert into innodb_compressed4 select * from innodb_normal;
insert into innodb_compressed8 select * from innodb_normal;
insert into innodb_compressed16 select * from innodb_normal;
insert into innodb_redundant select * from innodb_normal;
insert into innodb_pagecomp select * from innodb_normal;
insert into innodb_pagecomp1 select * from innodb_normal;
insert into innodb_pagecomp2 select * from innodb_normal;
insert into innodb_pagecomp3 select * from innodb_normal;
insert into innodb_pagecomp4 select * from innodb_normal;
insert into innodb_pagecomp5 select * from innodb_normal;
insert into innodb_pagecomp6 select * from innodb_normal;
insert into innodb_pagecomp7 select * from innodb_normal;
insert into innodb_pagecomp8 select * from innodb_normal;
insert into innodb_pagecomp9 select * from innodb_normal;
insert into innodb_datadir1 select * from innodb_normal;
insert into innodb_datadir2 select * from innodb_normal;
insert into innodb_datadir3 select * from innodb_normal;
commit;

--echo # Restart server and see how many pages 0 are read
--source include/restart_mysqld.inc

--let $assert_text= number of page 0 should be greater than 0
--let $assert_cond= "[SELECT VARIABLE_VALUE FROM performance_schema.global_status WHERE VARIABLE_NAME = \\'innodb_pages0_read\\']" > 0
--source include/assert.inc

--let $assert_text= number of page 0 read should be less than number of tables in both innodb_test and mysql databases
--let $assert_cond= "[SELECT VARIABLE_VALUE FROM performance_schema.global_status WHERE VARIABLE_NAME = \\'innodb_pages0_read\\']" <= $number_of_tables_that_could_be_opened
--source include/assert.inc

set global default_table_encryption=ONLINE_FROM_KEYRING_TO_UNENCRYPTED;

--echo # wait until tables are decrypted
--let $wait_timeout= 600
--let $wait_condition=SELECT COUNT(*) = 0 FROM INFORMATION_SCHEMA.INNODB_TABLESPACES_ENCRYPTION WHERE MIN_KEY_VERSION <> 0
--source include/wait_condition.inc

--let $assert_text= number of page 0 read should be less than number of tables in both innodb_test and mysql databases
--let $assert_cond= "[SELECT VARIABLE_VALUE FROM performance_schema.global_status WHERE VARIABLE_NAME = \\'innodb_pages0_read\\']" <= $number_of_tables_that_could_be_opened
--source include/assert.inc

--echo # restart and see number of pages 0 read
--let $restart_parameters=restart:--innodb-encryption-threads=0
--source include/restart_mysqld.inc

--echo # Since we have restarted the server with encryption threads disabled - the tables from innodb_test database
--echo # should not have been accessed on server startup - thus selecting from any of those tables should increase
--echo # innodb_pages0_read only by one

--let $number_of_tables_in_mysql_db=`SELECT COUNT(DISTINCT TABLE_NAME) FROM information_schema.tables WHERE table_schema='mysql'`
--let $assert_text= number of pages 0 read should be less than number of tables in mysql databases
--let $assert_cond= "[SELECT VARIABLE_VALUE FROM performance_schema.global_status WHERE VARIABLE_NAME = \\'innodb_pages0_read\\']" <= $number_of_tables_in_mysql_db
--source include/assert.inc

--let $number_of_pages0_read=`SELECT VARIABLE_VALUE FROM performance_schema.global_status WHERE VARIABLE_NAME = 'innodb_pages0_read'`

select * from innodb_test.innodb_compact;

--let $assert_text= innodb_pages0_read should be increased only by one
--let $assert_cond= "[SELECT VARIABLE_VALUE FROM performance_schema.global_status WHERE VARIABLE_NAME = \\'innodb_pages0_read\\']" = $number_of_pages0_read + 1
--source include/assert.inc

# cleanup
drop database innodb_test;
--rmdir $MYSQL_TMP_DIR/innodb_test

--let $assert_text= All the tables should to be unencrypted
--let $assert_cond= "[SELECT COUNT(*) FROM INFORMATION_SCHEMA.INNODB_TABLESPACES_ENCRYPTION WHERE MIN_KEY_VERSION <> 0]" = 0
--source include/assert.inc

SET GLOBAL default_table_encryption=OFF;
SET GLOBAL innodb_encryption_threads=4;
