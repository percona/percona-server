--skip # Test unstable on Jenkins centos6
-- source include/have_innodb.inc
-- source include/not_embedded.inc
#-- source include/have_file_key_management_plugin.inc

#let $innodb_compression_algorithm_orig=`SELECT @@innodb_compression_algorithm`;

# zlib
#set global innodb_compression_algorithm = 1;

--disable_warnings # Disabling warnings as punch hole get generate ones when compression is enabled and
                   # filesystem is not supporting them
create table innodb_normal(c1 bigint not null, b char(200)) engine=innodb COMPRESSION="zlib";
show warnings;
create table innodb_compact(c1 bigint not null, b char(200)) engine=innodb row_format=compact ENCRYPTION='KEYRING' encryption_key_id=1 COMPRESSION="zlib";
#show warnings;
create table innodb_dynamic(c1 bigint not null, b char(200)) engine=innodb row_format=dynamic ENCRYPTION='KEYRING' encryption_key_id=2 COMPRESSION="zlib";
--enable_warnings
#show warnings;

show create table innodb_normal;
show create table innodb_compact;
show create table innodb_dynamic;

delimiter //;
create procedure innodb_insert_proc (repeat_count int)
begin
  declare current_num int;
  set current_num = 0;
  while current_num < repeat_count do
    insert into innodb_normal values(current_num, substring(MD5(RAND()), -128));
    set current_num = current_num + 1;
  end while;
end//
delimiter ;//
commit;

begin;
call innodb_insert_proc(2000);
insert into innodb_compact select * from innodb_normal;
insert into innodb_dynamic select * from innodb_normal;
commit;

#let $wait_condition= select variable_value > 0 from information_schema.global_status where variable_name = 'INNODB_NUM_PAGES_PAGE_COMPRESSED';
#--source include/wait_condition.inc

--let $restart_parameters=restart:--innodb-encrypt-tables=ONLINE_FROM_KEYRING_TO_UNENCRYPTED
--source include/restart_mysqld.inc

select * from innodb_compact;
select * from innodb_dynamic;

# zlib
#set global innodb_compression_algorithm = 1;
set innodb_default_encryption_key_id = DEFAULT;

--disable_warnings # Disabling warnings as punch hole get generate ones when compression is enabled and
                   # filesystem is not supporting them
alter table innodb_normal engine=innodb COMPRESSION="zlib";
show create table innodb_normal;
alter table innodb_compact engine=innodb encryption='KEYRING' COMPRESSION="zlib";
show create table innodb_compact;
alter table innodb_dynamic engine=innodb encryption='KEYRING' COMPRESSION="zlib";
show create table innodb_dynamic;
--enable_warnings
#let $wait_condition= select variable_value > 0 from information_schema.global_status where variable_name = 'INNODB_NUM_PAGES_PAGE_DECOMPRESSED';
#--source include/wait_condition.inc

drop procedure innodb_insert_proc;
drop table innodb_normal;
drop table innodb_compact;
drop table innodb_dynamic;

#--disable_query_log
#EVAL SET GLOBAL innodb_compression_algorithm = $innodb_compression_algorithm_orig;
#--enable_query_log
