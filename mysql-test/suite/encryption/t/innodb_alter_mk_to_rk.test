--replace_result $MYSQL_TMP_DIR MYSQL_TMP_DIR

--disable_warnings
SET GLOBAL innodb_file_per_table = ON;
--enable_warnings

create table t1 (a varchar(255)) engine=innodb;

--let $assert_text= Table t1 should be included in INNODB_TABLESPACES_ENCRYPTION yet - since it is not RK
--let $assert_cond= "[SELECT COUNT(*) FROM INFORMATION_SCHEMA.INNODB_TABLESPACES_ENCRYPTION WHERE NAME = \\"test/t1\\"]" = 0
--source include/assert.inc

insert t1 values (repeat('foobarsecret', 12));
select * from t1;

--echo # 1. Alter from unencrypted to RK
ALTER TABLE t1 encryption='KEYRING';
SELECT * FROM t1;

--let $assert_text= Table t1 should be the only one appearing in INNODB_TABLESPACES_ENCRYPTION
--let $assert_cond= "[SELECT NAME FROM INFORMATION_SCHEMA.INNODB_TABLESPACES_ENCRYPTION WHERE MIN_KEY_VERSION = 1]" = "test/t1"
--source include/assert.inc

create table t2 (a varchar(255)) engine=innodb encryption='y';
insert t2 values (repeat('foobarsecret', 12));

--let $assert_text= Table t2 should be included in INNODB_TABLESPACES_ENCRYPTION yet - since it is not RK
--let $assert_cond= "[SELECT COUNT(*) FROM INFORMATION_SCHEMA.INNODB_TABLESPACES_ENCRYPTION WHERE NAME = \\"test/t2\\"]" = 0
--source include/assert.inc

--echo # 2. Alter from MK encryption to RK
ALTER TABLE t2 encryption='KEYRING';
SELECT * FROM t2;

--let $assert_text= Table t2 should be included in INNODB_TABLESPACES_ENCRYPTION with MIN_KEY_VERION 1 (encrypted)
--let $assert_cond= "[SELECT MIN_KEY_VERSION FROM INFORMATION_SCHEMA.INNODB_TABLESPACES_ENCRYPTION WHERE NAME = \\"test/t2\\"]" = 1
--source include/assert.inc

--echo # 3. Alter from RK to MK
ALTER TABLE t1 encryption='Y';
SELECT * FROM t1;

--let $assert_text= Table t1 has been re_encrypted to Master key encryption - should disappear from INNODB_TABLESPACES_ENCRYPTION => thus only t2 should remain
--let $assert_cond= "[SELECT NAME FROM INFORMATION_SCHEMA.INNODB_TABLESPACES_ENCRYPTION]" = "test/t2"
--source include/assert.inc

--echo # 4. Alter from MK to unencrypted
ALTER TABLE t1 encryption='n';

--let $assert_text= t1 should be marked as unencrypted in INNODB_TABLESPACES_ENCRYPTION
--let $assert_cond= "[SELECT NAME FROM INFORMATION_SCHEMA.INNODB_TABLESPACES_ENCRYPTION WHERE MIN_KEY_VERSION = 0]" = "test/t1"
--source include/assert.inc
--let $assert_text= t2 should be marked as encrypted in INNODB_TABLESPACES_ENCRYPTION
--let $assert_cond= "[SELECT NAME FROM INFORMATION_SCHEMA.INNODB_TABLESPACES_ENCRYPTION WHERE MIN_KEY_VERSION <> 0]" = "test/t2"

--echo # 5. Alter from unencrypted to RK
ALTER TABLE t1 encryption='KEYRING';

--let $assert_text= Table t1 should be included in INNODB_TABLESPACES_ENCRYPTION with MIN_KEY_VERION marked as ENCRYPTED
--let $assert_cond= "[SELECT MIN_KEY_VERSION FROM INFORMATION_SCHEMA.INNODB_TABLESPACES_ENCRYPTION WHERE NAME = \\"test/t1\\"]" = 1
--source include/assert.inc

--echo # 6. Alter from RK to unencrypted
ALTER TABLE t1 encryption='n';
--let $assert_text= Table t1 should appear in INNODB_TABLESPACES_ENCRYPTION but with MIN_KEY_VERSION marked as UNENCRYPTED
--let $assert_cond= "[SELECT MIN_KEY_VERSION FROM INFORMATION_SCHEMA.INNODB_TABLESPACES_ENCRYPTION WHERE NAME = \\"test/t1\\"]" = 0
--source include/assert.inc

# cleanup
drop table t1,t2;

