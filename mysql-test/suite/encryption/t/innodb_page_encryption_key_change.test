
--let $MYSQLD_DATADIR=`select @@datadir`
--let t1_IBD = $MYSQLD_DATADIR/test/t1.ibd
--let t2_IBD = $MYSQLD_DATADIR/test/t2.ibd
--let t3_IBD = $MYSQLD_DATADIR/test/t3.ibd
--let t4_IBD = $MYSQLD_DATADIR/test/t4.ibd

# Keys in std_data/keys2 and std_data/keys3 belong to the server with uuid b3665c10-e6c0-11e9-8e47-9cb6d0d5dc99. In order for MTR server
# to be able to read those keys we need to assign this uuid to server_uuid via auto.conf file.
--let $uuid_file= auto.cnf
--let $original_server_uuid= query_get_value(SELECT @@SERVER_UUID, @@SERVER_UUID, 1)

--let $datadir= query_get_value(SELECT @@DATADIR, @@DATADIR, 1)
--copy_file $datadir/$uuid_file $datadir/original_$uuid_file

--remove_file $datadir/$uuid_file
--write_file $datadir/$uuid_file
[auto]
server_uuid=b3665c10-e6c0-11e9-8e47-9cb6d0d5dc99
EOF

--echo # Restart mysqld
--replace_result $MYSQLTEST_VARDIR MYSQLTEST_VARDIR
--let $restart_parameters=restart:--keyring-file-data=$MYSQLTEST_VARDIR/std_data/keys2.txt
--source include/restart_mysqld.inc

create table innodb_normal(c1 bigint not null, b char(200)) engine=innodb;
show warnings;
create table innodb_compact(c1 bigint not null, b char(200)) engine=innodb row_format=compact ENCRYPTION='KEYRING' encryption_key_id=2;
show warnings;
create table innodb_compressed(c1 bigint not null, b char(200)) engine=innodb row_format=compressed ENCRYPTION='KEYRING' encryption_key_id=3;
show warnings;
create table innodb_dynamic(c1 bigint not null, b char(200)) engine=innodb row_format=dynamic ENCRYPTION='KEYRING' encryption_key_id=4;
show warnings;
create table innodb_redundant(c1 bigint not null, b char(200))  engine=innodb row_format=redundant ENCRYPTION='KEYRING' encryption_key_id=5;
show warnings;

insert into innodb_normal values (1,'test1'),(2,'foo'),(3,'bar'),(4,'mariadb');
insert into innodb_compact select * from innodb_normal;
insert into innodb_compressed select * from innodb_normal;
insert into innodb_dynamic select * from innodb_normal;
insert into innodb_redundant select * from innodb_normal;

# Note there that these variables are updated only when real I/O is done, thus they are not reliable
SELECT variable_value >= 0 FROM performance_schema.global_status WHERE variable_name = 'innodb_num_pages_encrypted';
SELECT variable_value >= 0 FROM performance_schema.global_status WHERE variable_name = 'innodb_num_pages_decrypted';

alter table innodb_compact engine=innodb encryption_key_id = 6;
alter table innodb_compressed engine=innodb encryption_key_id = 6;
alter table innodb_dynamic engine=innodb encryption_key_id = 6;
alter table innodb_redundant engine=innodb encryption_key_id = 6;

select * from innodb_normal;
select * from innodb_compact;
select * from innodb_compressed;
select * from innodb_dynamic;
select * from innodb_redundant;

# Note there that these variables are updated only when real I/O is done, thus they are not reliable
SELECT variable_value >= 0 FROM performance_schema.global_status WHERE variable_name = 'innodb_num_pages_encrypted';
SELECT variable_value >= 0 FROM performance_schema.global_status WHERE variable_name = 'innodb_num_pages_decrypted';

--echo # Restart mysqld --loose-file-key-management-filename=keys3.txt
--replace_result $MYSQLTEST_VARDIR MYSQLTEST_VARDIR
--let $restart_parameters=restart:--keyring-file-data=$MYSQLTEST_VARDIR/std_data/keys3.txt
#-- let $restart_parameters=--loose-file-key-management-filename=$MYSQLTEST_VARDIR/std_data/keys3.txt
-- source include/restart_mysqld.inc

select * from innodb_normal;
select * from innodb_compact;
select * from innodb_compressed;
select * from innodb_dynamic;
select * from innodb_redundant;

# Note there that these variables are updated only when real I/O is done, thus they are not reliable
SELECT variable_value >= 0 FROM performance_schema.global_status WHERE variable_name = 'innodb_num_pages_encrypted';
SELECT variable_value >= 0 FROM performance_schema.global_status WHERE variable_name = 'innodb_num_pages_decrypted';

alter table innodb_compact engine=innodb encryption_key_id = 2;
alter table innodb_compressed engine=innodb encryption_key_id = 3;
alter table innodb_dynamic engine=innodb encryption_key_id = 4;
alter table innodb_redundant engine=innodb encryption_key_id = 5;

select * from innodb_normal;
select * from innodb_compact;
select * from innodb_compressed;
select * from innodb_dynamic;
select * from innodb_redundant;

# Note there that these variables are updated only when real I/O is done, thus they are not reliable
SELECT variable_value >= 0 FROM performance_schema.global_status WHERE variable_name = 'innodb_num_pages_encrypted';
SELECT variable_value >= 0 FROM performance_schema.global_status WHERE variable_name = 'innodb_num_pages_decrypted';

drop table innodb_normal;
drop table innodb_compact;
drop table innodb_compressed;
drop table innodb_dynamic;
drop table innodb_redundant;

# restore initial keyring_file and server_uuid
--remove_file $datadir/$uuid_file
--move_file $datadir/original_$uuid_file $datadir/$uuid_file

--replace_result $MYSQL_TMP_DIR MYSQL_TMP_DIR
--let $restart_parameters=restart:--keyring-file-data=$MYSQL_TMP_DIR/mysecret_keyring
--source include/restart_mysqld.inc
