include/group_replication.inc
Warnings:
Note	####	Sending passwords in plain text without SSL/TLS is extremely insecure.
Note	####	Storing MySQL user name or password information in the connection metadata repository is not secure and is therefore not recommended. Please consider using the USER and PASSWORD connection options for START REPLICA; see the 'START REPLICA Syntax' in the MySQL Manual for more information.
[connection server1]
set session sql_log_bin=0;
call mtr.add_suppression("Connection closed. Connection memory limit.*");
call mtr.add_suppression("Failed to gather the set of items written during the execution of the current transaction on session*");
call mtr.add_suppression("Run function 'before_commit' in plugin 'group_replication' failed");
call mtr.add_suppression("Error sending sync before execution message from session*");
call mtr.add_suppression('Generate write identification hash failed as the client session was killed');
call mtr.add_suppression('Generate gcs messsage failed as the client session was killed');
call mtr.add_suppression('Generate transaction message failed as the client session was killed');
set session sql_log_bin=1;

########################################################################
# 1. Create table and configure parameters for mem_cnt_check_err
#
CREATE TABLE t1(f0 INT NOT NULL PRIMARY KEY);

########################################################################
# 2. Testing memory/group_rpl/write_set_encoded.
#
include/rpl_sync.inc
include/diff_tables.inc [server1:test.t1, server2:test.t1]
include/assert.inc ['GTID_EXECUTED before and after query must be equal']
include/assert.inc ['Assert key is not present on table']
memory/group_rpl/write_set_encoded test passed.

########################################################################
# 3. Testing memory/group_rpl/Gcs_message_data::m_buffer.
#
include/rpl_sync.inc
include/diff_tables.inc [server1:test.t1, server2:test.t1]
include/assert.inc ['GTID_EXECUTED before and after query must be equal']
include/assert.inc ['Assert key is not present on table']
memory/group_rpl/Gcs_message_data::m_buffer test passed.
# Test query using consistency 'BEFORE'
include/rpl_sync.inc
include/diff_tables.inc [server1:test.t1, server2:test.t1]
include/assert.inc ['GTID_EXECUTED before and after query must be equal']
include/assert.inc ['Assert key is not present on table']
include/rpl_sync.inc
include/diff_tables.inc [server1:test.t1, server2:test.t1]
include/assert.inc ['GTID_EXECUTED before and after query must be equal']
include/assert.inc ['Assert key is not present on table']
memory/group_rpl/Gcs_message_data::m_buffer test passed.
# Test query using consistency 'AFTER'
include/rpl_sync.inc
include/diff_tables.inc [server1:test.t1, server2:test.t1]
include/assert.inc ['GTID_EXECUTED before and after query must be equal']
include/assert.inc ['Assert key is not present on table']
memory/group_rpl/Gcs_message_data::m_buffer test passed.

########################################################################
# 4. Cleanup
#
include/rpl_sync.inc
include/assert.inc ['server1 and server2 GTID_EXECUTED must be equal']
DROP TABLE t1;
include/group_replication_end.inc
