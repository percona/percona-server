include/group_replication.inc [rpl_server_count=2]
Warnings:
Note	####	Sending passwords in plain text without SSL/TLS is extremely insecure.
Note	####	Storing MySQL user name or password information in the master info repository is not secure and is therefore not recommended. Please consider using the USER and PASSWORD connection options for START SLAVE; see the 'START SLAVE Syntax' in the MySQL Manual for more information.
[connection server1]

# 1. Bootstrap group on server 1 and create table t1
[connection server1]
include/start_and_bootstrap_group_replication.inc
CREATE TABLE t1 (a INT NOT NULL PRIMARY KEY) ENGINE=InnoDB;
INSERT INTO t1 VALUES (1);

# 2. Join server2 to group
[connection server2]
include/start_group_replication.inc

# 3. Begin a transaction on server1
[connection server1]
BEGIN;
INSERT INTO t1 VALUES (2);

# 4. Lock tables on server2
[connection server_2]
LOCK TABLE t1 READ;

# 5. Execute switch to multi primary
[connection server2]
SELECT group_replication_switch_to_multi_primary_mode();

# 6. Commit pending transaction
[connection server1]
COMMIT;

# 7. Validate the old secondary is waiting on the application of its
#    replication backlog
[connection server_2]

# 8. A read statement to old secondary will not be put on hold
SET @@SESSION.group_replication_consistency= BEFORE_ON_PRIMARY_FAILOVER;
SELECT * FROM t1;
a
1
SET @@SESSION.group_replication_consistency= DEFAULT;
UNLOCK TABLES;

# 9. Reap with success change to multi primary
[connection server2]
group_replication_switch_to_multi_primary_mode()
Mode switched to multi-primary successfully.

# 10. Cleanup
[connection server_1]
DROP TABLE t1;
include/group_replication_end.inc
