################################################################################
# This test will emulate server-side errors on MySQL connections, such as
# the plugin has an ongoing operation that does not allow connections to
# be accepted.
#
# Test:
# 0. The test requires two servers: M1 and M2.
# 1. Bootstrap a group with M1.
# 2. Enable fail_incoming_connection_ongoing_operation and try to join M2.
# 3. Join M2 will fail. Assert that the error message exists in the log of M1.
# 4. Start M2 with the send command
# 5. Sleep for 10 seconds and then clear
#    fail_incoming_connection_ongoing_operation
# 6. reap the start command and M2 must be able to join the group.
# 7. Clean-up
################################################################################
--source include/big_test.inc
--source include/have_group_replication_mysql_communication_stack.inc
--source include/have_group_replication_plugin.inc
--let $rpl_skip_group_replication_start= 1
--source include/group_replication.inc

--echo #
--echo # 1. Bootstrap a group with M1.
--echo #
--echo #######

--let $rpl_connection_name= server1
--source include/rpl_connection.inc
--source include/start_and_bootstrap_group_replication.inc
--source include/disable_binlog.inc
call mtr.add_suppression(".*Failed to accept a MySQL connection for Group Replication. Group Replication plugin has an ongoing exclusive operation, like START, STOP or FORCE MEMBERS.*");
--source include/restore_binlog.inc

--let $rpl_connection_name= server2
--source include/rpl_connection.inc
--source include/disable_binlog.inc
call mtr.add_suppression("Timeout on wait for view after joining group");
call mtr.add_suppression("Timeout while waiting for the group communication engine to be ready!");
call mtr.add_suppression("The group communication engine is not ready for the member to join. Local port: *.*");
call mtr.add_suppression("read failed");
call mtr.add_suppression("The member was unable to join the group. Local port: *.*");
call mtr.add_suppression("Error connecting to all peers. Member join failed. Local port: *.*");
--source include/restore_binlog.inc

--echo #
--echo # 2. Enable fail_incoming_connection_ongoing_operation and try to
--echo #    join M2.
--echo #
--echo #######

--let $rpl_connection_name= server1
--source include/rpl_connection.inc

--let $debug_point = fail_incoming_connection_ongoing_operation
--source include/add_debug_point.inc

--let $rpl_connection_name= server2
--source include/rpl_connection.inc

--echo #
--echo # 3. Join M2 will fail. Assert that the error message exists
--echo #    in the log of M1.
--echo #
--echo #######

--replace_result $group_replication_group_name GROUP_REPLICATION_GROUP_NAME
--eval SET GLOBAL group_replication_group_name= "$group_replication_group_name"

--error ER_GROUP_REPLICATION_CONFIGURATION
START GROUP_REPLICATION;

--let $rpl_connection_name= server1
--source include/rpl_connection.inc

--let $assert_text= 'Failed to accept a MySQL connection for Group Replication. Group Replication plugin has an ongoing exclusive operation, like START, STOP or FORCE MEMBERS.'
--let $assert_cond= "[SELECT COUNT(*) as count FROM performance_schema.error_log WHERE error_code=\'MY-014081\' AND data LIKE \"%Failed to accept a MySQL connection for Group Replication%\", count, 1]" >= "1"
--source include/assert.inc

--echo #
--echo # 4. Start M2 with the send command
--echo #
--echo #######

--let $rpl_connection_name= server2
--source include/rpl_connection.inc

--send START GROUP_REPLICATION;

--let $rpl_connection_name= server_1_1
--source include/rpl_connection.inc

--echo #
--echo # 5. Sleep for 10 seconds and then clear
--echo #    fail_incoming_connection_ongoing_operation
--echo #
--echo #######
--sleep 10

--let $debug_point = fail_incoming_connection_ongoing_operation
--source include/remove_debug_point.inc

--echo #
--echo # 6. reap the start command and M2 must be able to join the group.
--echo #
--echo #######
--let $rpl_connection_name= server2
--source include/rpl_connection.inc

--reap

--echo #
--echo # 7. Clean-up
--echo #
--echo ######

--let $rpl_connection_name= server1
--source include/rpl_connection.inc

--source include/group_replication_end.inc

