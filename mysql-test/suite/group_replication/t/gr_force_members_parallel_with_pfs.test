################################################################################
# Executing force members should not block gcs operations when is waiting for
# the new view
#
# Test:
#  0. The test requires two servers.
#  1. Save members variables
#  2. Kill and restart a member to group loose majority.
#  3. Activate debug point to block set force_members
#  4. Set force members to server2 to reestablish group
#  5. Wait for debug point is reached
#  6. Other SET group_replications_* variables not allowed
#     when setting force_members
#  7. Operations on tables that access gcs_operations read
#     lock, like get_protocol_version won't be blocked
#  8. Resume force members
#  9. Wait for member get back online
# 10. Cleanup
#
################################################################################
--source include/have_debug_sync.inc
--source include/have_group_replication_plugin.inc
--source include/group_replication.inc

--echo
--echo ############################################################
--echo # 1. Save members variables

--let $rpl_connection_name= server1
--source include/rpl_connection.inc

--let $member1_group_replication_local_address= `SELECT @@GLOBAL.group_replication_local_address`
--let $group_replication_group_seeds= `SELECT @@GLOBAL.group_replication_group_seeds`
--let $member1_uuid= query_get_value(SELECT @@SERVER_UUID, @@SERVER_UUID, 1)

--let $rpl_connection_name= server2
--source include/rpl_connection.inc

--let $member2_group_replication_local_address= `SELECT @@GLOBAL.group_replication_local_address`

--echo
--echo ############################################################
--echo # 2. Kill and restart a member to group loose majority.

--let $rpl_connection_name= server1
--source include/rpl_connection.inc

--let $restart_parameters=restart:--group_replication_local_address=$member1_group_replication_local_address --group_replication_group_seeds=$group_replication_group_seeds --group_replication_group_name=$group_replication_group_name
--replace_result $member1_group_replication_local_address GROUP_REPLICATION_LOCAL_ADDRESS1 $group_replication_group_seeds GROUP_REPLICATION_GROUP_SEEDS $group_replication_group_name GROUP_REPLICATION_GROUP_NAME
--source include/kill_and_restart_mysqld.inc

--let $rpl_server_number= 1
--source include/rpl_reconnect.inc

--let $rpl_connection_name= server2
--source include/rpl_connection.inc

# confirm member is unreachable
--let $group_replication_member_state= UNREACHABLE
--let $group_replication_member_id= $member1_uuid
--source include/gr_wait_for_member_state.inc

--echo
--echo ############################################################
--echo # 3. Activate debug point to block set force_members

SET @@GLOBAL.DEBUG= '+d,group_replication_wait_on_check_force_members';

--echo
--echo ############################################################
--echo # 4. Set force members to server2 to reestablish group

--replace_result $member2_group_replication_local_address GROUP_REPLICATION_LOCAL_ADDRESS1
--send_eval SET GLOBAL group_replication_force_members= "$member2_group_replication_local_address"

--echo
--echo ############################################################
--echo # 5. Wait for debug point is reached

--let $rpl_connection_name= server_2
--source include/rpl_connection.inc
# Wait for the debug sync to be reached.
SET DEBUG_SYNC= "now WAIT_FOR signal.reached_group_replication_wait_on_check_force_members";

--echo
--echo ############################################################
--echo # 6. Other SET group_replications_* variables not allowed
--echo #    when setting force_members

--error ER_UNABLE_TO_SET_OPTION
SET GLOBAL group_replication_components_stop_timeout = 2;

--echo
--echo ############################################################
--echo # 7. Operations on tables that access gcs_operations read
--echo #    lock, like get_protocol_version won't be blocked

SELECT PROTOCOL_VERSION FROM performance_schema.replication_group_communication_information;

--echo
--echo ############################################################
--echo # 8. Resume force members
SET DEBUG_SYNC= 'now SIGNAL signal.resume_group_replication_wait_on_check_force_members';

--let $rpl_connection_name= server2
--source include/rpl_connection.inc
--reap

--echo
--echo ############################################################
--echo # 9. Wait for member get back online

let $wait_condition=SELECT COUNT(*)=1 FROM performance_schema.replication_group_members where MEMBER_STATE="ONLINE";
--source include/wait_condition.inc

--echo
--echo ############################################################
--echo # 10. Cleanup

SET @@GLOBAL.DEBUG= '-d,group_replication_wait_on_check_force_members';
SET DEBUG_SYNC= 'RESET';
--source include/group_replication_end.inc
