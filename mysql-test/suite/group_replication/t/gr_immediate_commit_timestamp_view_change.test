## Test case to verify original_commit_timestamp and
## immediate_commit_timestamp are correct for view-change.
#
## Test:
#
# 0. The test requires 2 servers
# 1. Start GR on S1
# 2. Assert ORIGINAL_COMMIT_TIMESTAMP and IMMEDIATE_COMMIT_TIMESTAMP
#    are correct on S1
# 3. Start GR on S2
# 4. Assert ORIGINAL_COMMIT_TIMESTAMP and IMMEDIATE_COMMIT_TIMESTAMP
#    are correct on S1 and S2
# 5. Clean Up
#

--source include/have_group_replication_plugin.inc
--let $rpl_skip_group_replication_start= 1
--source include/group_replication.inc

--echo ############################################################
--echo # 1. Start GR on S1

--let $rpl_connection_name= server1
--source include/rpl_connection.inc

--source include/start_and_bootstrap_group_replication.inc

--echo ############################################################
--echo # 2. Assert ORIGINAL_COMMIT_TIMESTAMP and IMMEDIATE_COMMIT_TIMESTAMP
--echo #    are correct on S1

--let $rpl_connection_name= server1
--source include/rpl_connection.inc

--let $assert_text= 'LAST_QUEUED_TRANSACTION_IMMEDIATE_COMMIT_TIMESTAMP is not 0.'
--let $assert_cond= [SELECT COUNT(*) AS count FROM performance_schema.replication_connection_status WHERE CHANNEL_NAME="group_replication_applier" AND UNIX_TIMESTAMP(LAST_QUEUED_TRANSACTION_IMMEDIATE_COMMIT_TIMESTAMP) > 0 AND UNIX_TIMESTAMP(LAST_QUEUED_TRANSACTION_ORIGINAL_COMMIT_TIMESTAMP) > 0, count, 1] = 1
--source include/assert.inc

--let $assert_text= 'LAST_QUEUED_TRANSACTION_IMMEDIATE_COMMIT_TIMESTAMP = LAST_QUEUED_TRANSACTION_ORIGINAL_COMMIT_TIMESTAMP.'
--let $assert_cond= [SELECT COUNT(*) AS count FROM performance_schema.replication_connection_status WHERE CHANNEL_NAME="group_replication_applier" AND (UNIX_TIMESTAMP(LAST_QUEUED_TRANSACTION_IMMEDIATE_COMMIT_TIMESTAMP) - UNIX_TIMESTAMP(LAST_QUEUED_TRANSACTION_ORIGINAL_COMMIT_TIMESTAMP)) = 0, count, 1] = 1
--source include/assert.inc

--echo ############################################################
--echo # 3. Start GR on S2

--let $rpl_connection_name= server2
--source include/rpl_connection.inc

--source include/start_group_replication.inc

--echo ############################################################
--echo # 4. Assert ORIGINAL_COMMIT_TIMESTAMP and IMMEDIATE_COMMIT_TIMESTAMP
--echo #    are correct on S1 and S2

--let $rpl_connection_name= server1
--source include/rpl_connection.inc

--let $assert_text= 'LAST_QUEUED_TRANSACTION_IMMEDIATE_COMMIT_TIMESTAMP is not 0.'
--let $assert_cond= [SELECT COUNT(*) AS count FROM performance_schema.replication_connection_status WHERE CHANNEL_NAME="group_replication_applier" AND UNIX_TIMESTAMP(LAST_QUEUED_TRANSACTION_IMMEDIATE_COMMIT_TIMESTAMP) > 0 AND UNIX_TIMESTAMP(LAST_QUEUED_TRANSACTION_ORIGINAL_COMMIT_TIMESTAMP) > 0, count, 1] = 1
--source include/assert.inc

--let $assert_text= 'LAST_QUEUED_TRANSACTION_IMMEDIATE_COMMIT_TIMESTAMP = LAST_QUEUED_TRANSACTION_ORIGINAL_COMMIT_TIMESTAMP.'
--let $assert_cond= [SELECT COUNT(*) AS count FROM performance_schema.replication_connection_status WHERE CHANNEL_NAME="group_replication_applier" AND (UNIX_TIMESTAMP(LAST_QUEUED_TRANSACTION_IMMEDIATE_COMMIT_TIMESTAMP) - UNIX_TIMESTAMP(LAST_QUEUED_TRANSACTION_ORIGINAL_COMMIT_TIMESTAMP)) = 0, count, 1] = 1
--source include/assert.inc

--let $rpl_connection_name= server2
--source include/rpl_connection.inc

--let $assert_text= 'LAST_QUEUED_TRANSACTION_IMMEDIATE_COMMIT_TIMESTAMP is not 0.'
--let $assert_cond= [SELECT COUNT(*) AS count FROM performance_schema.replication_connection_status WHERE CHANNEL_NAME="group_replication_applier" AND UNIX_TIMESTAMP(LAST_QUEUED_TRANSACTION_IMMEDIATE_COMMIT_TIMESTAMP) > 0 AND UNIX_TIMESTAMP(LAST_QUEUED_TRANSACTION_ORIGINAL_COMMIT_TIMESTAMP) > 0, count, 1] = 1
--source include/assert.inc

--let $assert_text= 'LAST_QUEUED_TRANSACTION_IMMEDIATE_COMMIT_TIMESTAMP = LAST_QUEUED_TRANSACTION_ORIGINAL_COMMIT_TIMESTAMP.'
--let $assert_cond= [SELECT COUNT(*) AS count FROM performance_schema.replication_connection_status WHERE CHANNEL_NAME="group_replication_applier" AND (UNIX_TIMESTAMP(LAST_QUEUED_TRANSACTION_IMMEDIATE_COMMIT_TIMESTAMP) - UNIX_TIMESTAMP(LAST_QUEUED_TRANSACTION_ORIGINAL_COMMIT_TIMESTAMP)) = 0, count, 1] = 1
--source include/assert.inc

--echo ############################################################
--echo # 5. Clean Up

--source include/group_replication_end.inc
