###############################################################################
# Validate the behavior that when a member joins a group on which all members
# do not support member actions, it does reset its configuration to the default
# one, but also inject a configuration update failure on the joiner.
#
# Test:
#   0. This test requires two servers
#   1. Bootstrap a group and increase the member actions
#      configuration version.
#      Simulate a member version lower than 8.0.25 which does
#      not support member actions, thence does not include its
#      configuration on the exchangeable data.
#   2. This member will not receive the members configuration
#      thence will reset its configuration to the default one.
#      but it will fail to update its configuration.
#   3. Rejoin the group without the failure injection on the joiner.
#   4. Clean up
###############################################################################
--source include/have_debug.inc
--source include/have_group_replication_plugin.inc
--let $rpl_skip_group_replication_start= 1
--let $rpl_group_replication_single_primary_mode=1
--source include/group_replication.inc

--let $rpl_connection_name= server2
--source include/rpl_connection.inc
SET SESSION sql_log_bin = 0;
call mtr.add_suppression("This member joined a group on which all members do not support member actions, as such it did reset its member configuration to the default one.");
call mtr.add_suppression("Unable to reset to member actions default configuration on member join. Please check the tables 'mysql.replication_group_member_actions' and 'mysql.replication_group_configuration_version'.");
call mtr.add_suppression("This member joined a group on which all members do not support replication failover channels integration on Group Replication, as such it did reset its replication failover channels configuration to the default one.");
call mtr.add_suppression("Unable to reset to replication failover channels default configuration on member join. Please check the tables .*");
SET SESSION sql_log_bin = 1;


--echo
--echo ############################################################
--echo # 1. Bootstrap a group and increase the member actions
--echo #    configuration version.
--echo #    Simulate a member version lower than 8.0.25 which does
--echo #    not support member actions, thence does not include its
--echo #    configuration on the exchangeable data.
--let $rpl_connection_name= server1
--source include/rpl_connection.inc
--source include/start_and_bootstrap_group_replication.inc

SELECT group_replication_disable_member_action("mysql_disable_super_read_only_if_primary", "AFTER_PRIMARY_ELECTION");
SELECT group_replication_enable_member_action("mysql_disable_super_read_only_if_primary", "AFTER_PRIMARY_ELECTION");

--let $assert_text= The version of replication_group_member_actions must be 3
--let $assert_cond= [SELECT version FROM performance_schema.replication_group_configuration_version WHERE name=\'replication_group_member_actions\', version, 1] = 3
--source include/assert.inc

SET @@GLOBAL.DEBUG='+d,group_replication_skip_add_member_actions_to_exchangeable_data';


--echo
--echo ############################################################
--echo # 2. This member will not receive the members configuration
--echo #    thence will reset its configuration to the default one,
--echo #    but it will fail to update its configuration.
--let $rpl_connection_name= server2
--source include/rpl_connection.inc

SELECT group_replication_disable_member_action("mysql_disable_super_read_only_if_primary", "AFTER_PRIMARY_ELECTION");

--let $assert_text= The action mysql_disable_super_read_only_if_primary must be disabled
--let $assert_cond= [SELECT enabled FROM performance_schema.replication_group_member_actions WHERE name=\'mysql_disable_super_read_only_if_primary\' AND event=\'AFTER_PRIMARY_ELECTION\', enabled, 1] = 0
--source include/assert.inc

--let $assert_text= The version of replication_group_member_actions must be 2
--let $assert_cond= [SELECT version FROM performance_schema.replication_group_configuration_version WHERE name=\'replication_group_member_actions\', version, 1] = 2
--source include/assert.inc

SET @@GLOBAL.DEBUG='+d,force_error_on_configuration_table_close';

--replace_result $group_replication_group_name GROUP_REPLICATION_GROUP_NAME
--eval SET GLOBAL group_replication_group_name= "$group_replication_group_name"

--error ER_GROUP_REPLICATION_CONFIGURATION
START GROUP_REPLICATION;

SET @@GLOBAL.DEBUG='-d,force_error_on_configuration_table_close';

--let $assert_only_after = CURRENT_TEST: group_replication.gr_member_actions_error_on_update_on_member_join_lower_version_group
--let $assert_file= $MYSQLTEST_VARDIR/log/mysqld.2.err
--let $assert_select= Unable to reset to member actions default configuration on member join. Please check the tables 'mysql.replication_group_member_actions' and 'mysql.replication_group_configuration_version'.
--let $assert_count= 1
--let $assert_text= Unable to reset to member actions default configuration on member join.
--source include/assert_grep.inc

--let $assert_text= The action mysql_disable_super_read_only_if_primary must be disabled
--let $assert_cond= [SELECT enabled FROM performance_schema.replication_group_member_actions WHERE name=\'mysql_disable_super_read_only_if_primary\' AND event=\'AFTER_PRIMARY_ELECTION\', enabled, 1] = 0
--source include/assert.inc

--let $assert_text= The version of replication_group_member_actions must be 2
--let $assert_cond= [SELECT version FROM performance_schema.replication_group_configuration_version WHERE name=\'replication_group_member_actions\', version, 1] = 2
--source include/assert.inc


--echo
--echo ############################################################
--echo # 3. Rejoin the group without the failure injection on the joiner.
--let $rpl_connection_name= server2
--source include/rpl_connection.inc
--source include/start_group_replication.inc

--let $assert_text= There must be two member actions
--let $assert_cond= [SELECT COUNT(*) FROM performance_schema.replication_group_member_actions] = 2
--source include/assert.inc

--let $assert_text= mysql_disable_super_read_only_if_primary action default value
--let $assert_cond= [SELECT COUNT(*) FROM performance_schema.replication_group_member_actions WHERE name=\'mysql_disable_super_read_only_if_primary\' AND enabled=1 AND type=\'INTERNAL\' AND event=\'AFTER_PRIMARY_ELECTION\' AND priority=1 AND error_handling=\'IGNORE\'] = 1
--source include/assert.inc

--let $assert_text= mysql_start_failover_channels_if_primary action default value
--let $assert_cond= [SELECT COUNT(*) FROM performance_schema.replication_group_member_actions WHERE name=\'mysql_start_failover_channels_if_primary\' AND enabled=1 AND type=\'INTERNAL\' AND event=\'AFTER_PRIMARY_ELECTION\' AND priority=10 AND error_handling=\'CRITICAL\'] = 1
--source include/assert.inc

--let $assert_text= There must be one GR configuration version
--let $assert_cond= [SELECT COUNT(*) FROM performance_schema.replication_group_configuration_version] = 1
--source include/assert.inc

--let $assert_text= The version of replication_group_member_actions must be 1
--let $assert_cond= [SELECT version FROM performance_schema.replication_group_configuration_version WHERE name=\'replication_group_member_actions\', version, 1] = 1
--source include/assert.inc

--let $assert_only_after = CURRENT_TEST: group_replication.gr_member_actions_join_lower_version_group
--let $assert_file= $MYSQLTEST_VARDIR/log/mysqld.2.err
--let $assert_select= This member joined a group on which all members do not support member actions, as such it did reset its member configuration to the default one.
--let $assert_count= 2
--let $assert_text= This member joined a group on which all members do not support member actions, as such it did reset its member configuration to the default one.
--source include/assert_grep.inc


--echo
--echo ############################################################
--echo # 4. Clean up.
--let $rpl_connection_name= server1
--source include/rpl_connection.inc
SET @@GLOBAL.DEBUG='-d,group_replication_skip_add_member_actions_to_exchangeable_data';

--source include/group_replication_end.inc
