###############################################################################
# Validate that, on single-primary mode, when the member actions are changed
# on the primary, they are propagated to the group.
#
# Test:
#   0. This test requires two servers
#   1. Start a group in single-primary mode with two members.
#      The primary is server1.
#   2. Disable the action `mysql_disable_super_read_only_if_primary`
#      on the primary.
#   3. server2 will receive the member actions configuration
#      from the primary.
#   4. Clean up
###############################################################################
--source include/have_group_replication_plugin.inc
--let $rpl_skip_group_replication_start= 1
--let $rpl_group_replication_single_primary_mode=1
--source include/group_replication.inc


--echo
--echo ############################################################
--echo # 1. Start a group in single-primary mode with two members.
--echo #    The primary is server1.
--let $rpl_connection_name= server1
--source include/rpl_connection.inc
--source include/start_and_bootstrap_group_replication.inc

--let $assert_only_after = CURRENT_TEST: group_replication.gr_member_actions_propagation
--let $assert_file= $MYSQLTEST_VARDIR/log/mysqld.1.err
--let $assert_select= The member action "mysql_disable_super_read_only_if_primary" for event "AFTER_PRIMARY_ELECTION" with priority "1" will be run.
--let $assert_count= 1
--let $assert_text= Member action "mysql_disable_super_read_only_if_primary" for event "AFTER_PRIMARY_ELECTION" was triggered
--source include/assert_grep.inc

--let $rpl_connection_name= server2
--source include/rpl_connection.inc
--source include/start_group_replication.inc

--let $assert_only_after = CURRENT_TEST: group_replication.gr_member_actions_propagation
--let $assert_file= $MYSQLTEST_VARDIR/log/mysqld.2.err
--let $assert_select= The member action "mysql_disable_super_read_only_if_primary" for event "AFTER_PRIMARY_ELECTION" with priority "1" will be run.
--let $assert_count= 0
--let $assert_text= Member action "mysql_disable_super_read_only_if_primary" for event "AFTER_PRIMARY_ELECTION" was not triggered
--source include/assert_grep.inc


--echo
--echo ############################################################
--echo # 2. Disable the action `mysql_disable_super_read_only_if_primary`
--echo #    on the primary.
--let $rpl_connection_name= server1
--source include/rpl_connection.inc

SELECT group_replication_disable_member_action("mysql_disable_super_read_only_if_primary", "AFTER_PRIMARY_ELECTION");

--let $assert_text= The action mysql_disable_super_read_only_if_primary must be disabled
--let $assert_cond= [SELECT enabled FROM performance_schema.replication_group_member_actions WHERE name=\'mysql_disable_super_read_only_if_primary\' AND event=\'AFTER_PRIMARY_ELECTION\', enabled, 1] = 0
--source include/assert.inc

--let $assert_text= The version of replication_group_member_actions must be 2
--let $assert_cond= [SELECT version FROM performance_schema.replication_group_configuration_version WHERE name=\'replication_group_member_actions\', version, 1] = 2
--source include/assert.inc


--echo
--echo ############################################################
--echo # 3. server2 will receive the member actions configuration
--echo #    from the primary.
--let $rpl_connection_name= server2
--source include/rpl_connection.inc

--let $wait_condition= SELECT COUNT(*)=1 FROM performance_schema.replication_group_configuration_version WHERE name="replication_group_member_actions" AND version=2;
--source include/wait_condition.inc

--let $assert_text= The action mysql_disable_super_read_only_if_primary must be disabled
--let $assert_cond= [SELECT enabled FROM performance_schema.replication_group_member_actions WHERE name=\'mysql_disable_super_read_only_if_primary\' AND event=\'AFTER_PRIMARY_ELECTION\', enabled, 1] = 0
--source include/assert.inc


--echo
--echo ############################################################
--echo # 4. Clean up.
--source include/group_replication_end.inc
