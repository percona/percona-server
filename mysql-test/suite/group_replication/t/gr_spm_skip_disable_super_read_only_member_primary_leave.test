###############################################################################
# Validate that, on single-primary mode:
#  * the actions configuration of the member that bootstraps a group,
#    becomes the group actions configuration.
#  * a member that joins the group, overrides its configuration with the
#    one of the group.
#  * when a new primary is elected, it follows the actions.
#
# Test:
#   0. This test requires two servers
#   1. Disable the action `mysql_disable_super_read_only_if_primary`
#      on the server that will bootstrap the group.
#   2. Add server2 to the group, server2 will receive the
#      member actions configuration from the group.
#   3. The primary will leave the group.
#      Server2 will be the new primary and will remain read_only,
#      since the action `mysql_disable_super_read_only_if_primary` is disabled.
#   4. Clean up
###############################################################################
--source include/have_group_replication_plugin.inc
--let $rpl_skip_group_replication_start= 1
--let $rpl_group_replication_single_primary_mode=1
--source include/group_replication.inc


--echo
--echo ############################################################
--echo # 1. Disable the action `mysql_disable_super_read_only_if_primary`
--echo #    on the server that will bootstrap the group.
--let $rpl_connection_name= server1
--source include/rpl_connection.inc

SELECT group_replication_disable_member_action("mysql_disable_super_read_only_if_primary", "AFTER_PRIMARY_ELECTION");

--let $assert_text= The action mysql_disable_super_read_only_if_primary must be disabled
--let $assert_cond= [SELECT enabled FROM performance_schema.replication_group_member_actions WHERE name=\'mysql_disable_super_read_only_if_primary\' AND event=\'AFTER_PRIMARY_ELECTION\', enabled, 1] = 0
--source include/assert.inc

--let $assert_text= The version of replication_group_member_actions must be 2
--let $assert_cond= [SELECT version FROM performance_schema.replication_group_configuration_version WHERE name=\'replication_group_member_actions\', version, 1] = 2
--source include/assert.inc

--let $skip_wait_for_disabled_read_only= 1
--source include/start_and_bootstrap_group_replication.inc

--let $skip_wait_for_disabled_read_only= 1
--source include/gr_assert_primary_member.inc

--let $assert_text= The action mysql_disable_super_read_only_if_primary must be disabled
--let $assert_cond= [SELECT enabled FROM performance_schema.replication_group_member_actions WHERE name=\'mysql_disable_super_read_only_if_primary\' AND event=\'AFTER_PRIMARY_ELECTION\', enabled, 1] = 0
--source include/assert.inc

--let $assert_text= The version of replication_group_member_actions must be 2
--let $assert_cond= [SELECT version FROM performance_schema.replication_group_configuration_version WHERE name=\'replication_group_member_actions\', version, 1] = 2
--source include/assert.inc

--let $assert_text= The super_read_only mode must be 1
--let $assert_cond= "[SELECT @@GLOBAL.super_read_only]" = 1;
--source include/assert.inc

--let $assert_text= The read_only mode must be 1
--let $assert_cond= "[SELECT @@GLOBAL.read_only]" = 1;
--source include/assert.inc

--let $assert_only_after = CURRENT_TEST: group_replication.gr_spm_skip_disable_super_read_only_member_primary_leave
--let $assert_file= $MYSQLTEST_VARDIR/log/mysqld.1.err
--let $assert_select= The member action "mysql_disable_super_read_only_if_primary" for event "AFTER_PRIMARY_ELECTION" with priority "1" will be run.
--let $assert_count= 0
--let $assert_text= Member action "mysql_disable_super_read_only_if_primary" for event "AFTER_PRIMARY_ELECTION" was not triggered
--source include/assert_grep.inc


--echo
--echo ############################################################
--echo # 2. Add server2 to the group, server2 will receive the
--echo #    member actions configuration from the group.
--let $rpl_connection_name= server2
--source include/rpl_connection.inc

# Increase configuration version.
SELECT group_replication_disable_member_action("mysql_disable_super_read_only_if_primary", "AFTER_PRIMARY_ELECTION");
SELECT group_replication_enable_member_action("mysql_disable_super_read_only_if_primary", "AFTER_PRIMARY_ELECTION");

--let $assert_text= The action mysql_disable_super_read_only_if_primary must be enabled
--let $assert_cond= [SELECT enabled FROM performance_schema.replication_group_member_actions WHERE name=\'mysql_disable_super_read_only_if_primary\' AND event=\'AFTER_PRIMARY_ELECTION\', enabled, 1] = 1
--source include/assert.inc

--let $assert_text= The version of replication_group_member_actions must be 3
--let $assert_cond= [SELECT version FROM performance_schema.replication_group_configuration_version WHERE name=\'replication_group_member_actions\', version, 1] = 3
--source include/assert.inc

--source include/start_group_replication.inc

--source include/gr_assert_secondary_member.inc

--let $assert_text= The action mysql_disable_super_read_only_if_primary must be disabled
--let $assert_cond= [SELECT enabled FROM performance_schema.replication_group_member_actions WHERE name=\'mysql_disable_super_read_only_if_primary\' AND event=\'AFTER_PRIMARY_ELECTION\', enabled, 1] = 0
--source include/assert.inc

--let $assert_text= The version of replication_group_member_actions must be 2
--let $assert_cond= [SELECT version FROM performance_schema.replication_group_configuration_version WHERE name=\'replication_group_member_actions\', version, 1] = 2
--source include/assert.inc

--let $assert_text= The super_read_only mode must be 1
--let $assert_cond= "[SELECT @@GLOBAL.super_read_only]" = 1;
--source include/assert.inc

--let $assert_text= The read_only mode must be 1
--let $assert_cond= "[SELECT @@GLOBAL.read_only]" = 1;
--source include/assert.inc


--echo
--echo ############################################################
--echo # 3. The primary will leave the group.
--echo #    Server2 will be the new primary and will remain read_only,
--echo #    since the action `mysql_disable_super_read_only_if_primary` is disabled.
--let $rpl_connection_name= server1
--source include/rpl_connection.inc
--source include/stop_group_replication.inc

--let $rpl_connection_name= server2
--source include/rpl_connection.inc

--let $skip_wait_for_disabled_read_only= 1
--source include/gr_assert_primary_member.inc

--let $assert_text= The super_read_only mode must be 1
--let $assert_cond= "[SELECT @@GLOBAL.super_read_only]" = 1;
--source include/assert.inc

--let $assert_text= The read_only mode must be 1
--let $assert_cond= "[SELECT @@GLOBAL.read_only]" = 1;
--source include/assert.inc

--let $assert_only_after = CURRENT_TEST: group_replication.gr_spm_skip_disable_super_read_only_member_primary_leave
--let $assert_file= $MYSQLTEST_VARDIR/log/mysqld.2.err
--let $assert_select= The member action "mysql_disable_super_read_only_if_primary" for event "AFTER_PRIMARY_ELECTION" with priority "1" will be run.
--let $assert_count= 0
--let $assert_text= Member action "mysql_disable_super_read_only_if_primary" for event "AFTER_PRIMARY_ELECTION" was not triggered
--source include/assert_grep.inc


--echo
--echo ############################################################
--echo # 4. Clean up.
--source include/group_replication_end.inc
