SELECT @@innodb_doublewrite;
@@innodb_doublewrite
1
CALL mtr.add_suppression("Skip re-populating collations and character sets tables in InnoDB read-only mode.");
CALL mtr.add_suppression("Skip updating information_schema metadata in InnoDB read-only mode.");
CALL mtr.add_suppression("Skipped updating resource group metadata in InnoDB read only mode.");
# Test that the parallel doublewrite is there during the regular server operation
SELECT @@GLOBAL.innodb_parallel_doublewrite_path;
@@GLOBAL.innodb_parallel_doublewrite_path
xb_doublewrite
# Test that a clean shutdown removes the doublewrite file
# No files should be found:
# Test that a custom doublewrite file name works
# restart:--innodb-parallel-doublewrite-path=xb_my_name
SELECT @@GLOBAL.innodb_parallel_doublewrite_path;
@@GLOBAL.innodb_parallel_doublewrite_path
xb_my_name
# Test that a custom absolute doublewrite file path works
# restart:<hidden args>
# Test that a custom relative doublewrite file path works
# restart:<hidden args>
# Test that empty arg is rejected
Pattern "must point to a regular file" found
# Test that current directory arg is rejected
Pattern "must point to a regular file" found
# Test that empty arg in combination with empty innodb_data_home_dir is treated correctly
Pattern "must point to a regular file" found
# Test that maximum possible parallel doublewrite file is accepted
# restart
SELECT @@GLOBAL.innodb_parallel_doublewrite_path;
@@GLOBAL.innodb_parallel_doublewrite_path
xb_doublewrite
# Test that too big parallel doublewrite file is diagnosed
Pattern "bytes is larger than the maximum size" found
# Test that doublewrite file whose last page is truncated is diagnosed
Pattern "bytes is not a multiple of a page size" found
# Test that zero-sized doublewrite file is diagnosed and accepted
# restart:<hidden args>
Pattern "Parallel doublewrite buffer is zero-sized" found
# restart
#
# Bug 1629879: Server won't start with innodb_force_recovery=6 because parallel doublewrite file exists
#
# Test that --innodb_force_recovery=6 fails to start with the doublewrite file present
call mtr.add_suppression("InnoDB: Failed to find tablespace for table");
SET GLOBAL innodb_fast_shutdown=2;
# Test that --innodb_force_recovery=6 succeeds to start with the doublewrite file
# restart:--innodb-force-recovery=6
# Test that --innodb_force_recovery=6 succeeds to start without the doublewrite file
# restart:--innodb-force-recovery=6
#
# Bug PS-3411: Parallel doublewrite buffer file created when skip-innodb_doublewrite is set
#
# restart:<hidden args>
CREATE TABLE t1 (a INT);
SELECT * FROM t1 ORDER BY a DESC LIMIT 10;
a
1000
999
998
997
996
995
994
993
992
991
DROP TABLE t1;
# restart:<hidden args>
CREATE TABLE t1 (a INT);
SELECT * FROM t1 ORDER BY a DESC LIMIT 10;
a
1000
999
998
997
996
995
994
993
992
991
DROP TABLE t1;
# Cleanup
# restart
