#
# Tests for the changed page tracking bitmap.
#

# Does not test if innodb_max_bitmap_file_size variable actually works, as we cannot force
# a checkpoint deterministically without generating a bunch of log data and restarts (which
# then cause bitmap file rotations on their own).

# Delete any existing bitmaps
--source include/restart_mysqld.inc
RESET CHANGED_PAGE_BITMAPS;

--disable_warnings
DROP TABLE IF EXISTS t1, t2;
--enable_warnings

let $MYSQLD_DATADIR= `select @@datadir`;
let $BITMAP_FILE= $MYSQLD_DATADIR/ib_modified_log_1_0.xdb;

#
# Test that a bitmap file is created
#

# Create some log data, less than log capacity
CREATE TABLE t1 (x INT) ENGINE=InnoDB;
INSERT INTO t1 VALUES (1),(2),(3),(4),(5);

file_exists $BITMAP_FILE;
# Here and below remove the LSNs from the file names on listing them
--replace_regex /_[[:digit:]]+\.xdb$//
list_files $MYSQLD_DATADIR ib_modified_log*;

#
# Test that the bitmap file is rotated on a server restart and tracking continues
#

--echo 1st restart
--source include/restart_mysqld.inc

INSERT INTO t1 VALUES (1),(2),(3),(4),(5);

--let $assert_text= There should not be a hole in the tracked LSN range
--let $assert_cond= COUNT(*) FROM INFORMATION_SCHEMA.INNODB_CHANGED_PAGES
--source include/assert.inc

file_exists $BITMAP_FILE;
--replace_regex /_[[:digit:]]+\.xdb$//
list_files $MYSQLD_DATADIR ib_modified_log*;

--echo 2nd restart
--source include/restart_mysqld.inc

INSERT INTO t1 VALUES (1),(2),(3),(4),(5);

--let $assert_text= There should not be a hole in the tracked LSN range
--let $assert_cond= COUNT(*) FROM INFORMATION_SCHEMA.INNODB_CHANGED_PAGES
--source include/assert.inc

file_exists $BITMAP_FILE;
--replace_regex /_[[:digit:]]+\.xdb$//
list_files $MYSQLD_DATADIR ib_modified_log*;

#
# Test that an empty existing bitmap file is handled properly when it's
# possible to re-read the entire missing range.
#

call mtr.add_suppression("last tracked LSN in");

--source include/shutdown_mysqld.inc
remove_files_wildcard $MYSQLD_DATADIR ib_modified_log*;
write_file $BITMAP_FILE;
EOF
--echo 3rd restart
--source include/start_mysqld.inc

--let $assert_text= There should not be a hole in the tracked LSN range
--let $assert_cond= COUNT(*) FROM INFORMATION_SCHEMA.INNODB_CHANGED_PAGES
--source include/assert.inc

#
# Test tracking more log data than the log capacity and the second tablespace id
#

INSERT INTO t1 SELECT x FROM t1;
INSERT INTO t1 SELECT x FROM t1;
INSERT INTO t1 SELECT x FROM t1;
INSERT INTO t1 SELECT x FROM t1;
INSERT INTO t1 SELECT x FROM t1;
INSERT INTO t1 SELECT x FROM t1;
INSERT INTO t1 SELECT x FROM t1;
INSERT INTO t1 SELECT x FROM t1;
INSERT INTO t1 SELECT x FROM t1;
INSERT INTO t1 SELECT x FROM t1;
INSERT INTO t1 SELECT x FROM t1;
INSERT INTO t1 SELECT x FROM t1;
INSERT INTO t1 SELECT x FROM t1;
INSERT INTO t1 SELECT x FROM t1;
INSERT INTO t1 SELECT x FROM t1;
CREATE TABLE t2 (x INT) ENGINE=InnoDB;
INSERT INTO t2 VALUES (1),(2),(3),(4),(5);

--let $assert_text= There should not be a hole in the tracked LSN range
--let $assert_cond= COUNT(*) FROM INFORMATION_SCHEMA.INNODB_CHANGED_PAGES
--source include/assert.inc

#
# Test that an empty existing bitmap file is handled properly when it's impossible to re-read the full missing range.
#

call mtr.add_suppression("The age of last tracked LSN exceeds log capacity");

--source include/shutdown_mysqld.inc
remove_files_wildcard $MYSQLD_DATADIR ib_modified_log*;
write_file $BITMAP_FILE;
EOF
--echo 4th restart
--source include/start_mysqld.inc

INSERT INTO t1 VALUES (1),(2),(3),(4),(5);

file_exists $BITMAP_FILE;
--replace_regex /_[[:digit:]]+\.xdb$//
list_files $MYSQLD_DATADIR ib_modified_log*;

#
# Test that the bitmap file is read in block size multiples with junk at the end discarded
#

# 5th restart: remove all the bitmap files
--source include/shutdown_mysqld.inc
remove_files_wildcard $MYSQLD_DATADIR ib_modified_log*;
--echo 5th restart
--source include/start_mysqld.inc

INSERT INTO t1 VALUES (1),(2),(3),(4),(5);
file_exists $BITMAP_FILE;
--replace_regex /_[[:digit:]]+\.xdb$//
list_files $MYSQLD_DATADIR ib_modified_log*;

# 6th restart: there should be only one bitmap file, append junk to it
--source include/shutdown_mysqld.inc
append_file $BITMAP_FILE;
junk junk junk junk
EOF
--echo 6th restart
--source include/start_mysqld.inc
call mtr.add_suppression("truncated block detected.*");

# TODO: check the tracked LSN range continuity once this info is exposed through
# INFORMATION_SCHEMA.

file_exists $BITMAP_FILE;
--replace_regex /_[[:digit:]]+\.xdb$//
list_files $MYSQLD_DATADIR ib_modified_log*;

#
# Test that last tracked LSN is determined correctly when the last bitmap file is fully
# corrupted
#
--source include/shutdown_mysqld.inc

# Create and source a file with the following contents:
# --remove_file 2nd_bmp_file
# --write_file 2nd_bmp_file
# junk junk junk
# EOF

# Less awkward way to get this info would be to expose it through I_S.

write_file $MYSQLD_DATADIR/corrupt_bmp_2.inc;
--remove_file $MYSQLD_DATADIR/EOF
list_files_append_file $MYSQLD_DATADIR/corrupt_bmp_2.inc $MYSQLD_DATADIR ib_modified_log_2_*;
append_file $MYSQLD_DATADIR/corrupt_bmp_2.inc;
--write_file $MYSQLD_DATADIR/EOF
list_files_append_file $MYSQLD_DATADIR/corrupt_bmp_2.inc $MYSQLD_DATADIR ib_modified_log_2_*;
append_file $MYSQLD_DATADIR/corrupt_bmp_2.inc END_OF_FILE;
junk junk junk
EOF
END_OF_FILE
source $MYSQLD_DATADIR/corrupt_bmp_2.inc;
remove_file $MYSQLD_DATADIR/corrupt_bmp_2.inc;
--echo 7th restart
--source include/start_mysqld.inc

# TODO: check the tracked LSN range continuity once this info is exposed through
# INFORMATION_SCHEMA.

file_exists $BITMAP_FILE;
--replace_regex /_[[:digit:]]+\.xdb$//
list_files $MYSQLD_DATADIR ib_modified_log*;

DROP TABLE t1, t2;

#
# Test for log tracking compatibility with innodb_force_recovery (bug 1083596).
#

call mtr.add_suppression("Failed to find tablespace for table");
call mtr.add_suppression("Allocated tablespace [0-9]+, old maximum was");
call mtr.add_suppression("InnoDB: Error: page [0-9]* log sequence number [0-9]*");

--echo 8th restart
--let $restart_parameters= restart:--innodb-force-recovery=6
--source include/restart_mysqld.inc

# innodb_force_recovery desyncs bitmap data and logs
RESET CHANGED_PAGE_BITMAPS;

# A restart to allow data files to sync with redo log after the forced recovery
--echo 9th restart
--let $restart_parameters=
--source include/restart_mysqld.inc

#
# Test that --innodb-read-only works
#
--echo 10th restart
--source include/restart_innodb_read_only.inc

SELECT @@innodb_read_only;
SELECT @@innodb_track_changed_pages;

--echo 11th restart
--source include/restart_mysqld.inc

#
# Test that bitmap files are created correctly in innodb_data_home_dir without a trailing
# path separator (bug 1181887) and that INFORMATION_SCHEMA.INNODB_CHANGED_PAGES table works
# too (bug 1364315)
#
let $MYSQLD_DATADIR1_PARENT = $MYSQL_TMP_DIR/datadir1;
let $MYSQLD_DATADIR1 = $MYSQLD_DATADIR1_PARENT/data;
let $MYSQLD_BASEDIR= `select @@basedir`;

let BOOTSTRAP_ERR=$MYSQLTEST_VARDIR/tmp/bootstrap2.log;
let BOOTSTRAP_SQL=$MYSQL_TMP_DIR/boot.sql;

write_file $BOOTSTRAP_SQL;
CREATE DATABASE test DEFAULT CHARACTER SET latin1;
EOF

--source include/shutdown_mysqld.inc
--let $tmpdatadir=$MYSQLTEST_VARDIR/tmpdatadir
--mkdir $tmpdatadir
--mkdir $MYSQL_TMP_DIR/datadir1
--echo 12th restart
--exec $MYSQLD --no-defaults --initialize-insecure --innodb-data-home-dir=$tmpdatadir --innodb-track-changed-pages=TRUE --lc_messages_dir=$MYSQL_SHAREDIR --basedir=$MYSQLD_BASEDIR --datadir=$MYSQLD_DATADIR1 --init-file=$BOOTSTRAP_SQL </dev/null > $BOOTSTRAP_ERR 2>&1
--remove_file $BOOTSTRAP_SQL
--remove_file $BOOTSTRAP_ERR

--let $restart_parameters=restart:--innodb-data-home-dir=$tmpdatadir --datadir=$MYSQLD_DATADIR1
--replace_result $tmpdatadir tmpdatadir $MYSQLD_DATADIR1 MYSQLD_DATADIR1
--source include/start_mysqld.inc

file_exists $tmpdatadir/ib_modified_log_1_0.xdb;
--replace_regex /_[[:digit:]]+\.xdb$//
list_files $tmpdatadir ib_modified_log*;

--let $assert_text= INFORMATION_SCHEMA.INNODB_CHANGED_PAGES is not empty
--let $assert_cond= COUNT(*) > 1 FROM INFORMATION_SCHEMA.INNODB_CHANGED_PAGES
--source include/assert.inc

--source include/shutdown_mysqld.inc
--force-rmdir $tmpdatadir
--force-rmdir $MYSQLD_DATADIR1_PARENT
--let $restart_parameters=restart:--innodb-track-changed-pages=TRUE
--echo 13th restart
--source include/start_mysqld.inc
