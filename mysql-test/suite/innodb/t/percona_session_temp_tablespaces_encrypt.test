let $MYSQLD_DATADIR=`SELECT @@datadir`;

--source include/restart_mysqld.inc

--source include/count_sessions.inc

# Using on disk tablespace for intrinsic optimiser tables
SELECT @@innodb_temp_tablespace_encrypt;
SET GLOBAL big_tables=ON;

--echo # Create a new connection.
connect (con1, localhost, root,,);

connection con1;

--echo # A session tablespace will be allocated to connection 1
--echo # for explicit temporary tables and state will be active
SELECT @@session.big_tables;

CREATE TEMPORARY TABLE test.t1(a INT, b BLOB);
CREATE TEMPORARY TABLE test.t2(a INT, b BLOB);
CREATE TABLE t3 like t1;
INSERT INTO t1 values (1, 'hello'), (2, 'hi'), (3, 'wl11613'), (4, 'temp'), (5, 'tablespace');
INSERT INTO t2 values (1, 'hello'), (2, 'hi'), (3, 'wl11613'), (4, 'temp'), (5, 'tablespace');

INSERT INTO t3 SELECT * FROM t1;
INSERT INTO t3 SELECT * FROM t2;
INSERT INTO t3 SELECT * FROM t3;
INSERT INTO t3 SELECT * FROM t3;

--replace_column 1 ID
--replace_regex /\\#innodb_temp\\temp/\/#innodb_temp\/temp/
SELECT * FROM INFORMATION_SCHEMA.INNODB_SESSION_TEMP_TABLESPACES WHERE ID = connection_id() ORDER BY SPACE;

SELECT @@global.default_table_encryption;
SET GLOBAL default_table_encryption=ON;
SELECT @@global.default_table_encryption;

CREATE TEMPORARY TABLE test.t4(a INT, b BLOB);
CREATE TEMPORARY TABLE test.t5(a INT, b BLOB);
CREATE TABLE t6 like t1;
INSERT INTO t4 values (1, 'hello'), (2, 'hi'), (3, 'wl11613'), (4, 'temp'), (5, 'tablespace');
INSERT INTO t5 values (1, 'hello'), (2, 'hi'), (3, 'wl11613'), (4, 'temp'), (5, 'tablespace');
INSERT INTO t6 SELECT * FROM t4;
INSERT INTO t6 SELECT * FROM t5;
INSERT INTO t6 SELECT * FROM t6;
INSERT INTO t6 SELECT * FROM t6;

--replace_column 1 ID
--replace_regex /\\#innodb_temp\\temp/\/#innodb_temp\/temp/
SELECT * FROM INFORMATION_SCHEMA.INNODB_SESSION_TEMP_TABLESPACES WHERE ID = connection_id() ORDER BY SPACE;

SELECT @@global.default_table_encryption;
SET GLOBAL default_table_encryption=OFF;
SELECT @@global.default_table_encryption;
DROP TABLE t3, t6;

SET GLOBAL innodb_temp_tablespace_encrypt=ON;
--echo # Create a new connection.
connect (con2, localhost, root,,);
connection con2;
SELECT @@session.big_tables;

--echo # Ensure entries in information_schema.processlist and
--echo # information_schema.innodb_session_temp_tablespaces are
--echo # in sync

CREATE TEMPORARY TABLE test.t1(a INT, b BLOB);
CREATE TEMPORARY TABLE test.t2(a INT, b BLOB);
CREATE TABLE t3 like t1;
INSERT INTO t1 values (1, 'hello'), (2, 'hi'), (3, 'wl11613'), (4, 'temp'), (5, 'tablespace');
INSERT INTO t2 values (1, 'hello'), (2, 'hi'), (3, 'wl11613'), (4, 'temp'), (5, 'tablespace');

INSERT INTO t3 SELECT * FROM t1;
INSERT INTO t3 SELECT * FROM t2;
INSERT INTO t3 SELECT * FROM t3;
INSERT INTO t3 SELECT * FROM t3;

--replace_column 1 ID
--replace_regex /\\#innodb_temp\\temp/\/#innodb_temp\/temp/
SELECT * FROM INFORMATION_SCHEMA.INNODB_SESSION_TEMP_TABLESPACES WHERE ID = connection_id() ORDER BY SPACE;

SELECT @@global.default_table_encryption;
SET GLOBAL default_table_encryption=ON;
SELECT @@global.default_table_encryption;

CREATE TEMPORARY TABLE test.t4(a INT, b BLOB);
CREATE TEMPORARY TABLE test.t5(a INT, b BLOB);
CREATE TABLE t6 like t1;
INSERT INTO t4 values (1, 'hello'), (2, 'hi'), (3, 'wl11613'), (4, 'temp'), (5, 'tablespace');
INSERT INTO t5 values (1, 'hello'), (2, 'hi'), (3, 'wl11613'), (4, 'temp'), (5, 'tablespace');
INSERT INTO t6 SELECT * FROM t4;
INSERT INTO t6 SELECT * FROM t5;
INSERT INTO t6 SELECT * FROM t6;
INSERT INTO t6 SELECT * FROM t6;

--replace_column 1 ID
--replace_regex /\\#innodb_temp\\temp/\/#innodb_temp\/temp/
SELECT * FROM INFORMATION_SCHEMA.INNODB_SESSION_TEMP_TABLESPACES WHERE ID = connection_id() ORDER BY SPACE;

ALTER INSTANCE ROTATE INNODB MASTER KEY;

connection default;
disconnect con1;
disconnect con2;
--source include/wait_until_count_sessions.inc

SET GLOBAL innodb_temp_tablespace_encrypt=default;
SET GLOBAL default_table_encryption=default;
SET GLOBAL big_tables=default;
DROP TABLE t3;
DROP TABLE t6;
connect (con3, localhost, root,,);
connection con3;

--let $assert_text = Active session temp tablespaces count should be 2
--let $assert_cond = "[SELECT COUNT(*) FROM INFORMATION_SCHEMA.INNODB_SESSION_TEMP_TABLESPACES WHERE STATE = \"ACTIVE\"]" = 2
--source include/assert.inc

--let $assert_text = Inactive session temp tablespaces count should be 2
--let $assert_cond = "[SELECT COUNT(*) FROM INFORMATION_SCHEMA.INNODB_SESSION_TEMP_TABLESPACES WHERE STATE = \"INACTIVE\"]" = 2
--source include/assert.inc

connection default;
disconnect con3;

--source include/wait_until_count_sessions.inc
