--source include/have_innodb.inc

--let $dict1_name = dict1
--let $dict2_name = dict2
--let $unknown_dict_name = unknown

# create two compression dictionaries
--eval CREATE COMPRESSION_DICTIONARY $dict1_name('foo')
--eval CREATE COMPRESSION_DICTIONARY $dict2_name('bar')

# define common parameters for xtradb_compressed_columns_alter_table.inc
--let $original_table_name  = t1
--let $original_column_name = a
--let $original_column_type = BLOB
--let $modified_table_name  = $original_table_name
--let $modified_column_name = $original_column_name
--let $modified_column_type = $original_column_type

# checks for various 'ALTER TABLE' statements with 'ALGORITHM=DEFAULT'
--let $alter_table_algorithm = DEFAULT
--source suite/innodb/include/xtradb_compressed_columns_alter_table_set.inc

# checks for various 'ALTER TABLE' statements with 'ALGORITHM=COPY'
--let $alter_table_algorithm = COPY
--source suite/innodb/include/xtradb_compressed_columns_alter_table_set.inc

# checks for various 'ALTER TABLE' statements with 'ALGORITHM=INPLACE'
--let $alter_table_algorithm = INPLACE
--source suite/innodb/include/xtradb_compressed_columns_alter_table_set.inc

--echo # test if 'ALTER TABLE ... DISCARD/IMPORT TABLESPACE' works for tables without compressed columns
--let $modified_table_name = t2
--let $original_dict_name =
--let $modified_dict_name =
--source suite/innodb/include/xtradb_compressed_columns_alter_table_pre.inc

eval CREATE TABLE $modified_table_name LIKE $original_table_name;
eval ALTER TABLE $modified_table_name DISCARD TABLESPACE;
eval FLUSH TABLES $original_table_name FOR EXPORT;

eval SELECT space INTO @original_tablespace_id FROM information_schema.innodb_sys_tablespaces
  WHERE name = CONCAT(DATABASE(), '/', '$original_table_name');
SELECT path INTO @original_datafile_path FROM information_schema.innodb_sys_datafiles
  WHERE space = @original_tablespace_id;

eval SELECT space INTO @modified_tablespace_id FROM information_schema.innodb_sys_tablespaces
  WHERE name = CONCAT(DATABASE(), '/', '$modified_table_name');
SELECT path INTO @modified_datafile_path FROM information_schema.innodb_sys_datafiles
  WHERE space = @modified_tablespace_id;

--let $original_datafile_absolute_path = `SELECT CONCAT(@@datadir, REPLACE(@original_datafile_path, './', ''))`
--let $original_config_absolute_path = `SELECT REPLACE('$original_datafile_absolute_path', '.ibd', '.cfg')`

--let $modified_datafile_absolute_path = `SELECT CONCAT(@@datadir, REPLACE(@modified_datafile_path, './', ''))`
--let $modified_config_absolute_path = `SELECT REPLACE('$modified_datafile_absolute_path', '.ibd', '.cfg')`

--copy_file $original_datafile_absolute_path $modified_datafile_absolute_path
--copy_file $original_config_absolute_path $modified_config_absolute_path

UNLOCK TABLES;
eval DROP TABLE $original_table_name;
eval ALTER TABLE $modified_table_name IMPORT TABLESPACE;

--source suite/innodb/include/xtradb_compressed_columns_alter_table_post.inc

--echo # test if 'ALTER TABLE ... DISCARD/IMPORT TABLESPACE' returns an error for tables that have compressed columns
--let $alter_table_algorithm = DEFAULT
--let $modified_table_name = t1
--let $original_dict_name = *
--let $modified_dict_name = $original_dict_name
--source suite/innodb/include/xtradb_compressed_columns_alter_table_pre.inc
--error ER_ILLEGAL_HA
eval ALTER TABLE $original_table_name DISCARD TABLESPACE;
--source suite/innodb/include/xtradb_compressed_columns_alter_table_post.inc

--echo # test if 'ALTER TABLE ... DISCARD/IMPORT TABLESPACE' returns an error for tables that have columns with associated compression dictionaries
--let $modified_table_name = t1
--let $original_dict_name = $dict1_name
--let $modified_dict_name = $original_dict_name
--source suite/innodb/include/xtradb_compressed_columns_alter_table_pre.inc
--error ER_ILLEGAL_HA
eval ALTER TABLE $original_table_name DISCARD TABLESPACE;
--source suite/innodb/include/xtradb_compressed_columns_alter_table_post.inc

# cleaning created compression dictionaries
--eval DROP COMPRESSION_DICTIONARY $dict1_name
--eval DROP COMPRESSION_DICTIONARY $dict2_name
