*** UDF should fail without functions or component
SELECT MURMUR_HASH('hello', 'world');
ERROR 42000: FUNCTION test.MURMUR_HASH does not exist

*** checking backward compatibility: create UDF functions
CREATE FUNCTION fnv1a_64 RETURNS INTEGER SONAME 'component_percona_udf.so';
CREATE FUNCTION fnv_64 RETURNS INTEGER SONAME 'component_percona_udf.so';
CREATE FUNCTION murmur_hash RETURNS INTEGER SONAME 'component_percona_udf.so';

*** checking backward compatibility: check UDF functions
include/assert.inc [checking hash value for FNV1A_64()]
include/assert.inc [checking hash value for FNV_64()]
include/assert.inc [checking hash value for MURMUR_HASH()]

*** checking backward compatibility: drop UDF functions
DROP FUNCTION fnv1a_64;
DROP FUNCTION fnv_64;
DROP FUNCTION murmur_hash;
*** UDF should fail without functions or component
SELECT MURMUR_HASH('hello', 'world');
ERROR 42000: FUNCTION test.MURMUR_HASH does not exist

*** installing percona_udf component
INSTALL COMPONENT 'file://component_percona_udf';

*** checking UDF functions
include/assert.inc [checking hash value for FNV1A_64()]
include/assert.inc [checking hash value for FNV_64()]
include/assert.inc [checking hash value for MURMUR_HASH()]

*** creating t1 table
CREATE TABLE t1 (
id BIGINT UNSIGNED NOT NULL AUTO_INCREMENT,
col1 INT,
col2 VARCHAR(16),
col3 TEXT,
PRIMARY KEY(id)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;
INSERT INTO t1(col1, col2, col3) VALUES (1, "b", "c");
INSERT INTO t1(col1, col2, col3) VALUES (2, "3240", "4000");
INSERT INTO t1(col1, col2, col3) VALUES (3, "short", "words");

*** checking UDF functions with t1 table
include/assert.inc [checking hash value for BIT_XOR(FNV1A_64())]
include/assert.inc [checking hash value for BIT_XOR(FNV_64())]
include/assert.inc [checking hash value for BIT_XOR(MURMUR_HASH())]
include/assert.inc [checking hash value for FNV1A_64(col1, col2, col3)]

*** cleaning up
DROP TABLE t1;
UNINSTALL COMPONENT 'file://component_percona_udf';
