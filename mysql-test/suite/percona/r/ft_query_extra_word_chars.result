#
# Setup ft_query_extra_word_chars testing
#
SET NAMES utf8mb4;
CREATE TABLE words(id INT PRIMARY KEY AUTO_INCREMENT,
a TEXT COLLATE utf8mb4_bin);
INSERT INTO words (a) VALUES ('abcdef');
INSERT INTO words (a) VALUES ('ąbčdėf');
INSERT INTO words (a) VALUES ('ąbč_dėf');
INSERT INTO words (a) VALUES ('ąbč!dėf');
INSERT INTO words (a) VALUES ('ąbč,dėf');
INSERT INTO words (a) VALUES ('ąbč dėf');
INSERT INTO words (a) VALUES ('+bčę');
INSERT INTO words (a) VALUES ('>ąbč <dėf');
INSERT INTO words (a) VALUES ('-(ąbč xyz)');
INSERT INTO words (a) VALUES ('ąbč* ~dėf');
INSERT INTO words (a) VALUES ('single"');
INSERT INTO words (a) VALUES ('-ųtū');
CREATE PROCEDURE run_queries(table_name VARCHAR(20), query_type ENUM('nl', 'bool'))
BEGIN
DECLARE q, fts_query VARCHAR(100);
SET @q = CONCAT("SELECT a AS matches FROM ",
table_name,
" WHERE MATCH(a) AGAINST (? IN ");
IF query_type = 'nl'
             THEN SET @q = CONCAT(@q, "NATURAL LANGUAGE");
ELSE SET @q = CONCAT(@q, "BOOLEAN");
END IF;
SET @q = CONCAT(@q, " MODE)");
PREPARE query_stmt FROM @q;
SET @fts_query = 'č,d'; SELECT @fts_query; EXECUTE query_stmt USING @fts_query;
SET @fts_query = '+bc'; SELECT @fts_query; EXECUTE query_stmt USING @fts_query;
SET @fts_query = 'single'; SELECT @fts_query; EXECUTE query_stmt USING @fts_query;
# Surprising result with default parser, NL query, extra chars ON: '-' becomes a part
# of the query token, result is empty set
SET @fts_query = '-ųtū'; SELECT @fts_query; EXECUTE query_stmt USING @fts_query;
SET @fts_query = '"-ųtū"'; SELECT @fts_query; EXECUTE query_stmt USING @fts_query;
DEALLOCATE PREPARE query_stmt;
END|
#
# Prepare test tables for MyISAM using ngram parser
#
CREATE TABLE fts_ngram (id INT PRIMARY KEY AUTO_INCREMENT,
a TEXT COLLATE utf8mb4_bin, FULLTEXT KEY a(a) WITH PARSER ngram)
ENGINE=MyISAM;
INSERT INTO fts_ngram SELECT * FROM words;
SET SESSION ft_query_extra_word_chars = ON;
CREATE TABLE fts_ngram_2 LIKE fts_ngram;
INSERT INTO fts_ngram_2 SELECT * FROM words;
# Test querying MyISAM in natural language mode, ngram parser, extra chars off
SET SESSION ft_query_extra_word_chars = OFF;
CALL run_queries('fts_ngram', 'nl');
@fts_query
č,d
matches
ąbč,dėf
@fts_query
+bc
matches
+bčę
abcdef
@fts_query
single
matches
single"
@fts_query
-ųtū
matches
-ųtū
@fts_query
"-ųtū"
matches
-ųtū
# Test that querying the other MyISAM table gives identical results
CALL run_queries('fts_ngram_2', 'nl');
@fts_query
č,d
matches
ąbč,dėf
@fts_query
+bc
matches
+bčę
abcdef
@fts_query
single
matches
single"
@fts_query
-ųtū
matches
-ųtū
@fts_query
"-ųtū"
matches
-ųtū
# Test querying MyISAM in natural language mode, ngram parser, extra chars on
SET SESSION ft_query_extra_word_chars = ON;
CALL run_queries('fts_ngram', 'nl');
@fts_query
č,d
matches
ąbč,dėf
@fts_query
+bc
matches
+bčę
abcdef
@fts_query
single
matches
single"
@fts_query
-ųtū
matches
-ųtū
@fts_query
"-ųtū"
matches
-ųtū
# Test that querying the other MyISAM table gives identical results
CALL run_queries('fts_ngram_2', 'nl');
@fts_query
č,d
matches
ąbč,dėf
@fts_query
+bc
matches
+bčę
abcdef
@fts_query
single
matches
single"
@fts_query
-ųtū
matches
-ųtū
@fts_query
"-ųtū"
matches
-ųtū
# Test querying MyISAM in boolean mode, ngram parser, extra chars off
SET SESSION ft_query_extra_word_chars = OFF;
CALL run_queries('fts_ngram', 'bool');
@fts_query
č,d
matches
@fts_query
+bc
matches
abcdef
@fts_query
single
matches
single"
@fts_query
-ųtū
matches
@fts_query
"-ųtū"
matches
-ųtū
# Test that querying the other MyISAM table gives identical results
CALL run_queries('fts_ngram_2', 'bool');
@fts_query
č,d
matches
@fts_query
+bc
matches
abcdef
@fts_query
single
matches
single"
@fts_query
-ųtū
matches
@fts_query
"-ųtū"
matches
-ųtū
# Test querying MyISAM in boolean mode, ngram parser, extra chars on
SET SESSION ft_query_extra_word_chars = ON;
CALL run_queries('fts_ngram', 'bool');
@fts_query
č,d
matches
ąbč,dėf
@fts_query
+bc
matches
abcdef
@fts_query
single
matches
single"
@fts_query
-ųtū
matches
@fts_query
"-ųtū"
matches
-ųtū
# Test that querying the other MyISAM table gives identical results
CALL run_queries('fts_ngram_2', 'bool');
@fts_query
č,d
matches
ąbč,dėf
@fts_query
+bc
matches
abcdef
@fts_query
single
matches
single"
@fts_query
-ųtū
matches
@fts_query
"-ųtū"
matches
-ųtū
#
# Cleanup
#
DROP TABLE fts_ngram, fts_ngram_2;
DROP PROCEDURE run_queries;
DROP TABLE words;
