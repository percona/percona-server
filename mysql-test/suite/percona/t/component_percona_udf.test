--echo *** UDF should fail without functions or component
--error ER_SP_DOES_NOT_EXIST
SELECT MURMUR_HASH('hello', 'world');

--echo
--echo *** checking backward compatibility: create UDF functions
CREATE FUNCTION fnv1a_64 RETURNS INTEGER SONAME 'component_percona_udf.so';
CREATE FUNCTION fnv_64 RETURNS INTEGER SONAME 'component_percona_udf.so';
CREATE FUNCTION murmur_hash RETURNS INTEGER SONAME 'component_percona_udf.so';

--echo
--echo *** checking backward compatibility: check UDF functions

--let $assert_text = checking hash value for FNV1A_64()
--let $assert_cond = `SELECT FNV1A_64('hello', 'world') = 1214055856804091265`
--source include/assert.inc

--let $assert_text = checking hash value for FNV_64()
--let $assert_cond = `SELECT FNV_64('hello', 'world') = 2924375256774005480`
--source include/assert.inc

--let $assert_text = checking hash value for MURMUR_HASH()
--let $assert_cond = `SELECT MURMUR_HASH('hello', 'world') = -7857203399167365490`
--source include/assert.inc

--echo
--echo *** checking backward compatibility: drop UDF functions
DROP FUNCTION fnv1a_64;
DROP FUNCTION fnv_64;
DROP FUNCTION murmur_hash;

--echo *** UDF should fail without functions or component
--error ER_SP_DOES_NOT_EXIST
SELECT MURMUR_HASH('hello', 'world');

--echo
--echo *** installing percona_udf component
INSTALL COMPONENT 'file://component_percona_udf';

--echo
--echo *** checking UDF functions

--let $assert_text = checking hash value for FNV1A_64()
--let $assert_cond = `SELECT FNV1A_64('hello', 'world') = 1214055856804091265`
--source include/assert.inc

--let $assert_text = checking hash value for FNV_64()
--let $assert_cond = `SELECT FNV_64('hello', 'world') = 2924375256774005480`
--source include/assert.inc

--let $assert_text = checking hash value for MURMUR_HASH()
--let $assert_cond = `SELECT MURMUR_HASH('hello', 'world') = -7857203399167365490`
--source include/assert.inc

--echo
--echo *** creating t1 table
CREATE TABLE t1 (
  id BIGINT UNSIGNED NOT NULL AUTO_INCREMENT,
  col1 INT,
  col2 VARCHAR(16),
  col3 TEXT,
  PRIMARY KEY(id)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

INSERT INTO t1(col1, col2, col3) VALUES (1, "b", "c");
INSERT INTO t1(col1, col2, col3) VALUES (2, "3240", "4000");
INSERT INTO t1(col1, col2, col3) VALUES (3, "short", "words");

--echo
--echo *** checking UDF functions with t1 table

--let $assert_text = checking hash value for BIT_XOR(FNV1A_64())
--let $assert_cond = [SELECT BIT_XOR(CAST(FNV1A_64(col1, col2, col3) AS UNSIGNED)) FROM t1] = 9092447622868433808
--source include/assert.inc

--let $assert_text = checking hash value for BIT_XOR(FNV_64())
--let $assert_cond = [SELECT BIT_XOR(CAST(FNV_64(col1, col2, col3) AS UNSIGNED)) FROM t1] = 3813096360487945067
--source include/assert.inc

--let $assert_text = checking hash value for BIT_XOR(MURMUR_HASH())
--let $assert_cond = [SELECT BIT_XOR(CAST(MURMUR_HASH(col1, col2, col3) AS UNSIGNED)) FROM t1] = 9393970666296144275
--source include/assert.inc

--let $assert_text = checking hash value for FNV1A_64(col1, col2, col3)
--let $assert_cond = ["SELECT FNV1A_64(col1, col2, col3) AS Hash_Val FROM t1", Hash_Val, 1] = 5882002141665055715
--source include/assert.inc

--echo
--echo *** cleaning up
DROP TABLE t1;
UNINSTALL COMPONENT 'file://component_percona_udf';
