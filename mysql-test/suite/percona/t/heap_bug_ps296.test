--echo PS-296: inconsistent maximum key lenghts caused a crash in the query optimizer

# Test that we can use long strings in memory tables
CREATE TABLE big_ok (id VARBINARY(3072) NOT NULL, PRIMARY KEY (id)) ENGINE=MEMORY;
CREATE TABLE big_ok2 (id VARBINARY(1072) NOT NULL, id2 VARBINARY(2000), PRIMARY KEY (id, id2)) ENGINE=MEMORY;
--error ER_TOO_LONG_KEY
CREATE TABLE big_fails (id VARBINARY(3073) NOT NULL, PRIMARY KEY (id)) ENGINE=MEMORY;
--error ER_TOO_LONG_KEY
CREATE TABLE big_fails (id VARBINARY(1073) NOT NULL, id2 VARBINARY(2000), PRIMARY KEY (id, id2)) ENGINE=MEMORY;

SET @@session.max_sort_length = 4000;
INSERT INTO big_ok VALUES (CONCAT(REPEAT('a', 3071), 'c'));
INSERT INTO big_ok VALUES (CONCAT(REPEAT('a', 3071), 'b'));
INSERT INTO big_ok VALUES (CONCAT(REPEAT('a', 3071), 'a'));

SELECT RIGHT(id, 5) FROM big_ok FORCE INDEX (PRIMARY) ORDER BY id ASC LIMIT 10;
SELECT RIGHT(id, 5) FROM big_ok IGNORE INDEX (PRIMARY) ORDER BY id ASC LIMIT 10;

INSERT INTO big_ok2 VALUES (REPEAT('a', 1072), CONCAT(REPEAT('a', 1999), 'c'));
INSERT INTO big_ok2 VALUES (REPEAT('a', 1072), CONCAT(REPEAT('a', 1999), 'b'));
INSERT INTO big_ok2 VALUES (REPEAT('a', 1072), CONCAT(REPEAT('a', 1999), 'a'));

SELECT RIGHT(id2, 5) FROM big_ok2 FORCE INDEX (PRIMARY) ORDER BY id ASC, id2 ASC LIMIT 10;
SELECT RIGHT(id2, 5) FROM big_ok2 IGNORE INDEX (PRIMARY) ORDER BY id ASC, id2 ASC LIMIT 10;

# Test that materialized queries do not crash

CREATE TABLE a (id INT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY);
INSERT INTO a () VALUES ();
delimiter |;
CREATE PROCEDURE dowhile()
BEGIN
  DECLARE v1 INT DEFAULT 1;
  WHILE v1 < 15 DO 
    INSERT INTO a SELECT NULL FROM a;
    SET v1 = v1 + 1;
  END WHILE;
END;
|
delimiter ;|
CREATE TABLE big1 (id VARBINARY(3070) NOT NULL, PRIMARY KEY (id)) ENGINE=InnoDB;
CREATE TABLE big2 (id VARBINARY(3070) NOT NULL, PRIMARY KEY (id)) ENGINE=InnoDB;
--disable_result_log
CALL dowhile();
INSERT INTO big1 SELECT * FROM a;
INSERT INTO big2 SELECT * FROM a;
--enable_result_log

SET session optimizer_switch='duplicateweedout=off,materialization=on';
EXPLAIN SELECT * FROM big1 WHERE id IN (SELECT id FROM big2 IGNORE INDEX (PRIMARY)) ORDER BY id ASC LIMIT 10;
SELECT * FROM big1 WHERE id IN (SELECT id FROM big2 IGNORE INDEX (PRIMARY)) ORDER BY id ASC LIMIT 10;

DROP TABLE big_ok;
DROP TABLE big_ok2;
DROP TABLE big1;
DROP TABLE big2;
DROP TABLE a;
DROP PROCEDURE dowhile;
