#
# Tests for JSON data type in MEMORY tables
#

--echo #
--echo # Bug 1536469 (Assertion `length == 0 || json_binary::parse_binary(ptr, length).is_valid()'
--echo # failed in sql/field.cc:8975: type_conversion_status Field_json::store_binary(const char*, size_t))
--echo #

CREATE TABLE t0(utf0k json) ENGINE=MEMORY;
INSERT INTO t0 values('0');
--error ER_INVALID_JSON_TEXT
INSERT INTO t0 VALUES('DBMS stands for DataBase ...');
SELECT * FROM t0;
DROP TABLE t0;

--echo #
--echo # Bug 1731483: MEMORY storage engine incorrectly allows BLOB columns before indexed columns
--echo #

--error ER_TABLE_CANT_HANDLE_BLOB
CREATE TABLE t1 (a JSON, b INT PRIMARY KEY) ENGINE=MEMORY;

--error ER_TABLE_CANT_HANDLE_BLOB
CREATE TABLE t1 (a INT PRIMARY KEY, b JSON, c INT, KEY c(c)) ENGINE=MEMORY;

CREATE TABLE t1 (a JSON, b INT) ENGINE=MEMORY;
--error ER_TABLE_CANT_HANDLE_BLOB
ALTER TABLE t1 ADD INDEX idx_b (b);
--error ER_TABLE_CANT_HANDLE_BLOB
ALTER TABLE t1 ADD PRIMARY KEY (b);
DROP TABLE t1;

CREATE TABLE t1 (a INT PRIMARY KEY, b JSON, c INT) ENGINE=MEMORY;
--error ER_TABLE_CANT_HANDLE_BLOB
ALTER TABLE t1 ADD INDEX c (c);
DROP TABLE t1;

CREATE TABLE t1 (a JSON, b INT PRIMARY KEY) ENGINE=InnoDB;
--error ER_TABLE_CANT_HANDLE_BLOB
ALTER TABLE t1 ENGINE=MEMORY;
DROP TABLE t1;

CREATE TABLE t1 (a INT PRIMARY KEY, b JSON, c INT, KEY c(c)) ENGINE=InnoDB;
--error ER_TABLE_CANT_HANDLE_BLOB
ALTER TABLE t1 ENGINE=MEMORY;
DROP TABLE t1;

CREATE TABLE t1 (a INT PRIMARY KEY, b JSON) ENGINE=MEMORY;
--error ER_TABLE_CANT_HANDLE_BLOB
ALTER TABLE t1 MODIFY b JSON FIRST;
DROP TABLE t1;

--error ER_TABLE_CANT_HANDLE_BLOB
CREATE TABLE t1 (a INT, b JSON, c INT, PRIMARY KEY(a, c)) ENGINE=MEMORY;

--error ER_TABLE_CANT_HANDLE_BLOB
CREATE TABLE t1 (a INT, b JSON, c INT, PRIMARY KEY(c, a)) ENGINE=MEMORY;

CREATE TABLE t1 (a INT, b JSON, c INT) ENGINE=MEMORY;
--error ER_TABLE_CANT_HANDLE_BLOB
ALTER TABLE t1 ADD PRIMARY KEY (a, c);
--error ER_TABLE_CANT_HANDLE_BLOB
ALTER TABLE t1 ADD INDEX idx (c, a);
DROP TABLE t1;
