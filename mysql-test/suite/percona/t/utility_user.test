--source include/have_plugin_auth.inc
--source include/count_sessions.inc

call mtr.add_suppression("Did not write failed .* ");
call mtr.add_suppression("Wrong password");

SELECT user FROM mysql.user WHERE user LIKE 'frank';

--error ER_CANNOT_USER 
CREATE USER 'frank'@'localhost' IDENTIFIED BY 'password';

connect (frank,localhost,frank,password,mysql);
disconnect frank;
connection default;

--error ER_CANNOT_USER 
CREATE USER 'frank'@'%' IDENTIFIED BY 'password';

connect (frank,localhost,frank,password,mysql);
disconnect frank;
connection default;

--error ER_PASSWORD_NO_MATCH
SET PASSWORD FOR 'frank'@'localhost' = '';

--error ER_PASSWORD_NO_MATCH
SET PASSWORD FOR 'frank'@'%' = '';

--error ER_NONEXISTING_GRANT
GRANT ALL ON mysql.* TO 'frank'@'localhost';
 
--error ER_NONEXISTING_GRANT
GRANT ALL ON mysql.* TO 'frank'@'%';
 
--error ER_NONEXISTING_GRANT
GRANT USAGE ON mysql.* TO 'frank'@'localhost';
 
--error ER_NONEXISTING_GRANT
GRANT USAGE ON mysql.* TO 'frank'@'%';
 
GRANT PROXY ON 'frank'@'%' TO 'root'@'localhost';
 
--error ER_NONEXISTING_GRANT
GRANT PROXY ON 'root'@'localhost' TO 'frank'@'localhost';
 
--error ER_NONEXISTING_GRANT
GRANT PROXY ON 'root'@'localhost' TO 'frank'@'%';
 
--error ER_NONEXISTING_GRANT 
SHOW GRANTS FOR 'frank'@'localhost';

--error ER_NONEXISTING_GRANT 
SHOW GRANTS FOR 'frank'@'%';

--error ER_REVOKE_GRANTS
REVOKE ALL PRIVILEGES, GRANT OPTION FROM 'frank'@'localhost';

--error ER_NONEXISTING_GRANT 
REVOKE ALL PRIVILEGES, GRANT OPTION FROM 'frank'@'%';

--error ER_CANNOT_USER 
DROP USER 'frank'@'localhost';

--error ER_CANNOT_USER 
DROP USER 'frank'@'%';

CREATE USER 'mysqltest_1'@'localhost';

connect (frank,localhost,frank,password,mysql);

SELECT user FROM mysql.user WHERE user LIKE 'frank';

SELECT USER();

SELECT CURRENT_USER();

SHOW DATABASES;

CREATE USER 'frankjr'@'localhost' IDENTIFIED BY 'password';

GRANT ALL ON mysql.* TO 'frankjr'@'localhost';

REVOKE ALL PRIVILEGES, GRANT OPTION FROM 'frankjr'@'localhost';

SET PASSWORD FOR 'frankjr'@'localhost' = '';

DROP USER 'frankjr'@'localhost';

# Allowed because --utility-user-privileges has CREATE
CREATE DATABASE mysqltest;

# Allowed because --utility-user-privileges has CREATE
CREATE TABLE mysqltest.t1 (a INT, b INT);

# Allowed because --utility-user-privileges has SHOW DATABASES
SHOW TABLES IN mysqltest;

# NOT allowed because --utility-user-privileges does not have INSERT
--error ER_TABLEACCESS_DENIED_ERROR
INSERT INTO mysqltest.t1(a, b) VALUES (1, 1);

# NOT allowed because --utility-user-privileges does not have SELECT
--error ER_TABLEACCESS_DENIED_ERROR
SELECT * FROM mysqltest.t1;

# NOT allowed because --utility-user-privileges does not have ALTER
--error ER_TABLEACCESS_DENIED_ERROR
ALTER TABLE mysqltest.t1 DROP COLUMN b;

# Allowed because --utility-user-privileges has DROP
DROP DATABASE mysqltest;

SET PASSWORD FOR 'mysqltest_1'@'localhost' = 'newpass';

SET @testtemp= @@global.innodb_fast_shutdown;
SET @@global.innodb_fast_shutdown= 2;
SELECT @@global.innodb_fast_shutdown;
SET @@global.innodb_fast_shutdown= 0;
SELECT @@global.innodb_fast_shutdown;
SET @@global.innodb_fast_shutdown= @testtemp;

connection default;
disconnect frank;

#
# cleanup from above tests
#
DROP USER 'mysqltest_1'@'localhost';

#
# Try to impersonate a proxied utility_user
#
CREATE USER plug IDENTIFIED WITH 'test_plugin_server' AS 'frank';

SELECT plugin,authentication_string FROM mysql.user WHERE User='plug';

--disable_query_log
--error ER_ACCESS_DENIED_ERROR
connect(plug_con,localhost,plug,fg rank);
--enable_query_log

GRANT PROXY ON frank TO plug;
REVOKE PROXY ON frank FROM plug;

--replace_column 1 xx 7 xx
SELECT * FROM mysql.proxies_priv;

--disable_query_log
--error ER_ACCESS_DENIED_NO_PROXY_GRANT
connect(plug_con,localhost,plug,frank);
--enable_query_log

connection default;

DROP USER plug;

--echo #
--echo # 5.6 tests
--echo #

--echo #
--echo # Interaction with ALTER USER
--echo #
--error ER_CANNOT_USER
ALTER USER 'frank'@'localhost' PASSWORD EXPIRE;

--echo #
--echo # 5.7 tests
--echo #

--echo #
--echo # Interaction with offline mode
--echo #
connect (frank,localhost,frank,password,mysql);
connection frank;

SELECT USER(), CURRENT_USER();

connection default;
SET @global_saved_tmp = @@global.offline_mode;
SET @@global.offline_mode = ON;

connection frank;

--echo Existing utility user connection should not disconnect
SELECT USER(), CURRENT_USER();

disconnect frank;

--echo Utility user should be able to connecect
connect (frank,localhost,frank,password,mysql);
connection frank;

SELECT USER(), CURRENT_USER();

disconnect frank;
connection default;

SET @@global.offline_mode = @global_saved_tmp;

--echo #
--echo # Interaction with SHOW CREATE USER
--echo #
--error ER_CANNOT_USER
SHOW CREATE USER 'frank'@'localhost';

# Ensure invisibility of the utility user

# Restart to reset the global counters
--source include/restart_mysqld.inc

--let $connections_before = query_get_value(SHOW GLOBAL STATUS LIKE 'Connections', Value, 1)
SHOW GLOBAL STATUS LIKE "Threads%";

connect (frank,localhost,frank,password,mysql);

# Invisibility issue: this is the thread_id, will increase with each connection
--let $connections_after = query_get_value(SHOW GLOBAL STATUS LIKE 'Connections', Value, 1)
--dec $connections_after
--assert($connections_before == $connections_after)
# Invisibility issue: Threads_connected includes the utility user too
# This is kept as is because this counter is used for logic within thread pool handling
# E.g. fixing this would cause issues in threadpool_unix
# Other Thread_ counters are fine.
SHOW GLOBAL STATUS LIKE "Threads%";

SELECT * FROM performance_schema.processlist;

SELECT * FROM performance_schema.users WHERE USER="frank";

SELECT COUNT(*) from performance_schema.events_statements_current WHERE SQL_TEXT LIKE "%performance_schema.event_statements%";

SELECT CURRENT_CONNECTIONS, TOTAL_CONNECTIONS FROM performance_schema.hosts WHERE HOST="localhost";
SELECT * FROM performance_schema.accounts WHERE USER="frank";
SELECT * FROM performance_schema.session_account_connect_attrs;
SELECT COUNT(DISTINCT PROCESSLIST_ID) FROM performance_schema.session_connect_attrs;

# PS-5952: Utility user visible in performance_schema.threads
SELECT COUNT(*) FROM performance_schema.threads where type='FOREGROUND';


# PS-5956: Root session must not be allowed to kill Utility user session
--let conn_id=`select connection_id()`

connection default;

--disable_query_log
--replace_regex /\s\d+$/ <ID>/
--error ER_KILL_DENIED_ERROR
--eval KILL $conn_id
--enable_query_log
REVOKE PROXY ON 'frank'@'%' FROM 'root'@'localhost';

# PS-5955: Must not be possible to grant or revoke a role to/from utility user

CREATE ROLE r1;
--error ER_UNKNOWN_AUTHID
GRANT r1 TO frank@'%';

# PS-7127: Utility user cannot update password of the user having SYSTEM_USER privilege.
--connection default
CREATE USER u1 IDENTIFIED BY 'password';
GRANT ALL ON *.* TO u1 WITH GRANT OPTION;

--connection frank
--error ER_SPECIFIC_ACCESS_DENIED_ERROR
ALTER USER 'u1'@'%' IDENTIFIED BY 'newpass';
--disconnect frank

--connection default
# Restart the server with utility user having SYSTEM_USER privilege
--let $restart_parameters = restart:--utility-user-dynamic-privileges=SYSTEM_USER
--source include/restart_mysqld.inc

connect (frank,localhost,frank,password,mysql);
--connection frank
ALTER USER 'u1'@'%' IDENTIFIED BY 'newpass';
--disconnect frank

--connection default
# Try again, but this time check if lowercase works as well
--let $restart_parameters = restart:--utility-user-dynamic-privileges=sYstem_USEr
--source include/restart_mysqld.inc

connect (frank,localhost,frank,password,mysql);
--connection frank
ALTER USER 'u1'@'%' IDENTIFIED BY 'newpass2';

DROP USER u1;
--disconnect frank

# Test --utility-user-dynamic-privileges value parsing

--connection default
--source include/shutdown_mysqld.inc

# OK - multiple privileges
--let $utility_user_dynamic_privileges = SYSTEM_USER,PRIVILEGE_1,PRIVILEGE2,PRIVILEGE4
--let $expected_log_message = Utility user 'frank'@'%' in use with dynamic privileges 'SYSTEM_USER,PRIVILEGE_1,PRIVILEGE2,PRIVILEGE4'.
--source ../include/utility_user_validate_dynamic_privileges.inc

# OK - lowercase
--let $utility_user_dynamic_privileges = system_user,privilege_2
--let $expected_log_message = Utility user 'frank'@'%' in use with dynamic privileges 'SYSTEM_USER,PRIVILEGE_2'.
--source ../include/utility_user_validate_dynamic_privileges.inc

# OK - multiple comma
--let $utility_user_dynamic_privileges = SYSTEM_USER,,,,,PRIVILEGE_3
--let $expected_log_message = Utility user 'frank'@'%' in use with dynamic privileges 'SYSTEM_USER,PRIVILEGE_3'.
--source ../include/utility_user_validate_dynamic_privileges.inc

# Malformed - comma at the end
--let $utility_user_dynamic_privileges = SYSTEM_USER,PRIVILEGE_1,
--let $expected_log_message = Wrong format of --utility-user-dynamic-privileges parameter value: SYSTEM_USER,PRIVILEGE_1,
--source ../include/utility_user_validate_dynamic_privileges.inc

# Malformed - comma at the beginning
--let $utility_user_dynamic_privileges = ,SYSTEM_USER,PRIVILEGE_1
--let $expected_log_message = Wrong format of --utility-user-dynamic-privileges parameter value: ,SYSTEM_USER,PRIVILEGE_1
--source ../include/utility_user_validate_dynamic_privileges.inc

# Malformed - wrong separator
--let $utility_user_dynamic_privileges = SYSTEM_USER;PRIVILEGE_1
--let $expected_log_message = Wrong format of --utility-user-dynamic-privileges parameter value: SYSTEM_USER;PRIVILEGE_1
--source ../include/utility_user_validate_dynamic_privileges.inc

--source include/start_mysqld.inc

# cleanup
--connection default
DROP ROLE r1;

--source include/wait_until_count_sessions.inc
