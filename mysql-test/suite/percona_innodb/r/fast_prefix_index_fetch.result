# Create a table with a large varchar field that we index the prefix
# of and ensure we only trigger cluster lookups when we expect it.
create table prefixinno (
id int not null,
fake_id int not null,
bigfield varchar(4096),
primary key(id),
index bigfield_idx (bigfield(32)),
index fake_id_bigfield_prefix (fake_id, bigfield(32))
) engine=innodb;
insert into prefixinno values (1, 1001, repeat('a', 1)),
(8, 1008, repeat('b', 8)),
(24, 1024, repeat('c', 24)),
(31, 1031, repeat('d', 31)),
(32, 1032, repeat('x', 32)),
(33, 1033, repeat('y', 33)),
(128, 1128, repeat('z', 128));
select * from prefixinno;
id	fake_id	bigfield
1	1001	a
8	1008	bbbbbbbb
24	1024	cccccccccccccccccccccccc
31	1031	ddddddddddddddddddddddddddddddd
32	1032	xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
33	1033	yyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyy
128	1128	zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz
# Baseline sanity check
select "no-op query";
no-op query
no-op query
include/assert.inc [Baseline sanity check: 0 innodb_secondary_index_triggered_cluster_reads]
include/assert.inc [Baseline sanity check: 0 innodb_secondary_index_triggered_cluster_reads_avoided]
# Eligible for optimization.
select id, bigfield from prefixinno where bigfield = repeat('d', 31);
id	bigfield
31	ddddddddddddddddddddddddddddddd
include/assert.inc [Eligible for optimization.: 0 innodb_secondary_index_triggered_cluster_reads]
include/assert.inc [Eligible for optimization.: 1 innodb_secondary_index_triggered_cluster_reads_avoided]
# Eligible for optimization, access via fake_id only.
select id, bigfield from prefixinno where fake_id = 1031;
id	bigfield
31	ddddddddddddddddddddddddddddddd
include/assert.inc [Eligible for optimization, access via fake_id only.: 0 innodb_secondary_index_triggered_cluster_reads]
include/assert.inc [Eligible for optimization, access via fake_id only.: 1 innodb_secondary_index_triggered_cluster_reads_avoided]
# Not eligible for optimization, access via fake_id of big row.
select id, bigfield from prefixinno where fake_id = 1033;
id	bigfield
33	yyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyy
include/assert.inc [Not eligible for optimization, access via fake_id of big row.: 1 innodb_secondary_index_triggered_cluster_reads]
include/assert.inc [Not eligible for optimization, access via fake_id of big row.: 0 innodb_secondary_index_triggered_cluster_reads_avoided]
# Not eligible for optimization.
select id, bigfield from prefixinno where bigfield = repeat('x', 32);
id	bigfield
32	xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
include/assert.inc [Not eligible for optimization.: 1 innodb_secondary_index_triggered_cluster_reads]
include/assert.inc [Not eligible for optimization.: 0 innodb_secondary_index_triggered_cluster_reads_avoided]
# Not eligible for optimization.
select id, bigfield from prefixinno where bigfield = repeat('y', 33);
id	bigfield
33	yyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyy
include/assert.inc [Not eligible for optimization.: 1 innodb_secondary_index_triggered_cluster_reads]
include/assert.inc [Not eligible for optimization.: 0 innodb_secondary_index_triggered_cluster_reads_avoided]
# Eligible, should not increment lookup counter.
select id, bigfield from prefixinno where bigfield = repeat('b', 8);
id	bigfield
8	bbbbbbbb
include/assert.inc [Eligible, should not increment lookup counter.: 0 innodb_secondary_index_triggered_cluster_reads]
include/assert.inc [Eligible, should not increment lookup counter.: 1 innodb_secondary_index_triggered_cluster_reads_avoided]
# Eligible, should not increment lookup counter.
select id, bigfield from prefixinno where bigfield = repeat('c', 24);
id	bigfield
24	cccccccccccccccccccccccc
include/assert.inc [Eligible, should not increment lookup counter.: 0 innodb_secondary_index_triggered_cluster_reads]
include/assert.inc [Eligible, should not increment lookup counter.: 1 innodb_secondary_index_triggered_cluster_reads_avoided]
# Should increment lookup counter
select id, bigfield from prefixinno where bigfield = repeat('z', 128);
id	bigfield
128	zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz
include/assert.inc [Should increment lookup counter: 1 innodb_secondary_index_triggered_cluster_reads]
include/assert.inc [Should increment lookup counter: 0 innodb_secondary_index_triggered_cluster_reads_avoided]
DROP TABLE prefixinno;
#
# Test that multi-byte charsets are handled correctly
#
SET NAMES utf8mb4;
CREATE TABLE t1 (
a INT PRIMARY KEY,
b VARCHAR(30) CHARACTER SET UTF8MB4,
INDEX b_idx (b(3))) ENGINE=InnoDB;
INSERT INTO t1 VALUES
# Records with byte representations shorter than the prefix length in chars
(1, "aa"),
# Records which may or may not fit into the index prefix, determined by
# character counting
(2, "ccc"),
(3, "až");
# MB charset record obviously shorter than the prefix
SELECT * FROM t1 WHERE b = "aa";
a	b
1	aa
include/assert.inc [MB charset record obviously shorter than the prefix: 0 innodb_secondary_index_triggered_cluster_reads]
include/assert.inc [MB charset record obviously shorter than the prefix: 1 innodb_secondary_index_triggered_cluster_reads_avoided]
# MB charset record longer than prefix
SELECT * FROM t1 WHERE b = "ccc";
a	b
2	ccc
include/assert.inc [MB charset record longer than prefix: 1 innodb_secondary_index_triggered_cluster_reads]
include/assert.inc [MB charset record longer than prefix: 0 innodb_secondary_index_triggered_cluster_reads_avoided]
# MB charset record shorter than prefix
SELECT * FROM t1 WHERE b = "až";
a	b
3	až
include/assert.inc [MB charset record shorter than prefix: 0 innodb_secondary_index_triggered_cluster_reads]
include/assert.inc [MB charset record shorter than prefix: 1 innodb_secondary_index_triggered_cluster_reads_avoided]
DROP TABLE t1;
#
# Test that multi-byte charsets are handled correctly,
# minimum character length > 1 case
#
CREATE TABLE t1 (
a INT PRIMARY KEY,
b VARCHAR(30) CHARACTER SET UTF16,
INDEX b_idx (b(3))) ENGINE=InnoDB;
INSERT INTO t1 VALUES
# Records with byte representations shorter than the prefix length in chars
(1, "a"),
# Records which may or may not fit into the index prefix, determined by
#character counting
(2, "ccc"),
(3, "až");
# MB charset record obviously shorter than the prefix
SELECT * FROM t1 WHERE b = "a";
a	b
1	a
include/assert.inc [MB charset record obviously shorter than the prefix: 0 innodb_secondary_index_triggered_cluster_reads]
include/assert.inc [MB charset record obviously shorter than the prefix: 1 innodb_secondary_index_triggered_cluster_reads_avoided]
# MB charset record longer than prefix
SELECT * FROM t1 WHERE b = "ccc";
a	b
2	ccc
include/assert.inc [MB charset record longer than prefix: 1 innodb_secondary_index_triggered_cluster_reads]
include/assert.inc [MB charset record longer than prefix: 0 innodb_secondary_index_triggered_cluster_reads_avoided]
# MB charset record shorter than prefix
SELECT * FROM t1 WHERE b = "až";
a	b
3	až
include/assert.inc [MB charset record shorter than prefix: 0 innodb_secondary_index_triggered_cluster_reads]
include/assert.inc [MB charset record shorter than prefix: 1 innodb_secondary_index_triggered_cluster_reads_avoided]
DROP TABLE t1;
