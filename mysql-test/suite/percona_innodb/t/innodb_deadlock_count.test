--echo #
--echo # Bug 77399: Deadlocks missed by INFORMATION_SCHEMA.INNODB_METRICS lock_deadlocks counter
--echo #

--source include/count_sessions.inc

--echo # Establish connection con1 (user=root)
connect (con1,localhost,root,,);
--echo # Establish connection con2 (user=root)
connect (con2,localhost,root,,);

--echo # Create test table
create table t(a INT PRIMARY KEY, b INT) engine=InnoDB;
--echo # Insert two rows to test table
insert into t values(2,1);
insert into t values(1,2);

connection default;
SELECT COUNT INTO @start_metrics_val
       FROM INFORMATION_SCHEMA.INNODB_METRICS WHERE NAME='lock_deadlocks';

--disable_result_log

--echo # Switch to connection con1
connection con1;
BEGIN; SELECT b FROM t WHERE a=1 FOR UPDATE;

--echo # Switch to connection con2
connection con2;
BEGIN; SELECT b FROM t WHERE a=2 FOR UPDATE;

--echo # Switch to connection con1
connection con1;
SEND SELECT b FROM t WHERE a=2 FOR UPDATE;

--echo # Switch to connection con2
connection con2;
SEND SELECT b FROM t WHERE a=1 FOR UPDATE;

--echo # Switch to connection con1
connection con1;
--error 0, ER_LOCK_DEADLOCK
reap;
ROLLBACK;

--echo # Switch to connection con2
connection con2;
--error 0, ER_LOCK_DEADLOCK
reap;
ROLLBACK;

--echo # Switch to connection default
connection default;
--enable_result_log

--disconnect con1
--disconnect con2

SELECT COUNT INTO @lock_deadlocks_var FROM INFORMATION_SCHEMA.INNODB_METRICS WHERE NAME='lock_deadlocks';
--let $assert_text= Exactly one deadlock should have been found
--let $assert_cond= @lock_deadlocks_var - @start_metrics_val = 1
--source include/assert.inc

--echo # Drop test table
drop table t;

--disable_warnings
SET GLOBAL innodb_monitor_reset = default;
--enable_warnings

--source include/wait_until_count_sessions.inc
