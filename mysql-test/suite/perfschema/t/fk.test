--source include/have_debug_sync.inc
--source include/count_sessions.inc
connect (con1, localhost, root);

--echo # Test MDL_key::FOREIGN_KEY

CREATE TABLE parent (
    id INT NOT NULL,
    PRIMARY KEY (id)
) ENGINE=INNODB;

CREATE TABLE child (
    id INT,
    parent_id INT,
    INDEX par_ind (parent_id),
    FOREIGN KEY (parent_id)
        REFERENCES parent(id)
        ON DELETE CASCADE
) ENGINE=INNODB;

--connection default
SET DEBUG_SYNC= 'after_mdl_locks_acquired SIGNAL mdls_acquired WAIT_FOR resume';
--send ALTER TABLE child DROP FOREIGN KEY `child_ibfk_1`;

--connection con1
SET DEBUG_SYNC= 'now WAIT_FOR mdls_acquired';
SELECT thd_blocker.processlist_id FROM performance_schema.metadata_locks mdl_blocker JOIN performance_schema.metadata_locks mdl_exclusive ON mdl_exclusive.object_schema=mdl_blocker.object_schema AND mdl_exclusive.object_name=mdl_blocker.object_name AND mdl_exclusive.owner_thread_id!=mdl_blocker.owner_thread_id JOIN performance_schema.metadata_locks mdl_blocked ON mdl_blocked.object_schema=mdl_exclusive.object_schema AND mdl_blocked.object_name=mdl_exclusive.object_name AND mdl_blocked.owner_thread_id!=mdl_exclusive.owner_thread_id JOIN performance_schema.threads thd_blocker ON thd_blocker.thread_id=mdl_blocker.owner_thread_id WHERE mdl_blocker.object_type='TABLE' AND mdl_blocker.lock_type LIKE 'SHARED%' AND mdl_blocker.lock_status='GRANTED' AND mdl_exclusive.object_type='TABLE' AND mdl_exclusive.lock_type='EXCLUSIVE' AND mdl_exclusive.lock_status='PENDING' AND mdl_blocked.object_type='TABLE' AND mdl_blocked.lock_type like 'SHARED%' AND mdl_blocked.lock_status='PENDING' GROUP BY mdl_blocker.owner_thread_id;
SET DEBUG_SYNC= 'now SIGNAL resume';

--connection default
--reap

DROP TABLE child;
DROP TABLE parent;
SET DEBUG_SYNC='RESET';

--echo # Test MDL_key::CHECK_CONSTRAINT

CREATE TABLE t1 (f1 INT CHECK (f1 < 10), f2 INT, CONSTRAINT t1_ck CHECK(f2 < 10));

--connection default
SET DEBUG_SYNC= 'after_acquiring_lock_on_check_constraints_for_rename SIGNAL mdls_acquired WAIT_FOR resume';
--send RENAME TABLE t1 to t2;

--connection con1
SET DEBUG_SYNC= 'now WAIT_FOR mdls_acquired';
SELECT thd_blocker.processlist_id FROM performance_schema.metadata_locks mdl_blocker JOIN performance_schema.metadata_locks mdl_exclusive ON mdl_exclusive.object_schema=mdl_blocker.object_schema AND mdl_exclusive.object_name=mdl_blocker.object_name AND mdl_exclusive.owner_thread_id!=mdl_blocker.owner_thread_id JOIN performance_schema.metadata_locks mdl_blocked ON mdl_blocked.object_schema=mdl_exclusive.object_schema AND mdl_blocked.object_name=mdl_exclusive.object_name AND mdl_blocked.owner_thread_id!=mdl_exclusive.owner_thread_id JOIN performance_schema.threads thd_blocker ON thd_blocker.thread_id=mdl_blocker.owner_thread_id WHERE mdl_blocker.object_type='TABLE' AND mdl_blocker.lock_type LIKE 'SHARED%' AND mdl_blocker.lock_status='GRANTED' AND mdl_exclusive.object_type='TABLE' AND mdl_exclusive.lock_type='EXCLUSIVE' AND mdl_exclusive.lock_status='PENDING' AND mdl_blocked.object_type='TABLE' AND mdl_blocked.lock_type like 'SHARED%' AND mdl_blocked.lock_status='PENDING' GROUP BY mdl_blocker.owner_thread_id;
SET DEBUG_SYNC= 'now SIGNAL resume';

--connection default
--reap
DROP TABLE t2;
SET DEBUG_SYNC='RESET';

--disconnect con1
--source include/wait_until_count_sessions.inc
