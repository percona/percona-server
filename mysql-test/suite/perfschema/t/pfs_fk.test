
--source include/have_debug_sync.inc

CREATE TABLE parent (
    id INT NOT NULL,
    PRIMARY KEY (id)
) ENGINE=INNODB;

CREATE TABLE child (
    id INT,
    parent_id INT,
    INDEX par_ind (parent_id),
    FOREIGN KEY (parent_id)
        REFERENCES parent(id)
        ON DELETE CASCADE
) ENGINE=INNODB;

connect (con1, localhost, root);

--connection default
SET DEBUG_SYNC= 'alter_table_after_mdl_lock_fk SIGNAL mdl_fk_acquired WAIT_FOR resume';
--send ALTER TABLE child DROP FOREIGN KEY `child_ibfk_1`;

--connection con1
SET DEBUG_SYNC= 'now WAIT_FOR mdl_fk_acquired';

SELECT OBJECT_TYPE, OBJECT_SCHEMA, OBJECT_NAME, COLUMN_NAME,
  LOCK_TYPE, LOCK_DURATION, LOCK_STATUS
  FROM performance_schema.metadata_locks
  WHERE (OBJECT_TYPE = 'SCHEMA') AND (OBJECT_SCHEMA = 'test')
  ORDER BY OBJECT_SCHEMA, LOCK_TYPE, LOCK_DURATION, LOCK_STATUS;

SELECT OBJECT_TYPE, OBJECT_SCHEMA, OBJECT_NAME, COLUMN_NAME,
  LOCK_TYPE, LOCK_DURATION, LOCK_STATUS
  FROM performance_schema.metadata_locks
  WHERE (OBJECT_TYPE = 'TABLE') AND (OBJECT_SCHEMA = 'test')
  ORDER BY OBJECT_SCHEMA, OBJECT_NAME, LOCK_TYPE, LOCK_DURATION, LOCK_STATUS;

SELECT OBJECT_TYPE, OBJECT_SCHEMA, OBJECT_NAME, COLUMN_NAME,
  LOCK_TYPE, LOCK_DURATION, LOCK_STATUS
  FROM performance_schema.metadata_locks
  WHERE (OBJECT_TYPE = 'FOREIGN KEY') AND (OBJECT_SCHEMA = 'test')
  ORDER BY OBJECT_SCHEMA, OBJECT_NAME, LOCK_TYPE, LOCK_DURATION, LOCK_STATUS;

SET DEBUG_SYNC= 'now SIGNAL resume';

--connection default
--reap

--connection con1
--disconnect con1
--source include/wait_until_disconnected.inc

--connection default
SET DEBUG_SYNC='RESET';

DROP TABLE child;
DROP TABLE parent;

