# Error recovery testing ADD PARTITION
SET SESSION debug="+d,fail_add_partition_2";
CREATE TABLE t1 (
firstname VARCHAR(25) NOT NULL,
lastname VARCHAR(25) NOT NULL,
username VARCHAR(16) NOT NULL,
email VARCHAR(35),
joined DATE NOT NULL
)
ENGINE=RocksDB
PARTITION BY RANGE(YEAR(joined)) (
PARTITION p0 VALUES LESS THAN (1960),
PARTITION p1 VALUES LESS THAN (1970),
PARTITION p2 VALUES LESS THAN (1980),
PARTITION p3 VALUES LESS THAN (1990)
);
INSERT INTO t1 VALUES 
("a", "a","aa", "aa@a.com","1957-05-15"),
("b", "b","bb", "bb@b.com","1967-06-16"),
("c", "c","cc", "cc@c.com","1977-07-17");
# State before failure
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `firstname` varchar(25) NOT NULL,
  `lastname` varchar(25) NOT NULL,
  `username` varchar(16) NOT NULL,
  `email` varchar(35) DEFAULT NULL,
  `joined` date NOT NULL
) ENGINE=ROCKSDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci
/*!50100 PARTITION BY RANGE (year(`joined`))
(PARTITION p0 VALUES LESS THAN (1960) ENGINE = ROCKSDB,
 PARTITION p1 VALUES LESS THAN (1970) ENGINE = ROCKSDB,
 PARTITION p2 VALUES LESS THAN (1980) ENGINE = ROCKSDB,
 PARTITION p3 VALUES LESS THAN (1990) ENGINE = ROCKSDB) */
SELECT * FROM t1;
firstname	lastname	username	email	joined
a	a	aa	aa@a.com	1957-05-15
b	b	bb	bb@b.com	1967-06-16
c	c	cc	cc@c.com	1977-07-17
SELECT PARTITION_NAME FROM information_schema.rocksdb_ddl
WHERE TABLE_NAME="t1" ORDER BY PARTITION_NAME;
PARTITION_NAME
p0
p1
p2
p3
SELECT * from information_schema.partitions WHERE TABLE_NAME="t1";
TABLE_CATALOG	TABLE_SCHEMA	TABLE_NAME	PARTITION_NAME	SUBPARTITION_NAME	PARTITION_ORDINAL_POSITION	SUBPARTITION_ORDINAL_POSITION	PARTITION_METHOD	SUBPARTITION_METHOD	PARTITION_EXPRESSION	SUBPARTITION_EXPRESSION	PARTITION_DESCRIPTION	TABLE_ROWS	AVG_ROW_LENGTH	DATA_LENGTH	MAX_DATA_LENGTH	INDEX_LENGTH	DATA_FREE	CREATE_TIME	UPDATE_TIME	CHECK_TIME	CHECKSUM	PARTITION_COMMENT	NODEGROUP	TABLESPACE_NAME
def	test	t1	p0	NULL	1	NULL	RANGE	NULL	year(`joined`)	NULL	1960	#	#	#	#	#	#	#	#	#	NULL		default	NULL
def	test	t1	p1	NULL	2	NULL	RANGE	NULL	year(`joined`)	NULL	1970	#	#	#	#	#	#	#	#	#	NULL		default	NULL
def	test	t1	p2	NULL	3	NULL	RANGE	NULL	year(`joined`)	NULL	1980	#	#	#	#	#	#	#	#	#	NULL		default	NULL
def	test	t1	p3	NULL	4	NULL	RANGE	NULL	year(`joined`)	NULL	1990	#	#	#	#	#	#	#	#	#	NULL		default	NULL
ALTER TABLE t1 
ADD PARTITION (PARTITION p5 VALUES LESS THAN (2005));
ERROR HY000: Unknown error 122
# State after failure
SELECT PARTITION_NAME FROM information_schema.rocksdb_ddl
WHERE TABLE_NAME="t1" ORDER BY PARTITION_NAME;
PARTITION_NAME
p0
p1
p2
p3
SELECT * from information_schema.partitions WHERE TABLE_NAME="t1";
TABLE_CATALOG	TABLE_SCHEMA	TABLE_NAME	PARTITION_NAME	SUBPARTITION_NAME	PARTITION_ORDINAL_POSITION	SUBPARTITION_ORDINAL_POSITION	PARTITION_METHOD	SUBPARTITION_METHOD	PARTITION_EXPRESSION	SUBPARTITION_EXPRESSION	PARTITION_DESCRIPTION	TABLE_ROWS	AVG_ROW_LENGTH	DATA_LENGTH	MAX_DATA_LENGTH	INDEX_LENGTH	DATA_FREE	CREATE_TIME	UPDATE_TIME	CHECK_TIME	CHECKSUM	PARTITION_COMMENT	NODEGROUP	TABLESPACE_NAME
def	test	t1	p0	NULL	1	NULL	RANGE	NULL	year(`joined`)	NULL	1960	#	#	#	#	#	#	#	#	#	NULL		default	NULL
def	test	t1	p1	NULL	2	NULL	RANGE	NULL	year(`joined`)	NULL	1970	#	#	#	#	#	#	#	#	#	NULL		default	NULL
def	test	t1	p2	NULL	3	NULL	RANGE	NULL	year(`joined`)	NULL	1980	#	#	#	#	#	#	#	#	#	NULL		default	NULL
def	test	t1	p3	NULL	4	NULL	RANGE	NULL	year(`joined`)	NULL	1990	#	#	#	#	#	#	#	#	#	NULL		default	NULL
DROP TABLE t1;
# Same test under LOCK TABLE
CREATE TABLE t1 (
firstname VARCHAR(25) NOT NULL,
lastname VARCHAR(25) NOT NULL,
username VARCHAR(16) NOT NULL,
email VARCHAR(35),
joined DATE NOT NULL
)
ENGINE=RocksDB
PARTITION BY RANGE(YEAR(joined)) (
PARTITION p0 VALUES LESS THAN (1960),
PARTITION p1 VALUES LESS THAN (1970),
PARTITION p2 VALUES LESS THAN (1980),
PARTITION p3 VALUES LESS THAN (1990)
);
INSERT INTO t1 VALUES 
("a", "a","aa", "aa@a.com","1957-05-15"),
("b", "b","bb", "bb@b.com","1967-06-16"),
("c", "c","cc", "cc@c.com","1977-07-17");
# State before failure
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `firstname` varchar(25) NOT NULL,
  `lastname` varchar(25) NOT NULL,
  `username` varchar(16) NOT NULL,
  `email` varchar(35) DEFAULT NULL,
  `joined` date NOT NULL
) ENGINE=ROCKSDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci
/*!50100 PARTITION BY RANGE (year(`joined`))
(PARTITION p0 VALUES LESS THAN (1960) ENGINE = ROCKSDB,
 PARTITION p1 VALUES LESS THAN (1970) ENGINE = ROCKSDB,
 PARTITION p2 VALUES LESS THAN (1980) ENGINE = ROCKSDB,
 PARTITION p3 VALUES LESS THAN (1990) ENGINE = ROCKSDB) */
SELECT * FROM t1;
firstname	lastname	username	email	joined
a	a	aa	aa@a.com	1957-05-15
b	b	bb	bb@b.com	1967-06-16
c	c	cc	cc@c.com	1977-07-17
SELECT PARTITION_NAME FROM information_schema.rocksdb_ddl
WHERE TABLE_NAME="t1" ORDER BY PARTITION_NAME;
PARTITION_NAME
p0
p1
p2
p3
SELECT * from information_schema.partitions WHERE TABLE_NAME="t1";
TABLE_CATALOG	TABLE_SCHEMA	TABLE_NAME	PARTITION_NAME	SUBPARTITION_NAME	PARTITION_ORDINAL_POSITION	SUBPARTITION_ORDINAL_POSITION	PARTITION_METHOD	SUBPARTITION_METHOD	PARTITION_EXPRESSION	SUBPARTITION_EXPRESSION	PARTITION_DESCRIPTION	TABLE_ROWS	AVG_ROW_LENGTH	DATA_LENGTH	MAX_DATA_LENGTH	INDEX_LENGTH	DATA_FREE	CREATE_TIME	UPDATE_TIME	CHECK_TIME	CHECKSUM	PARTITION_COMMENT	NODEGROUP	TABLESPACE_NAME
def	test	t1	p0	NULL	1	NULL	RANGE	NULL	year(`joined`)	NULL	1960	#	#	#	#	#	#	#	#	#	NULL		default	NULL
def	test	t1	p1	NULL	2	NULL	RANGE	NULL	year(`joined`)	NULL	1970	#	#	#	#	#	#	#	#	#	NULL		default	NULL
def	test	t1	p2	NULL	3	NULL	RANGE	NULL	year(`joined`)	NULL	1980	#	#	#	#	#	#	#	#	#	NULL		default	NULL
def	test	t1	p3	NULL	4	NULL	RANGE	NULL	year(`joined`)	NULL	1990	#	#	#	#	#	#	#	#	#	NULL		default	NULL
LOCK TABLE t1 WRITE;
ALTER TABLE t1 
ADD PARTITION (PARTITION p5 VALUES LESS THAN (2005));
ERROR HY000: Unknown error 122
# State after failure
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `firstname` varchar(25) NOT NULL,
  `lastname` varchar(25) NOT NULL,
  `username` varchar(16) NOT NULL,
  `email` varchar(35) DEFAULT NULL,
  `joined` date NOT NULL
) ENGINE=ROCKSDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci
/*!50100 PARTITION BY RANGE (year(`joined`))
(PARTITION p0 VALUES LESS THAN (1960) ENGINE = ROCKSDB,
 PARTITION p1 VALUES LESS THAN (1970) ENGINE = ROCKSDB,
 PARTITION p2 VALUES LESS THAN (1980) ENGINE = ROCKSDB,
 PARTITION p3 VALUES LESS THAN (1990) ENGINE = ROCKSDB) */
SELECT * FROM t1;
firstname	lastname	username	email	joined
a	a	aa	aa@a.com	1957-05-15
b	b	bb	bb@b.com	1967-06-16
c	c	cc	cc@c.com	1977-07-17
SELECT PARTITION_NAME FROM information_schema.rocksdb_ddl
WHERE TABLE_NAME="t1" ORDER BY PARTITION_NAME;
PARTITION_NAME
p0
p1
p2
p3
SELECT * from information_schema.partitions WHERE TABLE_NAME="t1";
TABLE_CATALOG	TABLE_SCHEMA	TABLE_NAME	PARTITION_NAME	SUBPARTITION_NAME	PARTITION_ORDINAL_POSITION	SUBPARTITION_ORDINAL_POSITION	PARTITION_METHOD	SUBPARTITION_METHOD	PARTITION_EXPRESSION	SUBPARTITION_EXPRESSION	PARTITION_DESCRIPTION	TABLE_ROWS	AVG_ROW_LENGTH	DATA_LENGTH	MAX_DATA_LENGTH	INDEX_LENGTH	DATA_FREE	CREATE_TIME	UPDATE_TIME	CHECK_TIME	CHECKSUM	PARTITION_COMMENT	NODEGROUP	TABLESPACE_NAME
def	test	t1	p0	NULL	1	NULL	RANGE	NULL	year(`joined`)	NULL	1960	#	#	#	#	#	#	#	#	#	NULL		default	NULL
def	test	t1	p1	NULL	2	NULL	RANGE	NULL	year(`joined`)	NULL	1970	#	#	#	#	#	#	#	#	#	NULL		default	NULL
def	test	t1	p2	NULL	3	NULL	RANGE	NULL	year(`joined`)	NULL	1980	#	#	#	#	#	#	#	#	#	NULL		default	NULL
def	test	t1	p3	NULL	4	NULL	RANGE	NULL	year(`joined`)	NULL	1990	#	#	#	#	#	#	#	#	#	NULL		default	NULL
UNLOCK TABLES;
DROP TABLE t1;
SET SESSION debug="-d,fail_add_partition_2";
SET SESSION debug="+d,fail_add_partition_3";
CREATE TABLE t1 (
firstname VARCHAR(25) NOT NULL,
lastname VARCHAR(25) NOT NULL,
username VARCHAR(16) NOT NULL,
email VARCHAR(35),
joined DATE NOT NULL
)
ENGINE=RocksDB
PARTITION BY RANGE(YEAR(joined)) (
PARTITION p0 VALUES LESS THAN (1960),
PARTITION p1 VALUES LESS THAN (1970),
PARTITION p2 VALUES LESS THAN (1980),
PARTITION p3 VALUES LESS THAN (1990)
);
INSERT INTO t1 VALUES 
("a", "a","aa", "aa@a.com","1957-05-15"),
("b", "b","bb", "bb@b.com","1967-06-16"),
("c", "c","cc", "cc@c.com","1977-07-17");
# State before failure
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `firstname` varchar(25) NOT NULL,
  `lastname` varchar(25) NOT NULL,
  `username` varchar(16) NOT NULL,
  `email` varchar(35) DEFAULT NULL,
  `joined` date NOT NULL
) ENGINE=ROCKSDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci
/*!50100 PARTITION BY RANGE (year(`joined`))
(PARTITION p0 VALUES LESS THAN (1960) ENGINE = ROCKSDB,
 PARTITION p1 VALUES LESS THAN (1970) ENGINE = ROCKSDB,
 PARTITION p2 VALUES LESS THAN (1980) ENGINE = ROCKSDB,
 PARTITION p3 VALUES LESS THAN (1990) ENGINE = ROCKSDB) */
SELECT * FROM t1;
firstname	lastname	username	email	joined
a	a	aa	aa@a.com	1957-05-15
b	b	bb	bb@b.com	1967-06-16
c	c	cc	cc@c.com	1977-07-17
SELECT PARTITION_NAME FROM information_schema.rocksdb_ddl
WHERE TABLE_NAME="t1" ORDER BY PARTITION_NAME;
PARTITION_NAME
p0
p1
p2
p3
SELECT * from information_schema.partitions WHERE TABLE_NAME="t1";
TABLE_CATALOG	TABLE_SCHEMA	TABLE_NAME	PARTITION_NAME	SUBPARTITION_NAME	PARTITION_ORDINAL_POSITION	SUBPARTITION_ORDINAL_POSITION	PARTITION_METHOD	SUBPARTITION_METHOD	PARTITION_EXPRESSION	SUBPARTITION_EXPRESSION	PARTITION_DESCRIPTION	TABLE_ROWS	AVG_ROW_LENGTH	DATA_LENGTH	MAX_DATA_LENGTH	INDEX_LENGTH	DATA_FREE	CREATE_TIME	UPDATE_TIME	CHECK_TIME	CHECKSUM	PARTITION_COMMENT	NODEGROUP	TABLESPACE_NAME
def	test	t1	p0	NULL	1	NULL	RANGE	NULL	year(`joined`)	NULL	1960	#	#	#	#	#	#	#	#	#	NULL		default	NULL
def	test	t1	p1	NULL	2	NULL	RANGE	NULL	year(`joined`)	NULL	1970	#	#	#	#	#	#	#	#	#	NULL		default	NULL
def	test	t1	p2	NULL	3	NULL	RANGE	NULL	year(`joined`)	NULL	1980	#	#	#	#	#	#	#	#	#	NULL		default	NULL
def	test	t1	p3	NULL	4	NULL	RANGE	NULL	year(`joined`)	NULL	1990	#	#	#	#	#	#	#	#	#	NULL		default	NULL
ALTER TABLE t1 
ADD PARTITION (PARTITION p5 VALUES LESS THAN (2005));
ERROR HY000: Unknown error 122
# State after failure
SELECT PARTITION_NAME FROM information_schema.rocksdb_ddl
WHERE TABLE_NAME="t1" ORDER BY PARTITION_NAME;
PARTITION_NAME
p0
p1
p2
p3
SELECT * from information_schema.partitions WHERE TABLE_NAME="t1";
TABLE_CATALOG	TABLE_SCHEMA	TABLE_NAME	PARTITION_NAME	SUBPARTITION_NAME	PARTITION_ORDINAL_POSITION	SUBPARTITION_ORDINAL_POSITION	PARTITION_METHOD	SUBPARTITION_METHOD	PARTITION_EXPRESSION	SUBPARTITION_EXPRESSION	PARTITION_DESCRIPTION	TABLE_ROWS	AVG_ROW_LENGTH	DATA_LENGTH	MAX_DATA_LENGTH	INDEX_LENGTH	DATA_FREE	CREATE_TIME	UPDATE_TIME	CHECK_TIME	CHECKSUM	PARTITION_COMMENT	NODEGROUP	TABLESPACE_NAME
def	test	t1	p0	NULL	1	NULL	RANGE	NULL	year(`joined`)	NULL	1960	#	#	#	#	#	#	#	#	#	NULL		default	NULL
def	test	t1	p1	NULL	2	NULL	RANGE	NULL	year(`joined`)	NULL	1970	#	#	#	#	#	#	#	#	#	NULL		default	NULL
def	test	t1	p2	NULL	3	NULL	RANGE	NULL	year(`joined`)	NULL	1980	#	#	#	#	#	#	#	#	#	NULL		default	NULL
def	test	t1	p3	NULL	4	NULL	RANGE	NULL	year(`joined`)	NULL	1990	#	#	#	#	#	#	#	#	#	NULL		default	NULL
DROP TABLE t1;
# Same test under LOCK TABLE
CREATE TABLE t1 (
firstname VARCHAR(25) NOT NULL,
lastname VARCHAR(25) NOT NULL,
username VARCHAR(16) NOT NULL,
email VARCHAR(35),
joined DATE NOT NULL
)
ENGINE=RocksDB
PARTITION BY RANGE(YEAR(joined)) (
PARTITION p0 VALUES LESS THAN (1960),
PARTITION p1 VALUES LESS THAN (1970),
PARTITION p2 VALUES LESS THAN (1980),
PARTITION p3 VALUES LESS THAN (1990)
);
INSERT INTO t1 VALUES 
("a", "a","aa", "aa@a.com","1957-05-15"),
("b", "b","bb", "bb@b.com","1967-06-16"),
("c", "c","cc", "cc@c.com","1977-07-17");
# State before failure
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `firstname` varchar(25) NOT NULL,
  `lastname` varchar(25) NOT NULL,
  `username` varchar(16) NOT NULL,
  `email` varchar(35) DEFAULT NULL,
  `joined` date NOT NULL
) ENGINE=ROCKSDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci
/*!50100 PARTITION BY RANGE (year(`joined`))
(PARTITION p0 VALUES LESS THAN (1960) ENGINE = ROCKSDB,
 PARTITION p1 VALUES LESS THAN (1970) ENGINE = ROCKSDB,
 PARTITION p2 VALUES LESS THAN (1980) ENGINE = ROCKSDB,
 PARTITION p3 VALUES LESS THAN (1990) ENGINE = ROCKSDB) */
SELECT * FROM t1;
firstname	lastname	username	email	joined
a	a	aa	aa@a.com	1957-05-15
b	b	bb	bb@b.com	1967-06-16
c	c	cc	cc@c.com	1977-07-17
SELECT PARTITION_NAME FROM information_schema.rocksdb_ddl
WHERE TABLE_NAME="t1" ORDER BY PARTITION_NAME;
PARTITION_NAME
p0
p1
p2
p3
SELECT * from information_schema.partitions WHERE TABLE_NAME="t1";
TABLE_CATALOG	TABLE_SCHEMA	TABLE_NAME	PARTITION_NAME	SUBPARTITION_NAME	PARTITION_ORDINAL_POSITION	SUBPARTITION_ORDINAL_POSITION	PARTITION_METHOD	SUBPARTITION_METHOD	PARTITION_EXPRESSION	SUBPARTITION_EXPRESSION	PARTITION_DESCRIPTION	TABLE_ROWS	AVG_ROW_LENGTH	DATA_LENGTH	MAX_DATA_LENGTH	INDEX_LENGTH	DATA_FREE	CREATE_TIME	UPDATE_TIME	CHECK_TIME	CHECKSUM	PARTITION_COMMENT	NODEGROUP	TABLESPACE_NAME
def	test	t1	p0	NULL	1	NULL	RANGE	NULL	year(`joined`)	NULL	1960	#	#	#	#	#	#	#	#	#	NULL		default	NULL
def	test	t1	p1	NULL	2	NULL	RANGE	NULL	year(`joined`)	NULL	1970	#	#	#	#	#	#	#	#	#	NULL		default	NULL
def	test	t1	p2	NULL	3	NULL	RANGE	NULL	year(`joined`)	NULL	1980	#	#	#	#	#	#	#	#	#	NULL		default	NULL
def	test	t1	p3	NULL	4	NULL	RANGE	NULL	year(`joined`)	NULL	1990	#	#	#	#	#	#	#	#	#	NULL		default	NULL
LOCK TABLE t1 WRITE;
ALTER TABLE t1 
ADD PARTITION (PARTITION p5 VALUES LESS THAN (2005));
ERROR HY000: Unknown error 122
# State after failure
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `firstname` varchar(25) NOT NULL,
  `lastname` varchar(25) NOT NULL,
  `username` varchar(16) NOT NULL,
  `email` varchar(35) DEFAULT NULL,
  `joined` date NOT NULL
) ENGINE=ROCKSDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci
/*!50100 PARTITION BY RANGE (year(`joined`))
(PARTITION p0 VALUES LESS THAN (1960) ENGINE = ROCKSDB,
 PARTITION p1 VALUES LESS THAN (1970) ENGINE = ROCKSDB,
 PARTITION p2 VALUES LESS THAN (1980) ENGINE = ROCKSDB,
 PARTITION p3 VALUES LESS THAN (1990) ENGINE = ROCKSDB) */
SELECT * FROM t1;
firstname	lastname	username	email	joined
a	a	aa	aa@a.com	1957-05-15
b	b	bb	bb@b.com	1967-06-16
c	c	cc	cc@c.com	1977-07-17
SELECT PARTITION_NAME FROM information_schema.rocksdb_ddl
WHERE TABLE_NAME="t1" ORDER BY PARTITION_NAME;
PARTITION_NAME
p0
p1
p2
p3
SELECT * from information_schema.partitions WHERE TABLE_NAME="t1";
TABLE_CATALOG	TABLE_SCHEMA	TABLE_NAME	PARTITION_NAME	SUBPARTITION_NAME	PARTITION_ORDINAL_POSITION	SUBPARTITION_ORDINAL_POSITION	PARTITION_METHOD	SUBPARTITION_METHOD	PARTITION_EXPRESSION	SUBPARTITION_EXPRESSION	PARTITION_DESCRIPTION	TABLE_ROWS	AVG_ROW_LENGTH	DATA_LENGTH	MAX_DATA_LENGTH	INDEX_LENGTH	DATA_FREE	CREATE_TIME	UPDATE_TIME	CHECK_TIME	CHECKSUM	PARTITION_COMMENT	NODEGROUP	TABLESPACE_NAME
def	test	t1	p0	NULL	1	NULL	RANGE	NULL	year(`joined`)	NULL	1960	#	#	#	#	#	#	#	#	#	NULL		default	NULL
def	test	t1	p1	NULL	2	NULL	RANGE	NULL	year(`joined`)	NULL	1970	#	#	#	#	#	#	#	#	#	NULL		default	NULL
def	test	t1	p2	NULL	3	NULL	RANGE	NULL	year(`joined`)	NULL	1980	#	#	#	#	#	#	#	#	#	NULL		default	NULL
def	test	t1	p3	NULL	4	NULL	RANGE	NULL	year(`joined`)	NULL	1990	#	#	#	#	#	#	#	#	#	NULL		default	NULL
UNLOCK TABLES;
DROP TABLE t1;
SET SESSION debug="-d,fail_add_partition_3";
# Error recovery testing ADD PARTITION
SET SESSION debug="+d,fail_add_partition_2";
CREATE TABLE t1 (
firstname VARCHAR(25) NOT NULL,
lastname VARCHAR(25) NOT NULL,
username VARCHAR(16) NOT NULL,
email VARCHAR(35),
joined DATE NOT NULL
)
ENGINE=RocksDB
PARTITION BY RANGE(YEAR(joined)) (
PARTITION p0 VALUES LESS THAN (1960),
PARTITION p1 VALUES LESS THAN (1970),
PARTITION p2 VALUES LESS THAN (1980),
PARTITION p3 VALUES LESS THAN (1990)
);
INSERT INTO t1 VALUES 
("a", "a","aa", "aa@a.com","1957-05-15"),
("b", "b","bb", "bb@b.com","1967-06-16"),
("c", "c","cc", "cc@c.com","1977-07-17");
# State before failure
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `firstname` varchar(25) NOT NULL,
  `lastname` varchar(25) NOT NULL,
  `username` varchar(16) NOT NULL,
  `email` varchar(35) DEFAULT NULL,
  `joined` date NOT NULL
) ENGINE=ROCKSDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci
/*!50100 PARTITION BY RANGE (year(`joined`))
(PARTITION p0 VALUES LESS THAN (1960) ENGINE = ROCKSDB,
 PARTITION p1 VALUES LESS THAN (1970) ENGINE = ROCKSDB,
 PARTITION p2 VALUES LESS THAN (1980) ENGINE = ROCKSDB,
 PARTITION p3 VALUES LESS THAN (1990) ENGINE = ROCKSDB) */
SELECT * FROM t1;
firstname	lastname	username	email	joined
a	a	aa	aa@a.com	1957-05-15
b	b	bb	bb@b.com	1967-06-16
c	c	cc	cc@c.com	1977-07-17
SELECT PARTITION_NAME FROM information_schema.rocksdb_ddl
WHERE TABLE_NAME="t1" ORDER BY PARTITION_NAME;
PARTITION_NAME
p0
p1
p2
p3
SELECT * from information_schema.partitions WHERE TABLE_NAME="t1";
TABLE_CATALOG	TABLE_SCHEMA	TABLE_NAME	PARTITION_NAME	SUBPARTITION_NAME	PARTITION_ORDINAL_POSITION	SUBPARTITION_ORDINAL_POSITION	PARTITION_METHOD	SUBPARTITION_METHOD	PARTITION_EXPRESSION	SUBPARTITION_EXPRESSION	PARTITION_DESCRIPTION	TABLE_ROWS	AVG_ROW_LENGTH	DATA_LENGTH	MAX_DATA_LENGTH	INDEX_LENGTH	DATA_FREE	CREATE_TIME	UPDATE_TIME	CHECK_TIME	CHECKSUM	PARTITION_COMMENT	NODEGROUP	TABLESPACE_NAME
def	test	t1	p0	NULL	1	NULL	RANGE	NULL	year(`joined`)	NULL	1960	#	#	#	#	#	#	#	#	#	NULL		default	NULL
def	test	t1	p1	NULL	2	NULL	RANGE	NULL	year(`joined`)	NULL	1970	#	#	#	#	#	#	#	#	#	NULL		default	NULL
def	test	t1	p2	NULL	3	NULL	RANGE	NULL	year(`joined`)	NULL	1980	#	#	#	#	#	#	#	#	#	NULL		default	NULL
def	test	t1	p3	NULL	4	NULL	RANGE	NULL	year(`joined`)	NULL	1990	#	#	#	#	#	#	#	#	#	NULL		default	NULL
ALTER TABLE t1 ADD PARTITION 
(PARTITION p6 VALUES LESS THAN (2006), PARTITION p7 VALUES LESS THAN (2007));
ERROR HY000: Unknown error 122
# State after failure
SELECT PARTITION_NAME FROM information_schema.rocksdb_ddl
WHERE TABLE_NAME="t1" ORDER BY PARTITION_NAME;
PARTITION_NAME
p0
p1
p2
p3
SELECT * from information_schema.partitions WHERE TABLE_NAME="t1";
TABLE_CATALOG	TABLE_SCHEMA	TABLE_NAME	PARTITION_NAME	SUBPARTITION_NAME	PARTITION_ORDINAL_POSITION	SUBPARTITION_ORDINAL_POSITION	PARTITION_METHOD	SUBPARTITION_METHOD	PARTITION_EXPRESSION	SUBPARTITION_EXPRESSION	PARTITION_DESCRIPTION	TABLE_ROWS	AVG_ROW_LENGTH	DATA_LENGTH	MAX_DATA_LENGTH	INDEX_LENGTH	DATA_FREE	CREATE_TIME	UPDATE_TIME	CHECK_TIME	CHECKSUM	PARTITION_COMMENT	NODEGROUP	TABLESPACE_NAME
def	test	t1	p0	NULL	1	NULL	RANGE	NULL	year(`joined`)	NULL	1960	#	#	#	#	#	#	#	#	#	NULL		default	NULL
def	test	t1	p1	NULL	2	NULL	RANGE	NULL	year(`joined`)	NULL	1970	#	#	#	#	#	#	#	#	#	NULL		default	NULL
def	test	t1	p2	NULL	3	NULL	RANGE	NULL	year(`joined`)	NULL	1980	#	#	#	#	#	#	#	#	#	NULL		default	NULL
def	test	t1	p3	NULL	4	NULL	RANGE	NULL	year(`joined`)	NULL	1990	#	#	#	#	#	#	#	#	#	NULL		default	NULL
DROP TABLE t1;
# Same test under LOCK TABLE
CREATE TABLE t1 (
firstname VARCHAR(25) NOT NULL,
lastname VARCHAR(25) NOT NULL,
username VARCHAR(16) NOT NULL,
email VARCHAR(35),
joined DATE NOT NULL
)
ENGINE=RocksDB
PARTITION BY RANGE(YEAR(joined)) (
PARTITION p0 VALUES LESS THAN (1960),
PARTITION p1 VALUES LESS THAN (1970),
PARTITION p2 VALUES LESS THAN (1980),
PARTITION p3 VALUES LESS THAN (1990)
);
INSERT INTO t1 VALUES 
("a", "a","aa", "aa@a.com","1957-05-15"),
("b", "b","bb", "bb@b.com","1967-06-16"),
("c", "c","cc", "cc@c.com","1977-07-17");
# State before failure
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `firstname` varchar(25) NOT NULL,
  `lastname` varchar(25) NOT NULL,
  `username` varchar(16) NOT NULL,
  `email` varchar(35) DEFAULT NULL,
  `joined` date NOT NULL
) ENGINE=ROCKSDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci
/*!50100 PARTITION BY RANGE (year(`joined`))
(PARTITION p0 VALUES LESS THAN (1960) ENGINE = ROCKSDB,
 PARTITION p1 VALUES LESS THAN (1970) ENGINE = ROCKSDB,
 PARTITION p2 VALUES LESS THAN (1980) ENGINE = ROCKSDB,
 PARTITION p3 VALUES LESS THAN (1990) ENGINE = ROCKSDB) */
SELECT * FROM t1;
firstname	lastname	username	email	joined
a	a	aa	aa@a.com	1957-05-15
b	b	bb	bb@b.com	1967-06-16
c	c	cc	cc@c.com	1977-07-17
SELECT PARTITION_NAME FROM information_schema.rocksdb_ddl
WHERE TABLE_NAME="t1" ORDER BY PARTITION_NAME;
PARTITION_NAME
p0
p1
p2
p3
SELECT * from information_schema.partitions WHERE TABLE_NAME="t1";
TABLE_CATALOG	TABLE_SCHEMA	TABLE_NAME	PARTITION_NAME	SUBPARTITION_NAME	PARTITION_ORDINAL_POSITION	SUBPARTITION_ORDINAL_POSITION	PARTITION_METHOD	SUBPARTITION_METHOD	PARTITION_EXPRESSION	SUBPARTITION_EXPRESSION	PARTITION_DESCRIPTION	TABLE_ROWS	AVG_ROW_LENGTH	DATA_LENGTH	MAX_DATA_LENGTH	INDEX_LENGTH	DATA_FREE	CREATE_TIME	UPDATE_TIME	CHECK_TIME	CHECKSUM	PARTITION_COMMENT	NODEGROUP	TABLESPACE_NAME
def	test	t1	p0	NULL	1	NULL	RANGE	NULL	year(`joined`)	NULL	1960	#	#	#	#	#	#	#	#	#	NULL		default	NULL
def	test	t1	p1	NULL	2	NULL	RANGE	NULL	year(`joined`)	NULL	1970	#	#	#	#	#	#	#	#	#	NULL		default	NULL
def	test	t1	p2	NULL	3	NULL	RANGE	NULL	year(`joined`)	NULL	1980	#	#	#	#	#	#	#	#	#	NULL		default	NULL
def	test	t1	p3	NULL	4	NULL	RANGE	NULL	year(`joined`)	NULL	1990	#	#	#	#	#	#	#	#	#	NULL		default	NULL
LOCK TABLE t1 WRITE;
ALTER TABLE t1 ADD PARTITION 
(PARTITION p6 VALUES LESS THAN (2006), PARTITION p7 VALUES LESS THAN (2007));
ERROR HY000: Unknown error 122
# State after failure
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `firstname` varchar(25) NOT NULL,
  `lastname` varchar(25) NOT NULL,
  `username` varchar(16) NOT NULL,
  `email` varchar(35) DEFAULT NULL,
  `joined` date NOT NULL
) ENGINE=ROCKSDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci
/*!50100 PARTITION BY RANGE (year(`joined`))
(PARTITION p0 VALUES LESS THAN (1960) ENGINE = ROCKSDB,
 PARTITION p1 VALUES LESS THAN (1970) ENGINE = ROCKSDB,
 PARTITION p2 VALUES LESS THAN (1980) ENGINE = ROCKSDB,
 PARTITION p3 VALUES LESS THAN (1990) ENGINE = ROCKSDB) */
SELECT * FROM t1;
firstname	lastname	username	email	joined
a	a	aa	aa@a.com	1957-05-15
b	b	bb	bb@b.com	1967-06-16
c	c	cc	cc@c.com	1977-07-17
SELECT PARTITION_NAME FROM information_schema.rocksdb_ddl
WHERE TABLE_NAME="t1" ORDER BY PARTITION_NAME;
PARTITION_NAME
p0
p1
p2
p3
SELECT * from information_schema.partitions WHERE TABLE_NAME="t1";
TABLE_CATALOG	TABLE_SCHEMA	TABLE_NAME	PARTITION_NAME	SUBPARTITION_NAME	PARTITION_ORDINAL_POSITION	SUBPARTITION_ORDINAL_POSITION	PARTITION_METHOD	SUBPARTITION_METHOD	PARTITION_EXPRESSION	SUBPARTITION_EXPRESSION	PARTITION_DESCRIPTION	TABLE_ROWS	AVG_ROW_LENGTH	DATA_LENGTH	MAX_DATA_LENGTH	INDEX_LENGTH	DATA_FREE	CREATE_TIME	UPDATE_TIME	CHECK_TIME	CHECKSUM	PARTITION_COMMENT	NODEGROUP	TABLESPACE_NAME
def	test	t1	p0	NULL	1	NULL	RANGE	NULL	year(`joined`)	NULL	1960	#	#	#	#	#	#	#	#	#	NULL		default	NULL
def	test	t1	p1	NULL	2	NULL	RANGE	NULL	year(`joined`)	NULL	1970	#	#	#	#	#	#	#	#	#	NULL		default	NULL
def	test	t1	p2	NULL	3	NULL	RANGE	NULL	year(`joined`)	NULL	1980	#	#	#	#	#	#	#	#	#	NULL		default	NULL
def	test	t1	p3	NULL	4	NULL	RANGE	NULL	year(`joined`)	NULL	1990	#	#	#	#	#	#	#	#	#	NULL		default	NULL
UNLOCK TABLES;
DROP TABLE t1;
SET SESSION debug="-d,fail_add_partition_2";
SET SESSION debug="+d,fail_add_partition_3";
CREATE TABLE t1 (
firstname VARCHAR(25) NOT NULL,
lastname VARCHAR(25) NOT NULL,
username VARCHAR(16) NOT NULL,
email VARCHAR(35),
joined DATE NOT NULL
)
ENGINE=RocksDB
PARTITION BY RANGE(YEAR(joined)) (
PARTITION p0 VALUES LESS THAN (1960),
PARTITION p1 VALUES LESS THAN (1970),
PARTITION p2 VALUES LESS THAN (1980),
PARTITION p3 VALUES LESS THAN (1990)
);
INSERT INTO t1 VALUES 
("a", "a","aa", "aa@a.com","1957-05-15"),
("b", "b","bb", "bb@b.com","1967-06-16"),
("c", "c","cc", "cc@c.com","1977-07-17");
# State before failure
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `firstname` varchar(25) NOT NULL,
  `lastname` varchar(25) NOT NULL,
  `username` varchar(16) NOT NULL,
  `email` varchar(35) DEFAULT NULL,
  `joined` date NOT NULL
) ENGINE=ROCKSDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci
/*!50100 PARTITION BY RANGE (year(`joined`))
(PARTITION p0 VALUES LESS THAN (1960) ENGINE = ROCKSDB,
 PARTITION p1 VALUES LESS THAN (1970) ENGINE = ROCKSDB,
 PARTITION p2 VALUES LESS THAN (1980) ENGINE = ROCKSDB,
 PARTITION p3 VALUES LESS THAN (1990) ENGINE = ROCKSDB) */
SELECT * FROM t1;
firstname	lastname	username	email	joined
a	a	aa	aa@a.com	1957-05-15
b	b	bb	bb@b.com	1967-06-16
c	c	cc	cc@c.com	1977-07-17
SELECT PARTITION_NAME FROM information_schema.rocksdb_ddl
WHERE TABLE_NAME="t1" ORDER BY PARTITION_NAME;
PARTITION_NAME
p0
p1
p2
p3
SELECT * from information_schema.partitions WHERE TABLE_NAME="t1";
TABLE_CATALOG	TABLE_SCHEMA	TABLE_NAME	PARTITION_NAME	SUBPARTITION_NAME	PARTITION_ORDINAL_POSITION	SUBPARTITION_ORDINAL_POSITION	PARTITION_METHOD	SUBPARTITION_METHOD	PARTITION_EXPRESSION	SUBPARTITION_EXPRESSION	PARTITION_DESCRIPTION	TABLE_ROWS	AVG_ROW_LENGTH	DATA_LENGTH	MAX_DATA_LENGTH	INDEX_LENGTH	DATA_FREE	CREATE_TIME	UPDATE_TIME	CHECK_TIME	CHECKSUM	PARTITION_COMMENT	NODEGROUP	TABLESPACE_NAME
def	test	t1	p0	NULL	1	NULL	RANGE	NULL	year(`joined`)	NULL	1960	#	#	#	#	#	#	#	#	#	NULL		default	NULL
def	test	t1	p1	NULL	2	NULL	RANGE	NULL	year(`joined`)	NULL	1970	#	#	#	#	#	#	#	#	#	NULL		default	NULL
def	test	t1	p2	NULL	3	NULL	RANGE	NULL	year(`joined`)	NULL	1980	#	#	#	#	#	#	#	#	#	NULL		default	NULL
def	test	t1	p3	NULL	4	NULL	RANGE	NULL	year(`joined`)	NULL	1990	#	#	#	#	#	#	#	#	#	NULL		default	NULL
ALTER TABLE t1 ADD PARTITION 
(PARTITION p6 VALUES LESS THAN (2006), PARTITION p7 VALUES LESS THAN (2007));
ERROR HY000: Unknown error 122
# State after failure
SELECT PARTITION_NAME FROM information_schema.rocksdb_ddl
WHERE TABLE_NAME="t1" ORDER BY PARTITION_NAME;
PARTITION_NAME
p0
p1
p2
p3
SELECT * from information_schema.partitions WHERE TABLE_NAME="t1";
TABLE_CATALOG	TABLE_SCHEMA	TABLE_NAME	PARTITION_NAME	SUBPARTITION_NAME	PARTITION_ORDINAL_POSITION	SUBPARTITION_ORDINAL_POSITION	PARTITION_METHOD	SUBPARTITION_METHOD	PARTITION_EXPRESSION	SUBPARTITION_EXPRESSION	PARTITION_DESCRIPTION	TABLE_ROWS	AVG_ROW_LENGTH	DATA_LENGTH	MAX_DATA_LENGTH	INDEX_LENGTH	DATA_FREE	CREATE_TIME	UPDATE_TIME	CHECK_TIME	CHECKSUM	PARTITION_COMMENT	NODEGROUP	TABLESPACE_NAME
def	test	t1	p0	NULL	1	NULL	RANGE	NULL	year(`joined`)	NULL	1960	#	#	#	#	#	#	#	#	#	NULL		default	NULL
def	test	t1	p1	NULL	2	NULL	RANGE	NULL	year(`joined`)	NULL	1970	#	#	#	#	#	#	#	#	#	NULL		default	NULL
def	test	t1	p2	NULL	3	NULL	RANGE	NULL	year(`joined`)	NULL	1980	#	#	#	#	#	#	#	#	#	NULL		default	NULL
def	test	t1	p3	NULL	4	NULL	RANGE	NULL	year(`joined`)	NULL	1990	#	#	#	#	#	#	#	#	#	NULL		default	NULL
DROP TABLE t1;
# Same test under LOCK TABLE
CREATE TABLE t1 (
firstname VARCHAR(25) NOT NULL,
lastname VARCHAR(25) NOT NULL,
username VARCHAR(16) NOT NULL,
email VARCHAR(35),
joined DATE NOT NULL
)
ENGINE=RocksDB
PARTITION BY RANGE(YEAR(joined)) (
PARTITION p0 VALUES LESS THAN (1960),
PARTITION p1 VALUES LESS THAN (1970),
PARTITION p2 VALUES LESS THAN (1980),
PARTITION p3 VALUES LESS THAN (1990)
);
INSERT INTO t1 VALUES 
("a", "a","aa", "aa@a.com","1957-05-15"),
("b", "b","bb", "bb@b.com","1967-06-16"),
("c", "c","cc", "cc@c.com","1977-07-17");
# State before failure
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `firstname` varchar(25) NOT NULL,
  `lastname` varchar(25) NOT NULL,
  `username` varchar(16) NOT NULL,
  `email` varchar(35) DEFAULT NULL,
  `joined` date NOT NULL
) ENGINE=ROCKSDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci
/*!50100 PARTITION BY RANGE (year(`joined`))
(PARTITION p0 VALUES LESS THAN (1960) ENGINE = ROCKSDB,
 PARTITION p1 VALUES LESS THAN (1970) ENGINE = ROCKSDB,
 PARTITION p2 VALUES LESS THAN (1980) ENGINE = ROCKSDB,
 PARTITION p3 VALUES LESS THAN (1990) ENGINE = ROCKSDB) */
SELECT * FROM t1;
firstname	lastname	username	email	joined
a	a	aa	aa@a.com	1957-05-15
b	b	bb	bb@b.com	1967-06-16
c	c	cc	cc@c.com	1977-07-17
SELECT PARTITION_NAME FROM information_schema.rocksdb_ddl
WHERE TABLE_NAME="t1" ORDER BY PARTITION_NAME;
PARTITION_NAME
p0
p1
p2
p3
SELECT * from information_schema.partitions WHERE TABLE_NAME="t1";
TABLE_CATALOG	TABLE_SCHEMA	TABLE_NAME	PARTITION_NAME	SUBPARTITION_NAME	PARTITION_ORDINAL_POSITION	SUBPARTITION_ORDINAL_POSITION	PARTITION_METHOD	SUBPARTITION_METHOD	PARTITION_EXPRESSION	SUBPARTITION_EXPRESSION	PARTITION_DESCRIPTION	TABLE_ROWS	AVG_ROW_LENGTH	DATA_LENGTH	MAX_DATA_LENGTH	INDEX_LENGTH	DATA_FREE	CREATE_TIME	UPDATE_TIME	CHECK_TIME	CHECKSUM	PARTITION_COMMENT	NODEGROUP	TABLESPACE_NAME
def	test	t1	p0	NULL	1	NULL	RANGE	NULL	year(`joined`)	NULL	1960	#	#	#	#	#	#	#	#	#	NULL		default	NULL
def	test	t1	p1	NULL	2	NULL	RANGE	NULL	year(`joined`)	NULL	1970	#	#	#	#	#	#	#	#	#	NULL		default	NULL
def	test	t1	p2	NULL	3	NULL	RANGE	NULL	year(`joined`)	NULL	1980	#	#	#	#	#	#	#	#	#	NULL		default	NULL
def	test	t1	p3	NULL	4	NULL	RANGE	NULL	year(`joined`)	NULL	1990	#	#	#	#	#	#	#	#	#	NULL		default	NULL
LOCK TABLE t1 WRITE;
ALTER TABLE t1 ADD PARTITION 
(PARTITION p6 VALUES LESS THAN (2006), PARTITION p7 VALUES LESS THAN (2007));
ERROR HY000: Unknown error 122
# State after failure
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `firstname` varchar(25) NOT NULL,
  `lastname` varchar(25) NOT NULL,
  `username` varchar(16) NOT NULL,
  `email` varchar(35) DEFAULT NULL,
  `joined` date NOT NULL
) ENGINE=ROCKSDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci
/*!50100 PARTITION BY RANGE (year(`joined`))
(PARTITION p0 VALUES LESS THAN (1960) ENGINE = ROCKSDB,
 PARTITION p1 VALUES LESS THAN (1970) ENGINE = ROCKSDB,
 PARTITION p2 VALUES LESS THAN (1980) ENGINE = ROCKSDB,
 PARTITION p3 VALUES LESS THAN (1990) ENGINE = ROCKSDB) */
SELECT * FROM t1;
firstname	lastname	username	email	joined
a	a	aa	aa@a.com	1957-05-15
b	b	bb	bb@b.com	1967-06-16
c	c	cc	cc@c.com	1977-07-17
SELECT PARTITION_NAME FROM information_schema.rocksdb_ddl
WHERE TABLE_NAME="t1" ORDER BY PARTITION_NAME;
PARTITION_NAME
p0
p1
p2
p3
SELECT * from information_schema.partitions WHERE TABLE_NAME="t1";
TABLE_CATALOG	TABLE_SCHEMA	TABLE_NAME	PARTITION_NAME	SUBPARTITION_NAME	PARTITION_ORDINAL_POSITION	SUBPARTITION_ORDINAL_POSITION	PARTITION_METHOD	SUBPARTITION_METHOD	PARTITION_EXPRESSION	SUBPARTITION_EXPRESSION	PARTITION_DESCRIPTION	TABLE_ROWS	AVG_ROW_LENGTH	DATA_LENGTH	MAX_DATA_LENGTH	INDEX_LENGTH	DATA_FREE	CREATE_TIME	UPDATE_TIME	CHECK_TIME	CHECKSUM	PARTITION_COMMENT	NODEGROUP	TABLESPACE_NAME
def	test	t1	p0	NULL	1	NULL	RANGE	NULL	year(`joined`)	NULL	1960	#	#	#	#	#	#	#	#	#	NULL		default	NULL
def	test	t1	p1	NULL	2	NULL	RANGE	NULL	year(`joined`)	NULL	1970	#	#	#	#	#	#	#	#	#	NULL		default	NULL
def	test	t1	p2	NULL	3	NULL	RANGE	NULL	year(`joined`)	NULL	1980	#	#	#	#	#	#	#	#	#	NULL		default	NULL
def	test	t1	p3	NULL	4	NULL	RANGE	NULL	year(`joined`)	NULL	1990	#	#	#	#	#	#	#	#	#	NULL		default	NULL
UNLOCK TABLES;
DROP TABLE t1;
SET SESSION debug="-d,fail_add_partition_3";
# Error recovery testing ADD PARTITION
SET SESSION debug="+d,fail_add_partition_2";
CREATE TABLE t1 (id INT, purchased DATE) ENGINE=RocksDB
PARTITION BY RANGE( YEAR(purchased) )
SUBPARTITION BY HASH( TO_DAYS(purchased) )
SUBPARTITIONS 2 (
PARTITION p0 VALUES LESS THAN (1990),
PARTITION p1 VALUES LESS THAN (2000),
PARTITION p2 VALUES LESS THAN (2002) 
);
INSERT INTO t1 VALUES 
(1988, "1988-02-02"), 
(1999, "1999-02-02"),
(2001, "2001-02-02");
# State before failure
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `id` int DEFAULT NULL,
  `purchased` date DEFAULT NULL
) ENGINE=ROCKSDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci
/*!50100 PARTITION BY RANGE (year(`purchased`))
SUBPARTITION BY HASH (to_days(`purchased`))
SUBPARTITIONS 2
(PARTITION p0 VALUES LESS THAN (1990) ENGINE = ROCKSDB,
 PARTITION p1 VALUES LESS THAN (2000) ENGINE = ROCKSDB,
 PARTITION p2 VALUES LESS THAN (2002) ENGINE = ROCKSDB) */
SELECT * FROM t1;
id	purchased
1988	1988-02-02
1999	1999-02-02
2001	2001-02-02
SELECT PARTITION_NAME FROM information_schema.rocksdb_ddl
WHERE TABLE_NAME="t1" ORDER BY PARTITION_NAME;
PARTITION_NAME
p0#SP#p0sp0
p0#SP#p0sp1
p1#SP#p1sp0
p1#SP#p1sp1
p2#SP#p2sp0
p2#SP#p2sp1
SELECT * from information_schema.partitions WHERE TABLE_NAME="t1";
TABLE_CATALOG	TABLE_SCHEMA	TABLE_NAME	PARTITION_NAME	SUBPARTITION_NAME	PARTITION_ORDINAL_POSITION	SUBPARTITION_ORDINAL_POSITION	PARTITION_METHOD	SUBPARTITION_METHOD	PARTITION_EXPRESSION	SUBPARTITION_EXPRESSION	PARTITION_DESCRIPTION	TABLE_ROWS	AVG_ROW_LENGTH	DATA_LENGTH	MAX_DATA_LENGTH	INDEX_LENGTH	DATA_FREE	CREATE_TIME	UPDATE_TIME	CHECK_TIME	CHECKSUM	PARTITION_COMMENT	NODEGROUP	TABLESPACE_NAME
def	test	t1	p0	p0sp0	1	1	RANGE	HASH	year(`purchased`)	to_days(`purchased`)	1990	#	#	#	#	#	#	#	#	#	NULL		default	NULL
def	test	t1	p0	p0sp1	1	2	RANGE	HASH	year(`purchased`)	to_days(`purchased`)	1990	#	#	#	#	#	#	#	#	#	NULL		default	NULL
def	test	t1	p1	p1sp0	2	1	RANGE	HASH	year(`purchased`)	to_days(`purchased`)	2000	#	#	#	#	#	#	#	#	#	NULL		default	NULL
def	test	t1	p1	p1sp1	2	2	RANGE	HASH	year(`purchased`)	to_days(`purchased`)	2000	#	#	#	#	#	#	#	#	#	NULL		default	NULL
def	test	t1	p2	p2sp0	3	1	RANGE	HASH	year(`purchased`)	to_days(`purchased`)	2002	#	#	#	#	#	#	#	#	#	NULL		default	NULL
def	test	t1	p2	p2sp1	3	2	RANGE	HASH	year(`purchased`)	to_days(`purchased`)	2002	#	#	#	#	#	#	#	#	#	NULL		default	NULL
ALTER TABLE t1 ADD PARTITION(PARTITION p3 VALUES LESS THAN (2005));
ERROR HY000: Unknown error 122
# State after failure
SELECT PARTITION_NAME FROM information_schema.rocksdb_ddl
WHERE TABLE_NAME="t1" ORDER BY PARTITION_NAME;
PARTITION_NAME
p0#SP#p0sp0
p0#SP#p0sp1
p1#SP#p1sp0
p1#SP#p1sp1
p2#SP#p2sp0
p2#SP#p2sp1
SELECT * from information_schema.partitions WHERE TABLE_NAME="t1";
TABLE_CATALOG	TABLE_SCHEMA	TABLE_NAME	PARTITION_NAME	SUBPARTITION_NAME	PARTITION_ORDINAL_POSITION	SUBPARTITION_ORDINAL_POSITION	PARTITION_METHOD	SUBPARTITION_METHOD	PARTITION_EXPRESSION	SUBPARTITION_EXPRESSION	PARTITION_DESCRIPTION	TABLE_ROWS	AVG_ROW_LENGTH	DATA_LENGTH	MAX_DATA_LENGTH	INDEX_LENGTH	DATA_FREE	CREATE_TIME	UPDATE_TIME	CHECK_TIME	CHECKSUM	PARTITION_COMMENT	NODEGROUP	TABLESPACE_NAME
def	test	t1	p0	p0sp0	1	1	RANGE	HASH	year(`purchased`)	to_days(`purchased`)	1990	#	#	#	#	#	#	#	#	#	NULL		default	NULL
def	test	t1	p0	p0sp1	1	2	RANGE	HASH	year(`purchased`)	to_days(`purchased`)	1990	#	#	#	#	#	#	#	#	#	NULL		default	NULL
def	test	t1	p1	p1sp0	2	1	RANGE	HASH	year(`purchased`)	to_days(`purchased`)	2000	#	#	#	#	#	#	#	#	#	NULL		default	NULL
def	test	t1	p1	p1sp1	2	2	RANGE	HASH	year(`purchased`)	to_days(`purchased`)	2000	#	#	#	#	#	#	#	#	#	NULL		default	NULL
def	test	t1	p2	p2sp0	3	1	RANGE	HASH	year(`purchased`)	to_days(`purchased`)	2002	#	#	#	#	#	#	#	#	#	NULL		default	NULL
def	test	t1	p2	p2sp1	3	2	RANGE	HASH	year(`purchased`)	to_days(`purchased`)	2002	#	#	#	#	#	#	#	#	#	NULL		default	NULL
DROP TABLE t1;
# Same test under LOCK TABLE
CREATE TABLE t1 (id INT, purchased DATE) ENGINE=RocksDB
PARTITION BY RANGE( YEAR(purchased) )
SUBPARTITION BY HASH( TO_DAYS(purchased) )
SUBPARTITIONS 2 (
PARTITION p0 VALUES LESS THAN (1990),
PARTITION p1 VALUES LESS THAN (2000),
PARTITION p2 VALUES LESS THAN (2002) 
);
INSERT INTO t1 VALUES 
(1988, "1988-02-02"), 
(1999, "1999-02-02"),
(2001, "2001-02-02");
# State before failure
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `id` int DEFAULT NULL,
  `purchased` date DEFAULT NULL
) ENGINE=ROCKSDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci
/*!50100 PARTITION BY RANGE (year(`purchased`))
SUBPARTITION BY HASH (to_days(`purchased`))
SUBPARTITIONS 2
(PARTITION p0 VALUES LESS THAN (1990) ENGINE = ROCKSDB,
 PARTITION p1 VALUES LESS THAN (2000) ENGINE = ROCKSDB,
 PARTITION p2 VALUES LESS THAN (2002) ENGINE = ROCKSDB) */
SELECT * FROM t1;
id	purchased
1988	1988-02-02
1999	1999-02-02
2001	2001-02-02
SELECT PARTITION_NAME FROM information_schema.rocksdb_ddl
WHERE TABLE_NAME="t1" ORDER BY PARTITION_NAME;
PARTITION_NAME
p0#SP#p0sp0
p0#SP#p0sp1
p1#SP#p1sp0
p1#SP#p1sp1
p2#SP#p2sp0
p2#SP#p2sp1
SELECT * from information_schema.partitions WHERE TABLE_NAME="t1";
TABLE_CATALOG	TABLE_SCHEMA	TABLE_NAME	PARTITION_NAME	SUBPARTITION_NAME	PARTITION_ORDINAL_POSITION	SUBPARTITION_ORDINAL_POSITION	PARTITION_METHOD	SUBPARTITION_METHOD	PARTITION_EXPRESSION	SUBPARTITION_EXPRESSION	PARTITION_DESCRIPTION	TABLE_ROWS	AVG_ROW_LENGTH	DATA_LENGTH	MAX_DATA_LENGTH	INDEX_LENGTH	DATA_FREE	CREATE_TIME	UPDATE_TIME	CHECK_TIME	CHECKSUM	PARTITION_COMMENT	NODEGROUP	TABLESPACE_NAME
def	test	t1	p0	p0sp0	1	1	RANGE	HASH	year(`purchased`)	to_days(`purchased`)	1990	#	#	#	#	#	#	#	#	#	NULL		default	NULL
def	test	t1	p0	p0sp1	1	2	RANGE	HASH	year(`purchased`)	to_days(`purchased`)	1990	#	#	#	#	#	#	#	#	#	NULL		default	NULL
def	test	t1	p1	p1sp0	2	1	RANGE	HASH	year(`purchased`)	to_days(`purchased`)	2000	#	#	#	#	#	#	#	#	#	NULL		default	NULL
def	test	t1	p1	p1sp1	2	2	RANGE	HASH	year(`purchased`)	to_days(`purchased`)	2000	#	#	#	#	#	#	#	#	#	NULL		default	NULL
def	test	t1	p2	p2sp0	3	1	RANGE	HASH	year(`purchased`)	to_days(`purchased`)	2002	#	#	#	#	#	#	#	#	#	NULL		default	NULL
def	test	t1	p2	p2sp1	3	2	RANGE	HASH	year(`purchased`)	to_days(`purchased`)	2002	#	#	#	#	#	#	#	#	#	NULL		default	NULL
LOCK TABLE t1 WRITE;
ALTER TABLE t1 ADD PARTITION(PARTITION p3 VALUES LESS THAN (2005));
ERROR HY000: Unknown error 122
# State after failure
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `id` int DEFAULT NULL,
  `purchased` date DEFAULT NULL
) ENGINE=ROCKSDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci
/*!50100 PARTITION BY RANGE (year(`purchased`))
SUBPARTITION BY HASH (to_days(`purchased`))
SUBPARTITIONS 2
(PARTITION p0 VALUES LESS THAN (1990) ENGINE = ROCKSDB,
 PARTITION p1 VALUES LESS THAN (2000) ENGINE = ROCKSDB,
 PARTITION p2 VALUES LESS THAN (2002) ENGINE = ROCKSDB) */
SELECT * FROM t1;
id	purchased
1988	1988-02-02
1999	1999-02-02
2001	2001-02-02
SELECT PARTITION_NAME FROM information_schema.rocksdb_ddl
WHERE TABLE_NAME="t1" ORDER BY PARTITION_NAME;
PARTITION_NAME
p0#SP#p0sp0
p0#SP#p0sp1
p1#SP#p1sp0
p1#SP#p1sp1
p2#SP#p2sp0
p2#SP#p2sp1
SELECT * from information_schema.partitions WHERE TABLE_NAME="t1";
TABLE_CATALOG	TABLE_SCHEMA	TABLE_NAME	PARTITION_NAME	SUBPARTITION_NAME	PARTITION_ORDINAL_POSITION	SUBPARTITION_ORDINAL_POSITION	PARTITION_METHOD	SUBPARTITION_METHOD	PARTITION_EXPRESSION	SUBPARTITION_EXPRESSION	PARTITION_DESCRIPTION	TABLE_ROWS	AVG_ROW_LENGTH	DATA_LENGTH	MAX_DATA_LENGTH	INDEX_LENGTH	DATA_FREE	CREATE_TIME	UPDATE_TIME	CHECK_TIME	CHECKSUM	PARTITION_COMMENT	NODEGROUP	TABLESPACE_NAME
def	test	t1	p0	p0sp0	1	1	RANGE	HASH	year(`purchased`)	to_days(`purchased`)	1990	#	#	#	#	#	#	#	#	#	NULL		default	NULL
def	test	t1	p0	p0sp1	1	2	RANGE	HASH	year(`purchased`)	to_days(`purchased`)	1990	#	#	#	#	#	#	#	#	#	NULL		default	NULL
def	test	t1	p1	p1sp0	2	1	RANGE	HASH	year(`purchased`)	to_days(`purchased`)	2000	#	#	#	#	#	#	#	#	#	NULL		default	NULL
def	test	t1	p1	p1sp1	2	2	RANGE	HASH	year(`purchased`)	to_days(`purchased`)	2000	#	#	#	#	#	#	#	#	#	NULL		default	NULL
def	test	t1	p2	p2sp0	3	1	RANGE	HASH	year(`purchased`)	to_days(`purchased`)	2002	#	#	#	#	#	#	#	#	#	NULL		default	NULL
def	test	t1	p2	p2sp1	3	2	RANGE	HASH	year(`purchased`)	to_days(`purchased`)	2002	#	#	#	#	#	#	#	#	#	NULL		default	NULL
UNLOCK TABLES;
DROP TABLE t1;
SET SESSION debug="-d,fail_add_partition_2";
SET SESSION debug="+d,fail_add_partition_3";
CREATE TABLE t1 (id INT, purchased DATE) ENGINE=RocksDB
PARTITION BY RANGE( YEAR(purchased) )
SUBPARTITION BY HASH( TO_DAYS(purchased) )
SUBPARTITIONS 2 (
PARTITION p0 VALUES LESS THAN (1990),
PARTITION p1 VALUES LESS THAN (2000),
PARTITION p2 VALUES LESS THAN (2002) 
);
INSERT INTO t1 VALUES 
(1988, "1988-02-02"), 
(1999, "1999-02-02"),
(2001, "2001-02-02");
# State before failure
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `id` int DEFAULT NULL,
  `purchased` date DEFAULT NULL
) ENGINE=ROCKSDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci
/*!50100 PARTITION BY RANGE (year(`purchased`))
SUBPARTITION BY HASH (to_days(`purchased`))
SUBPARTITIONS 2
(PARTITION p0 VALUES LESS THAN (1990) ENGINE = ROCKSDB,
 PARTITION p1 VALUES LESS THAN (2000) ENGINE = ROCKSDB,
 PARTITION p2 VALUES LESS THAN (2002) ENGINE = ROCKSDB) */
SELECT * FROM t1;
id	purchased
1988	1988-02-02
1999	1999-02-02
2001	2001-02-02
SELECT PARTITION_NAME FROM information_schema.rocksdb_ddl
WHERE TABLE_NAME="t1" ORDER BY PARTITION_NAME;
PARTITION_NAME
p0#SP#p0sp0
p0#SP#p0sp1
p1#SP#p1sp0
p1#SP#p1sp1
p2#SP#p2sp0
p2#SP#p2sp1
SELECT * from information_schema.partitions WHERE TABLE_NAME="t1";
TABLE_CATALOG	TABLE_SCHEMA	TABLE_NAME	PARTITION_NAME	SUBPARTITION_NAME	PARTITION_ORDINAL_POSITION	SUBPARTITION_ORDINAL_POSITION	PARTITION_METHOD	SUBPARTITION_METHOD	PARTITION_EXPRESSION	SUBPARTITION_EXPRESSION	PARTITION_DESCRIPTION	TABLE_ROWS	AVG_ROW_LENGTH	DATA_LENGTH	MAX_DATA_LENGTH	INDEX_LENGTH	DATA_FREE	CREATE_TIME	UPDATE_TIME	CHECK_TIME	CHECKSUM	PARTITION_COMMENT	NODEGROUP	TABLESPACE_NAME
def	test	t1	p0	p0sp0	1	1	RANGE	HASH	year(`purchased`)	to_days(`purchased`)	1990	#	#	#	#	#	#	#	#	#	NULL		default	NULL
def	test	t1	p0	p0sp1	1	2	RANGE	HASH	year(`purchased`)	to_days(`purchased`)	1990	#	#	#	#	#	#	#	#	#	NULL		default	NULL
def	test	t1	p1	p1sp0	2	1	RANGE	HASH	year(`purchased`)	to_days(`purchased`)	2000	#	#	#	#	#	#	#	#	#	NULL		default	NULL
def	test	t1	p1	p1sp1	2	2	RANGE	HASH	year(`purchased`)	to_days(`purchased`)	2000	#	#	#	#	#	#	#	#	#	NULL		default	NULL
def	test	t1	p2	p2sp0	3	1	RANGE	HASH	year(`purchased`)	to_days(`purchased`)	2002	#	#	#	#	#	#	#	#	#	NULL		default	NULL
def	test	t1	p2	p2sp1	3	2	RANGE	HASH	year(`purchased`)	to_days(`purchased`)	2002	#	#	#	#	#	#	#	#	#	NULL		default	NULL
ALTER TABLE t1 ADD PARTITION(PARTITION p3 VALUES LESS THAN (2005));
ERROR HY000: Unknown error 122
# State after failure
SELECT PARTITION_NAME FROM information_schema.rocksdb_ddl
WHERE TABLE_NAME="t1" ORDER BY PARTITION_NAME;
PARTITION_NAME
p0#SP#p0sp0
p0#SP#p0sp1
p1#SP#p1sp0
p1#SP#p1sp1
p2#SP#p2sp0
p2#SP#p2sp1
SELECT * from information_schema.partitions WHERE TABLE_NAME="t1";
TABLE_CATALOG	TABLE_SCHEMA	TABLE_NAME	PARTITION_NAME	SUBPARTITION_NAME	PARTITION_ORDINAL_POSITION	SUBPARTITION_ORDINAL_POSITION	PARTITION_METHOD	SUBPARTITION_METHOD	PARTITION_EXPRESSION	SUBPARTITION_EXPRESSION	PARTITION_DESCRIPTION	TABLE_ROWS	AVG_ROW_LENGTH	DATA_LENGTH	MAX_DATA_LENGTH	INDEX_LENGTH	DATA_FREE	CREATE_TIME	UPDATE_TIME	CHECK_TIME	CHECKSUM	PARTITION_COMMENT	NODEGROUP	TABLESPACE_NAME
def	test	t1	p0	p0sp0	1	1	RANGE	HASH	year(`purchased`)	to_days(`purchased`)	1990	#	#	#	#	#	#	#	#	#	NULL		default	NULL
def	test	t1	p0	p0sp1	1	2	RANGE	HASH	year(`purchased`)	to_days(`purchased`)	1990	#	#	#	#	#	#	#	#	#	NULL		default	NULL
def	test	t1	p1	p1sp0	2	1	RANGE	HASH	year(`purchased`)	to_days(`purchased`)	2000	#	#	#	#	#	#	#	#	#	NULL		default	NULL
def	test	t1	p1	p1sp1	2	2	RANGE	HASH	year(`purchased`)	to_days(`purchased`)	2000	#	#	#	#	#	#	#	#	#	NULL		default	NULL
def	test	t1	p2	p2sp0	3	1	RANGE	HASH	year(`purchased`)	to_days(`purchased`)	2002	#	#	#	#	#	#	#	#	#	NULL		default	NULL
def	test	t1	p2	p2sp1	3	2	RANGE	HASH	year(`purchased`)	to_days(`purchased`)	2002	#	#	#	#	#	#	#	#	#	NULL		default	NULL
DROP TABLE t1;
# Same test under LOCK TABLE
CREATE TABLE t1 (id INT, purchased DATE) ENGINE=RocksDB
PARTITION BY RANGE( YEAR(purchased) )
SUBPARTITION BY HASH( TO_DAYS(purchased) )
SUBPARTITIONS 2 (
PARTITION p0 VALUES LESS THAN (1990),
PARTITION p1 VALUES LESS THAN (2000),
PARTITION p2 VALUES LESS THAN (2002) 
);
INSERT INTO t1 VALUES 
(1988, "1988-02-02"), 
(1999, "1999-02-02"),
(2001, "2001-02-02");
# State before failure
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `id` int DEFAULT NULL,
  `purchased` date DEFAULT NULL
) ENGINE=ROCKSDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci
/*!50100 PARTITION BY RANGE (year(`purchased`))
SUBPARTITION BY HASH (to_days(`purchased`))
SUBPARTITIONS 2
(PARTITION p0 VALUES LESS THAN (1990) ENGINE = ROCKSDB,
 PARTITION p1 VALUES LESS THAN (2000) ENGINE = ROCKSDB,
 PARTITION p2 VALUES LESS THAN (2002) ENGINE = ROCKSDB) */
SELECT * FROM t1;
id	purchased
1988	1988-02-02
1999	1999-02-02
2001	2001-02-02
SELECT PARTITION_NAME FROM information_schema.rocksdb_ddl
WHERE TABLE_NAME="t1" ORDER BY PARTITION_NAME;
PARTITION_NAME
p0#SP#p0sp0
p0#SP#p0sp1
p1#SP#p1sp0
p1#SP#p1sp1
p2#SP#p2sp0
p2#SP#p2sp1
SELECT * from information_schema.partitions WHERE TABLE_NAME="t1";
TABLE_CATALOG	TABLE_SCHEMA	TABLE_NAME	PARTITION_NAME	SUBPARTITION_NAME	PARTITION_ORDINAL_POSITION	SUBPARTITION_ORDINAL_POSITION	PARTITION_METHOD	SUBPARTITION_METHOD	PARTITION_EXPRESSION	SUBPARTITION_EXPRESSION	PARTITION_DESCRIPTION	TABLE_ROWS	AVG_ROW_LENGTH	DATA_LENGTH	MAX_DATA_LENGTH	INDEX_LENGTH	DATA_FREE	CREATE_TIME	UPDATE_TIME	CHECK_TIME	CHECKSUM	PARTITION_COMMENT	NODEGROUP	TABLESPACE_NAME
def	test	t1	p0	p0sp0	1	1	RANGE	HASH	year(`purchased`)	to_days(`purchased`)	1990	#	#	#	#	#	#	#	#	#	NULL		default	NULL
def	test	t1	p0	p0sp1	1	2	RANGE	HASH	year(`purchased`)	to_days(`purchased`)	1990	#	#	#	#	#	#	#	#	#	NULL		default	NULL
def	test	t1	p1	p1sp0	2	1	RANGE	HASH	year(`purchased`)	to_days(`purchased`)	2000	#	#	#	#	#	#	#	#	#	NULL		default	NULL
def	test	t1	p1	p1sp1	2	2	RANGE	HASH	year(`purchased`)	to_days(`purchased`)	2000	#	#	#	#	#	#	#	#	#	NULL		default	NULL
def	test	t1	p2	p2sp0	3	1	RANGE	HASH	year(`purchased`)	to_days(`purchased`)	2002	#	#	#	#	#	#	#	#	#	NULL		default	NULL
def	test	t1	p2	p2sp1	3	2	RANGE	HASH	year(`purchased`)	to_days(`purchased`)	2002	#	#	#	#	#	#	#	#	#	NULL		default	NULL
LOCK TABLE t1 WRITE;
ALTER TABLE t1 ADD PARTITION(PARTITION p3 VALUES LESS THAN (2005));
ERROR HY000: Unknown error 122
# State after failure
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `id` int DEFAULT NULL,
  `purchased` date DEFAULT NULL
) ENGINE=ROCKSDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci
/*!50100 PARTITION BY RANGE (year(`purchased`))
SUBPARTITION BY HASH (to_days(`purchased`))
SUBPARTITIONS 2
(PARTITION p0 VALUES LESS THAN (1990) ENGINE = ROCKSDB,
 PARTITION p1 VALUES LESS THAN (2000) ENGINE = ROCKSDB,
 PARTITION p2 VALUES LESS THAN (2002) ENGINE = ROCKSDB) */
SELECT * FROM t1;
id	purchased
1988	1988-02-02
1999	1999-02-02
2001	2001-02-02
SELECT PARTITION_NAME FROM information_schema.rocksdb_ddl
WHERE TABLE_NAME="t1" ORDER BY PARTITION_NAME;
PARTITION_NAME
p0#SP#p0sp0
p0#SP#p0sp1
p1#SP#p1sp0
p1#SP#p1sp1
p2#SP#p2sp0
p2#SP#p2sp1
SELECT * from information_schema.partitions WHERE TABLE_NAME="t1";
TABLE_CATALOG	TABLE_SCHEMA	TABLE_NAME	PARTITION_NAME	SUBPARTITION_NAME	PARTITION_ORDINAL_POSITION	SUBPARTITION_ORDINAL_POSITION	PARTITION_METHOD	SUBPARTITION_METHOD	PARTITION_EXPRESSION	SUBPARTITION_EXPRESSION	PARTITION_DESCRIPTION	TABLE_ROWS	AVG_ROW_LENGTH	DATA_LENGTH	MAX_DATA_LENGTH	INDEX_LENGTH	DATA_FREE	CREATE_TIME	UPDATE_TIME	CHECK_TIME	CHECKSUM	PARTITION_COMMENT	NODEGROUP	TABLESPACE_NAME
def	test	t1	p0	p0sp0	1	1	RANGE	HASH	year(`purchased`)	to_days(`purchased`)	1990	#	#	#	#	#	#	#	#	#	NULL		default	NULL
def	test	t1	p0	p0sp1	1	2	RANGE	HASH	year(`purchased`)	to_days(`purchased`)	1990	#	#	#	#	#	#	#	#	#	NULL		default	NULL
def	test	t1	p1	p1sp0	2	1	RANGE	HASH	year(`purchased`)	to_days(`purchased`)	2000	#	#	#	#	#	#	#	#	#	NULL		default	NULL
def	test	t1	p1	p1sp1	2	2	RANGE	HASH	year(`purchased`)	to_days(`purchased`)	2000	#	#	#	#	#	#	#	#	#	NULL		default	NULL
def	test	t1	p2	p2sp0	3	1	RANGE	HASH	year(`purchased`)	to_days(`purchased`)	2002	#	#	#	#	#	#	#	#	#	NULL		default	NULL
def	test	t1	p2	p2sp1	3	2	RANGE	HASH	year(`purchased`)	to_days(`purchased`)	2002	#	#	#	#	#	#	#	#	#	NULL		default	NULL
UNLOCK TABLES;
DROP TABLE t1;
SET SESSION debug="-d,fail_add_partition_3";
# Error recovery testing ADD PARTITION
SET SESSION debug="+d,fail_add_partition_2";
CREATE TABLE t1 (id INT, purchased DATE) ENGINE=RocksDB
PARTITION BY RANGE( YEAR(purchased) )
SUBPARTITION BY HASH( TO_DAYS(purchased) )
SUBPARTITIONS 2 (
PARTITION p0 VALUES LESS THAN (1990),
PARTITION p1 VALUES LESS THAN (2000),
PARTITION p2 VALUES LESS THAN (2002) 
);
INSERT INTO t1 VALUES 
(1988, "1988-02-02"), 
(1999, "1999-02-02"),
(2001, "2001-02-02");
# State before failure
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `id` int DEFAULT NULL,
  `purchased` date DEFAULT NULL
) ENGINE=ROCKSDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci
/*!50100 PARTITION BY RANGE (year(`purchased`))
SUBPARTITION BY HASH (to_days(`purchased`))
SUBPARTITIONS 2
(PARTITION p0 VALUES LESS THAN (1990) ENGINE = ROCKSDB,
 PARTITION p1 VALUES LESS THAN (2000) ENGINE = ROCKSDB,
 PARTITION p2 VALUES LESS THAN (2002) ENGINE = ROCKSDB) */
SELECT * FROM t1;
id	purchased
1988	1988-02-02
1999	1999-02-02
2001	2001-02-02
SELECT PARTITION_NAME FROM information_schema.rocksdb_ddl
WHERE TABLE_NAME="t1" ORDER BY PARTITION_NAME;
PARTITION_NAME
p0#SP#p0sp0
p0#SP#p0sp1
p1#SP#p1sp0
p1#SP#p1sp1
p2#SP#p2sp0
p2#SP#p2sp1
SELECT * from information_schema.partitions WHERE TABLE_NAME="t1";
TABLE_CATALOG	TABLE_SCHEMA	TABLE_NAME	PARTITION_NAME	SUBPARTITION_NAME	PARTITION_ORDINAL_POSITION	SUBPARTITION_ORDINAL_POSITION	PARTITION_METHOD	SUBPARTITION_METHOD	PARTITION_EXPRESSION	SUBPARTITION_EXPRESSION	PARTITION_DESCRIPTION	TABLE_ROWS	AVG_ROW_LENGTH	DATA_LENGTH	MAX_DATA_LENGTH	INDEX_LENGTH	DATA_FREE	CREATE_TIME	UPDATE_TIME	CHECK_TIME	CHECKSUM	PARTITION_COMMENT	NODEGROUP	TABLESPACE_NAME
def	test	t1	p0	p0sp0	1	1	RANGE	HASH	year(`purchased`)	to_days(`purchased`)	1990	#	#	#	#	#	#	#	#	#	NULL		default	NULL
def	test	t1	p0	p0sp1	1	2	RANGE	HASH	year(`purchased`)	to_days(`purchased`)	1990	#	#	#	#	#	#	#	#	#	NULL		default	NULL
def	test	t1	p1	p1sp0	2	1	RANGE	HASH	year(`purchased`)	to_days(`purchased`)	2000	#	#	#	#	#	#	#	#	#	NULL		default	NULL
def	test	t1	p1	p1sp1	2	2	RANGE	HASH	year(`purchased`)	to_days(`purchased`)	2000	#	#	#	#	#	#	#	#	#	NULL		default	NULL
def	test	t1	p2	p2sp0	3	1	RANGE	HASH	year(`purchased`)	to_days(`purchased`)	2002	#	#	#	#	#	#	#	#	#	NULL		default	NULL
def	test	t1	p2	p2sp1	3	2	RANGE	HASH	year(`purchased`)	to_days(`purchased`)	2002	#	#	#	#	#	#	#	#	#	NULL		default	NULL
ALTER TABLE t1 ADD PARTITION (PARTITION p5 VALUES LESS THAN (2007), PARTITION p6 VALUES LESS THAN (2008));
ERROR HY000: Unknown error 122
# State after failure
SELECT PARTITION_NAME FROM information_schema.rocksdb_ddl
WHERE TABLE_NAME="t1" ORDER BY PARTITION_NAME;
PARTITION_NAME
p0#SP#p0sp0
p0#SP#p0sp1
p1#SP#p1sp0
p1#SP#p1sp1
p2#SP#p2sp0
p2#SP#p2sp1
SELECT * from information_schema.partitions WHERE TABLE_NAME="t1";
TABLE_CATALOG	TABLE_SCHEMA	TABLE_NAME	PARTITION_NAME	SUBPARTITION_NAME	PARTITION_ORDINAL_POSITION	SUBPARTITION_ORDINAL_POSITION	PARTITION_METHOD	SUBPARTITION_METHOD	PARTITION_EXPRESSION	SUBPARTITION_EXPRESSION	PARTITION_DESCRIPTION	TABLE_ROWS	AVG_ROW_LENGTH	DATA_LENGTH	MAX_DATA_LENGTH	INDEX_LENGTH	DATA_FREE	CREATE_TIME	UPDATE_TIME	CHECK_TIME	CHECKSUM	PARTITION_COMMENT	NODEGROUP	TABLESPACE_NAME
def	test	t1	p0	p0sp0	1	1	RANGE	HASH	year(`purchased`)	to_days(`purchased`)	1990	#	#	#	#	#	#	#	#	#	NULL		default	NULL
def	test	t1	p0	p0sp1	1	2	RANGE	HASH	year(`purchased`)	to_days(`purchased`)	1990	#	#	#	#	#	#	#	#	#	NULL		default	NULL
def	test	t1	p1	p1sp0	2	1	RANGE	HASH	year(`purchased`)	to_days(`purchased`)	2000	#	#	#	#	#	#	#	#	#	NULL		default	NULL
def	test	t1	p1	p1sp1	2	2	RANGE	HASH	year(`purchased`)	to_days(`purchased`)	2000	#	#	#	#	#	#	#	#	#	NULL		default	NULL
def	test	t1	p2	p2sp0	3	1	RANGE	HASH	year(`purchased`)	to_days(`purchased`)	2002	#	#	#	#	#	#	#	#	#	NULL		default	NULL
def	test	t1	p2	p2sp1	3	2	RANGE	HASH	year(`purchased`)	to_days(`purchased`)	2002	#	#	#	#	#	#	#	#	#	NULL		default	NULL
DROP TABLE t1;
# Same test under LOCK TABLE
CREATE TABLE t1 (id INT, purchased DATE) ENGINE=RocksDB
PARTITION BY RANGE( YEAR(purchased) )
SUBPARTITION BY HASH( TO_DAYS(purchased) )
SUBPARTITIONS 2 (
PARTITION p0 VALUES LESS THAN (1990),
PARTITION p1 VALUES LESS THAN (2000),
PARTITION p2 VALUES LESS THAN (2002) 
);
INSERT INTO t1 VALUES 
(1988, "1988-02-02"), 
(1999, "1999-02-02"),
(2001, "2001-02-02");
# State before failure
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `id` int DEFAULT NULL,
  `purchased` date DEFAULT NULL
) ENGINE=ROCKSDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci
/*!50100 PARTITION BY RANGE (year(`purchased`))
SUBPARTITION BY HASH (to_days(`purchased`))
SUBPARTITIONS 2
(PARTITION p0 VALUES LESS THAN (1990) ENGINE = ROCKSDB,
 PARTITION p1 VALUES LESS THAN (2000) ENGINE = ROCKSDB,
 PARTITION p2 VALUES LESS THAN (2002) ENGINE = ROCKSDB) */
SELECT * FROM t1;
id	purchased
1988	1988-02-02
1999	1999-02-02
2001	2001-02-02
SELECT PARTITION_NAME FROM information_schema.rocksdb_ddl
WHERE TABLE_NAME="t1" ORDER BY PARTITION_NAME;
PARTITION_NAME
p0#SP#p0sp0
p0#SP#p0sp1
p1#SP#p1sp0
p1#SP#p1sp1
p2#SP#p2sp0
p2#SP#p2sp1
SELECT * from information_schema.partitions WHERE TABLE_NAME="t1";
TABLE_CATALOG	TABLE_SCHEMA	TABLE_NAME	PARTITION_NAME	SUBPARTITION_NAME	PARTITION_ORDINAL_POSITION	SUBPARTITION_ORDINAL_POSITION	PARTITION_METHOD	SUBPARTITION_METHOD	PARTITION_EXPRESSION	SUBPARTITION_EXPRESSION	PARTITION_DESCRIPTION	TABLE_ROWS	AVG_ROW_LENGTH	DATA_LENGTH	MAX_DATA_LENGTH	INDEX_LENGTH	DATA_FREE	CREATE_TIME	UPDATE_TIME	CHECK_TIME	CHECKSUM	PARTITION_COMMENT	NODEGROUP	TABLESPACE_NAME
def	test	t1	p0	p0sp0	1	1	RANGE	HASH	year(`purchased`)	to_days(`purchased`)	1990	#	#	#	#	#	#	#	#	#	NULL		default	NULL
def	test	t1	p0	p0sp1	1	2	RANGE	HASH	year(`purchased`)	to_days(`purchased`)	1990	#	#	#	#	#	#	#	#	#	NULL		default	NULL
def	test	t1	p1	p1sp0	2	1	RANGE	HASH	year(`purchased`)	to_days(`purchased`)	2000	#	#	#	#	#	#	#	#	#	NULL		default	NULL
def	test	t1	p1	p1sp1	2	2	RANGE	HASH	year(`purchased`)	to_days(`purchased`)	2000	#	#	#	#	#	#	#	#	#	NULL		default	NULL
def	test	t1	p2	p2sp0	3	1	RANGE	HASH	year(`purchased`)	to_days(`purchased`)	2002	#	#	#	#	#	#	#	#	#	NULL		default	NULL
def	test	t1	p2	p2sp1	3	2	RANGE	HASH	year(`purchased`)	to_days(`purchased`)	2002	#	#	#	#	#	#	#	#	#	NULL		default	NULL
LOCK TABLE t1 WRITE;
ALTER TABLE t1 ADD PARTITION (PARTITION p5 VALUES LESS THAN (2007), PARTITION p6 VALUES LESS THAN (2008));
ERROR HY000: Unknown error 122
# State after failure
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `id` int DEFAULT NULL,
  `purchased` date DEFAULT NULL
) ENGINE=ROCKSDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci
/*!50100 PARTITION BY RANGE (year(`purchased`))
SUBPARTITION BY HASH (to_days(`purchased`))
SUBPARTITIONS 2
(PARTITION p0 VALUES LESS THAN (1990) ENGINE = ROCKSDB,
 PARTITION p1 VALUES LESS THAN (2000) ENGINE = ROCKSDB,
 PARTITION p2 VALUES LESS THAN (2002) ENGINE = ROCKSDB) */
SELECT * FROM t1;
id	purchased
1988	1988-02-02
1999	1999-02-02
2001	2001-02-02
SELECT PARTITION_NAME FROM information_schema.rocksdb_ddl
WHERE TABLE_NAME="t1" ORDER BY PARTITION_NAME;
PARTITION_NAME
p0#SP#p0sp0
p0#SP#p0sp1
p1#SP#p1sp0
p1#SP#p1sp1
p2#SP#p2sp0
p2#SP#p2sp1
SELECT * from information_schema.partitions WHERE TABLE_NAME="t1";
TABLE_CATALOG	TABLE_SCHEMA	TABLE_NAME	PARTITION_NAME	SUBPARTITION_NAME	PARTITION_ORDINAL_POSITION	SUBPARTITION_ORDINAL_POSITION	PARTITION_METHOD	SUBPARTITION_METHOD	PARTITION_EXPRESSION	SUBPARTITION_EXPRESSION	PARTITION_DESCRIPTION	TABLE_ROWS	AVG_ROW_LENGTH	DATA_LENGTH	MAX_DATA_LENGTH	INDEX_LENGTH	DATA_FREE	CREATE_TIME	UPDATE_TIME	CHECK_TIME	CHECKSUM	PARTITION_COMMENT	NODEGROUP	TABLESPACE_NAME
def	test	t1	p0	p0sp0	1	1	RANGE	HASH	year(`purchased`)	to_days(`purchased`)	1990	#	#	#	#	#	#	#	#	#	NULL		default	NULL
def	test	t1	p0	p0sp1	1	2	RANGE	HASH	year(`purchased`)	to_days(`purchased`)	1990	#	#	#	#	#	#	#	#	#	NULL		default	NULL
def	test	t1	p1	p1sp0	2	1	RANGE	HASH	year(`purchased`)	to_days(`purchased`)	2000	#	#	#	#	#	#	#	#	#	NULL		default	NULL
def	test	t1	p1	p1sp1	2	2	RANGE	HASH	year(`purchased`)	to_days(`purchased`)	2000	#	#	#	#	#	#	#	#	#	NULL		default	NULL
def	test	t1	p2	p2sp0	3	1	RANGE	HASH	year(`purchased`)	to_days(`purchased`)	2002	#	#	#	#	#	#	#	#	#	NULL		default	NULL
def	test	t1	p2	p2sp1	3	2	RANGE	HASH	year(`purchased`)	to_days(`purchased`)	2002	#	#	#	#	#	#	#	#	#	NULL		default	NULL
UNLOCK TABLES;
DROP TABLE t1;
SET SESSION debug="-d,fail_add_partition_2";
SET SESSION debug="+d,fail_add_partition_3";
CREATE TABLE t1 (id INT, purchased DATE) ENGINE=RocksDB
PARTITION BY RANGE( YEAR(purchased) )
SUBPARTITION BY HASH( TO_DAYS(purchased) )
SUBPARTITIONS 2 (
PARTITION p0 VALUES LESS THAN (1990),
PARTITION p1 VALUES LESS THAN (2000),
PARTITION p2 VALUES LESS THAN (2002) 
);
INSERT INTO t1 VALUES 
(1988, "1988-02-02"), 
(1999, "1999-02-02"),
(2001, "2001-02-02");
# State before failure
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `id` int DEFAULT NULL,
  `purchased` date DEFAULT NULL
) ENGINE=ROCKSDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci
/*!50100 PARTITION BY RANGE (year(`purchased`))
SUBPARTITION BY HASH (to_days(`purchased`))
SUBPARTITIONS 2
(PARTITION p0 VALUES LESS THAN (1990) ENGINE = ROCKSDB,
 PARTITION p1 VALUES LESS THAN (2000) ENGINE = ROCKSDB,
 PARTITION p2 VALUES LESS THAN (2002) ENGINE = ROCKSDB) */
SELECT * FROM t1;
id	purchased
1988	1988-02-02
1999	1999-02-02
2001	2001-02-02
SELECT PARTITION_NAME FROM information_schema.rocksdb_ddl
WHERE TABLE_NAME="t1" ORDER BY PARTITION_NAME;
PARTITION_NAME
p0#SP#p0sp0
p0#SP#p0sp1
p1#SP#p1sp0
p1#SP#p1sp1
p2#SP#p2sp0
p2#SP#p2sp1
SELECT * from information_schema.partitions WHERE TABLE_NAME="t1";
TABLE_CATALOG	TABLE_SCHEMA	TABLE_NAME	PARTITION_NAME	SUBPARTITION_NAME	PARTITION_ORDINAL_POSITION	SUBPARTITION_ORDINAL_POSITION	PARTITION_METHOD	SUBPARTITION_METHOD	PARTITION_EXPRESSION	SUBPARTITION_EXPRESSION	PARTITION_DESCRIPTION	TABLE_ROWS	AVG_ROW_LENGTH	DATA_LENGTH	MAX_DATA_LENGTH	INDEX_LENGTH	DATA_FREE	CREATE_TIME	UPDATE_TIME	CHECK_TIME	CHECKSUM	PARTITION_COMMENT	NODEGROUP	TABLESPACE_NAME
def	test	t1	p0	p0sp0	1	1	RANGE	HASH	year(`purchased`)	to_days(`purchased`)	1990	#	#	#	#	#	#	#	#	#	NULL		default	NULL
def	test	t1	p0	p0sp1	1	2	RANGE	HASH	year(`purchased`)	to_days(`purchased`)	1990	#	#	#	#	#	#	#	#	#	NULL		default	NULL
def	test	t1	p1	p1sp0	2	1	RANGE	HASH	year(`purchased`)	to_days(`purchased`)	2000	#	#	#	#	#	#	#	#	#	NULL		default	NULL
def	test	t1	p1	p1sp1	2	2	RANGE	HASH	year(`purchased`)	to_days(`purchased`)	2000	#	#	#	#	#	#	#	#	#	NULL		default	NULL
def	test	t1	p2	p2sp0	3	1	RANGE	HASH	year(`purchased`)	to_days(`purchased`)	2002	#	#	#	#	#	#	#	#	#	NULL		default	NULL
def	test	t1	p2	p2sp1	3	2	RANGE	HASH	year(`purchased`)	to_days(`purchased`)	2002	#	#	#	#	#	#	#	#	#	NULL		default	NULL
ALTER TABLE t1 ADD PARTITION (PARTITION p5 VALUES LESS THAN (2007), PARTITION p6 VALUES LESS THAN (2008));
ERROR HY000: Unknown error 122
# State after failure
SELECT PARTITION_NAME FROM information_schema.rocksdb_ddl
WHERE TABLE_NAME="t1" ORDER BY PARTITION_NAME;
PARTITION_NAME
p0#SP#p0sp0
p0#SP#p0sp1
p1#SP#p1sp0
p1#SP#p1sp1
p2#SP#p2sp0
p2#SP#p2sp1
SELECT * from information_schema.partitions WHERE TABLE_NAME="t1";
TABLE_CATALOG	TABLE_SCHEMA	TABLE_NAME	PARTITION_NAME	SUBPARTITION_NAME	PARTITION_ORDINAL_POSITION	SUBPARTITION_ORDINAL_POSITION	PARTITION_METHOD	SUBPARTITION_METHOD	PARTITION_EXPRESSION	SUBPARTITION_EXPRESSION	PARTITION_DESCRIPTION	TABLE_ROWS	AVG_ROW_LENGTH	DATA_LENGTH	MAX_DATA_LENGTH	INDEX_LENGTH	DATA_FREE	CREATE_TIME	UPDATE_TIME	CHECK_TIME	CHECKSUM	PARTITION_COMMENT	NODEGROUP	TABLESPACE_NAME
def	test	t1	p0	p0sp0	1	1	RANGE	HASH	year(`purchased`)	to_days(`purchased`)	1990	#	#	#	#	#	#	#	#	#	NULL		default	NULL
def	test	t1	p0	p0sp1	1	2	RANGE	HASH	year(`purchased`)	to_days(`purchased`)	1990	#	#	#	#	#	#	#	#	#	NULL		default	NULL
def	test	t1	p1	p1sp0	2	1	RANGE	HASH	year(`purchased`)	to_days(`purchased`)	2000	#	#	#	#	#	#	#	#	#	NULL		default	NULL
def	test	t1	p1	p1sp1	2	2	RANGE	HASH	year(`purchased`)	to_days(`purchased`)	2000	#	#	#	#	#	#	#	#	#	NULL		default	NULL
def	test	t1	p2	p2sp0	3	1	RANGE	HASH	year(`purchased`)	to_days(`purchased`)	2002	#	#	#	#	#	#	#	#	#	NULL		default	NULL
def	test	t1	p2	p2sp1	3	2	RANGE	HASH	year(`purchased`)	to_days(`purchased`)	2002	#	#	#	#	#	#	#	#	#	NULL		default	NULL
DROP TABLE t1;
# Same test under LOCK TABLE
CREATE TABLE t1 (id INT, purchased DATE) ENGINE=RocksDB
PARTITION BY RANGE( YEAR(purchased) )
SUBPARTITION BY HASH( TO_DAYS(purchased) )
SUBPARTITIONS 2 (
PARTITION p0 VALUES LESS THAN (1990),
PARTITION p1 VALUES LESS THAN (2000),
PARTITION p2 VALUES LESS THAN (2002) 
);
INSERT INTO t1 VALUES 
(1988, "1988-02-02"), 
(1999, "1999-02-02"),
(2001, "2001-02-02");
# State before failure
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `id` int DEFAULT NULL,
  `purchased` date DEFAULT NULL
) ENGINE=ROCKSDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci
/*!50100 PARTITION BY RANGE (year(`purchased`))
SUBPARTITION BY HASH (to_days(`purchased`))
SUBPARTITIONS 2
(PARTITION p0 VALUES LESS THAN (1990) ENGINE = ROCKSDB,
 PARTITION p1 VALUES LESS THAN (2000) ENGINE = ROCKSDB,
 PARTITION p2 VALUES LESS THAN (2002) ENGINE = ROCKSDB) */
SELECT * FROM t1;
id	purchased
1988	1988-02-02
1999	1999-02-02
2001	2001-02-02
SELECT PARTITION_NAME FROM information_schema.rocksdb_ddl
WHERE TABLE_NAME="t1" ORDER BY PARTITION_NAME;
PARTITION_NAME
p0#SP#p0sp0
p0#SP#p0sp1
p1#SP#p1sp0
p1#SP#p1sp1
p2#SP#p2sp0
p2#SP#p2sp1
SELECT * from information_schema.partitions WHERE TABLE_NAME="t1";
TABLE_CATALOG	TABLE_SCHEMA	TABLE_NAME	PARTITION_NAME	SUBPARTITION_NAME	PARTITION_ORDINAL_POSITION	SUBPARTITION_ORDINAL_POSITION	PARTITION_METHOD	SUBPARTITION_METHOD	PARTITION_EXPRESSION	SUBPARTITION_EXPRESSION	PARTITION_DESCRIPTION	TABLE_ROWS	AVG_ROW_LENGTH	DATA_LENGTH	MAX_DATA_LENGTH	INDEX_LENGTH	DATA_FREE	CREATE_TIME	UPDATE_TIME	CHECK_TIME	CHECKSUM	PARTITION_COMMENT	NODEGROUP	TABLESPACE_NAME
def	test	t1	p0	p0sp0	1	1	RANGE	HASH	year(`purchased`)	to_days(`purchased`)	1990	#	#	#	#	#	#	#	#	#	NULL		default	NULL
def	test	t1	p0	p0sp1	1	2	RANGE	HASH	year(`purchased`)	to_days(`purchased`)	1990	#	#	#	#	#	#	#	#	#	NULL		default	NULL
def	test	t1	p1	p1sp0	2	1	RANGE	HASH	year(`purchased`)	to_days(`purchased`)	2000	#	#	#	#	#	#	#	#	#	NULL		default	NULL
def	test	t1	p1	p1sp1	2	2	RANGE	HASH	year(`purchased`)	to_days(`purchased`)	2000	#	#	#	#	#	#	#	#	#	NULL		default	NULL
def	test	t1	p2	p2sp0	3	1	RANGE	HASH	year(`purchased`)	to_days(`purchased`)	2002	#	#	#	#	#	#	#	#	#	NULL		default	NULL
def	test	t1	p2	p2sp1	3	2	RANGE	HASH	year(`purchased`)	to_days(`purchased`)	2002	#	#	#	#	#	#	#	#	#	NULL		default	NULL
LOCK TABLE t1 WRITE;
ALTER TABLE t1 ADD PARTITION (PARTITION p5 VALUES LESS THAN (2007), PARTITION p6 VALUES LESS THAN (2008));
ERROR HY000: Unknown error 122
# State after failure
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `id` int DEFAULT NULL,
  `purchased` date DEFAULT NULL
) ENGINE=ROCKSDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci
/*!50100 PARTITION BY RANGE (year(`purchased`))
SUBPARTITION BY HASH (to_days(`purchased`))
SUBPARTITIONS 2
(PARTITION p0 VALUES LESS THAN (1990) ENGINE = ROCKSDB,
 PARTITION p1 VALUES LESS THAN (2000) ENGINE = ROCKSDB,
 PARTITION p2 VALUES LESS THAN (2002) ENGINE = ROCKSDB) */
SELECT * FROM t1;
id	purchased
1988	1988-02-02
1999	1999-02-02
2001	2001-02-02
SELECT PARTITION_NAME FROM information_schema.rocksdb_ddl
WHERE TABLE_NAME="t1" ORDER BY PARTITION_NAME;
PARTITION_NAME
p0#SP#p0sp0
p0#SP#p0sp1
p1#SP#p1sp0
p1#SP#p1sp1
p2#SP#p2sp0
p2#SP#p2sp1
SELECT * from information_schema.partitions WHERE TABLE_NAME="t1";
TABLE_CATALOG	TABLE_SCHEMA	TABLE_NAME	PARTITION_NAME	SUBPARTITION_NAME	PARTITION_ORDINAL_POSITION	SUBPARTITION_ORDINAL_POSITION	PARTITION_METHOD	SUBPARTITION_METHOD	PARTITION_EXPRESSION	SUBPARTITION_EXPRESSION	PARTITION_DESCRIPTION	TABLE_ROWS	AVG_ROW_LENGTH	DATA_LENGTH	MAX_DATA_LENGTH	INDEX_LENGTH	DATA_FREE	CREATE_TIME	UPDATE_TIME	CHECK_TIME	CHECKSUM	PARTITION_COMMENT	NODEGROUP	TABLESPACE_NAME
def	test	t1	p0	p0sp0	1	1	RANGE	HASH	year(`purchased`)	to_days(`purchased`)	1990	#	#	#	#	#	#	#	#	#	NULL		default	NULL
def	test	t1	p0	p0sp1	1	2	RANGE	HASH	year(`purchased`)	to_days(`purchased`)	1990	#	#	#	#	#	#	#	#	#	NULL		default	NULL
def	test	t1	p1	p1sp0	2	1	RANGE	HASH	year(`purchased`)	to_days(`purchased`)	2000	#	#	#	#	#	#	#	#	#	NULL		default	NULL
def	test	t1	p1	p1sp1	2	2	RANGE	HASH	year(`purchased`)	to_days(`purchased`)	2000	#	#	#	#	#	#	#	#	#	NULL		default	NULL
def	test	t1	p2	p2sp0	3	1	RANGE	HASH	year(`purchased`)	to_days(`purchased`)	2002	#	#	#	#	#	#	#	#	#	NULL		default	NULL
def	test	t1	p2	p2sp1	3	2	RANGE	HASH	year(`purchased`)	to_days(`purchased`)	2002	#	#	#	#	#	#	#	#	#	NULL		default	NULL
UNLOCK TABLES;
DROP TABLE t1;
SET SESSION debug="-d,fail_add_partition_3";
