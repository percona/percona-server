set session debug= "+d,myrocks_enable_unknown_collation_index_only_scans";
create table t (id int not null auto_increment primary key,
c varchar(8) CHARACTER SET utf8mb3 COLLATE utf8_general_ci,
key sk (c)) engine=rocksdb;
Warnings:
Warning	1287	'utf8mb3' is deprecated and will be removed in a future release. Please use utf8mb4 instead
Warning	3778	'utf8_general_ci' is a collation of the deprecated character set UTF8MB3. Please consider using UTF8MB4 with an appropriate collation instead.
insert into t (c) values ('☀'), ('ß');
explain select c from t;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	t	NULL	index	NULL	sk	27	NULL	#	100.00	Using index
Warnings:
Note	1003	/* select#1 */ select `test`.`t`.`c` AS `c` from `test`.`t`
select c from t;
c
ß
☀
drop table t;
set session debug= "-d,myrocks_enable_unknown_collation_index_only_scans";
create table t (id int not null auto_increment,
c1 varchar(1) CHARACTER SET latin1 COLLATE latin1_swedish_ci,
c2 char(1) CHARACTER SET latin1 COLLATE latin1_general_ci,
primary key (id),
key sk1 (c1),
key sk2 (c2)) engine=rocksdb;
explain select hex(c1) from t order by c1;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	t	NULL	index	NULL	sk1	4	NULL	#	100.00	Using index
Warnings:
Note	1003	/* select#1 */ select hex(`test`.`t`.`c1`) AS `hex(c1)` from `test`.`t` order by `test`.`t`.`c1`
explain select hex(c1) from t IGNORE INDEX (sk1) order by c1;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	t	NULL	ALL	NULL	NULL	NULL	NULL	#	100.00	Using filesort
Warnings:
Note	1003	/* select#1 */ select hex(`test`.`t`.`c1`) AS `hex(c1)` from `test`.`t` IGNORE INDEX (`sk1`) order by `test`.`t`.`c1`
explain select hex(c2) from t order by c2;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	t	NULL	index	NULL	sk2	2	NULL	#	100.00	Using index
Warnings:
Note	1003	/* select#1 */ select hex(`test`.`t`.`c2`) AS `hex(c2)` from `test`.`t` order by `test`.`t`.`c2`
explain select hex(c2) from t IGNORE INDEX (sk1) order by c2;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	t	NULL	index	NULL	sk2	2	NULL	#	100.00	Using index
Warnings:
Note	1003	/* select#1 */ select hex(`test`.`t`.`c2`) AS `hex(c2)` from `test`.`t` IGNORE INDEX (`sk1`) order by `test`.`t`.`c2`
truncate t;
insert into t (c1, c2) values ('Asdf    ', 'Asdf    ');
ERROR 22001: Data too long for column 'c1' at row 1
select char_length(c1), char_length(c2), c1, c2 from t;
char_length(c1)	char_length(c2)	c1	c2
set @orig_sql_mode=@@session.sql_mode;
set session sql_mode="";
insert into t (c1, c2) values ('Asdf    ', 'Asdf    ');
Warnings:
Warning	1265	Data truncated for column 'c1' at row 1
Warning	1265	Data truncated for column 'c2' at row 1
set session sql_mode=@orig_sql_mode;
select char_length(c1), char_length(c2), c1, c2 from t;
char_length(c1)	char_length(c2)	c1	c2
1	1	A	A
drop table t;
create table t (id int not null auto_increment,
c2 char(255) CHARACTER SET latin1 COLLATE latin1_general_ci,
primary key (id),
unique key sk2 (c2)) engine=rocksdb;
insert into t (c2) values ('Asdf');
insert into t (c2) values ('asdf ');
ERROR 23000: Duplicate entry 'asdf' for key 't.sk2'
drop table t;
create table t (id int not null auto_increment,
c1 varchar(256) CHARACTER SET latin1 COLLATE latin1_swedish_ci,
primary key (id),
unique key sk1 (c1)) engine=rocksdb;
insert into t (c1) values ('Asdf');
insert into t (c1) values ('asdf ');
ERROR 23000: Duplicate entry 'asdf ' for key 't.sk1'
insert into t (c1) values ('asdf');
ERROR 23000: Duplicate entry 'asdf' for key 't.sk1'
drop table t;
create table t (id int not null auto_increment,
c1 varchar(256) CHARACTER SET latin1 COLLATE latin1_swedish_ci,
primary key (id),
unique key sk1 (c1(1))) engine=rocksdb;
insert into t (c1) values ('Asdf');
insert into t (c1) values ('bbbb ');
insert into t (c1) values ('a    ');
ERROR 23000: Duplicate entry 'a' for key 't.sk1'
explain select c1 from t;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	t	NULL	ALL	NULL	NULL	NULL	NULL	#	#	NULL
Warnings:
Note	1003	/* select#1 */ select `test`.`t`.`c1` AS `c1` from `test`.`t`
select c1 from t;
c1
Asdf
bbbb 
drop table t;
set session rocksdb_verify_row_debug_checksums = on;
create table t (id int primary key, email varchar(100), KEY email_i (email(30))) engine=rocksdb default charset=latin1;
insert into t values (1, '                                  a');
explain select 'email_i' as index_name, count(*) AS count from t force index(email_i);
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	t	NULL	index	NULL	email_i	33	NULL	#	#	Using index
Warnings:
Note	1003	/* select#1 */ select 'email_i' AS `index_name`,count(0) AS `count` from `test`.`t` FORCE INDEX (`email_i`)
select 'email_i' as index_name, count(*) AS count from t force index(email_i);
index_name	count
email_i	1
drop table t;
create table t (id int primary key, email varchar(767), KEY email_i (email)) engine=rocksdb default charset=latin1;
insert into t values (1, REPEAT('a', 700));
select 'email_i' as index_name, count(*) AS count from t force index(email_i);
index_name	count
email_i	1
drop table t;
