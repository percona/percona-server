--source include/have_rocksdb.inc

# Create table with 5 indexes
create table t0(
       id bigint not null primary key, 
       i1 bigint, #unique
       i2 bigint, #repeating
       c1 varchar(20), #unique
       c2 varchar(20), #repeating
       index t0_1(id, i1),
       index t0_2(i1, i2),
       index t0_3(i2, i1),
       index t0_4(c1, c2),
       index t0_5(c2, c1)
) engine=rocksdb;
--disable_query_log
let $i=0;
while ($i<10000)
{
  inc $i;
  eval insert t0(id, i1, i2, c1, c2) values($i, $i, $i div 10, $i, $i div 10);
}
--enable_query_log

# Calculate stats on table t0
optimize table t0;
analyze table t0;
show index in t0;
select table_name, table_rows from information_schema.tables where table_schema = database() and table_name = 't0';

--echo restarting...
--source include/restart_mysqld.inc

# Show stats of t0 after the restart
show index in t0;
select table_name, table_rows from information_schema.tables where table_schema = database() and table_name = 't0';

# Create table with a key of 7 columns
create table t1 (a int, b int, c int, d int, e int, f int, g int,
                 primary key (a), key (c, b, a, d, e, f, g))
                 engine=rocksdb;
--disable_query_log
let $i=0;
while ($i<100)
{
  inc $i;
  eval insert t1 values($i, $i div 10, 1, 1, 1, 1, 1);
}
--enable_query_log

set @@global.rocksdb_force_flush_memtable_now = true;
# Calculate stats on table t1
analyze table t1;

# Cardinality of key c should be 1 for c, 10 for b, 100 for a and the other fields.
--echo cardinality of the columns after 'a' must be equal to the cardinality of column 'a'

select table_name, index_name, column_name, seq_in_index, cardinality from information_schema.statistics where table_name='t1';

select cardinality into @c from information_schema.statistics where table_name='t1' and index_name='c' and column_name='a';

select column_name, cardinality, cardinality = @c from information_schema.statistics where table_name='t1' and index_name='c' and seq_in_index > 3;

drop table t0, t1;

