--source include/have_rocksdb.inc

#
# SELECT COUNT(*) FOR UPDATE as COUNT(*) has its own separate code path
#

--enable_connect_log

--source include/count_sessions.inc

CREATE TABLE t1 (pk int PRIMARY KEY, a int, key sk(a)) ENGINE=rocksdb;
INSERT INTO t1 values (1, 1), (2, 2), (3, 3);

# PRIMARY KEY
--connect (con1,localhost,root,,)
SET SESSION TRANSACTION ISOLATION LEVEL READ COMMITTED;
BEGIN;
--let $assert_text = t1 should have 3 rows
--let $assert_cond = [SELECT COUNT(*) FROM t1 FORCE INDEX (PRIMARY) FOR UPDATE] = 3
--source include/assert.inc

--connection default
SET lock_wait_timeout = 1;

# Should still be able to select 
--let $assert_text = t1 should have 3 rows
--let $assert_cond = [SELECT COUNT(*) FROM t1 FORCE INDEX (PRIMARY)] = 3
--source include/assert.inc


# ... but not with LOCK IN SHARE MODE / FOR UPDATE
--error ER_LOCK_WAIT_TIMEOUT
SELECT COUNT(*) FROM t1 FORCE INDEX (PRIMARY) LOCK IN SHARE MODE;

--error ER_LOCK_WAIT_TIMEOUT
SELECT COUNT(*) FROM t1 FORCE INDEX (PRIMARY) FOR UPDATE;

--connection con1
COMMIT;
--let $assert_text = t1 should have 3 rows
--let $assert_cond = [SELECT COUNT(*) FROM t1 FORCE INDEX (PRIMARY)] = 3
--source include/assert.inc

--connection default
--let $assert_text = t1 should have 3 rows
--let $assert_cond = [SELECT COUNT(*) FROM t1 FORCE INDEX (PRIMARY)] = 3
--source include/assert.inc

# SECONDARY KEY
--connection con1
BEGIN;
--let $assert_text = t1 should have 3 rows
--let $assert_cond = [SELECT COUNT(*) FROM t1 FORCE INDEX (sk) FOR UPDATE] = 3
--source include/assert.inc

--connection default
SET lock_wait_timeout = 1;

# Should still be able to select 
--let $assert_text = t1 should have 3 rows
--let $assert_cond = [SELECT COUNT(*) FROM t1 FORCE INDEX (sk)] = 3
--source include/assert.inc

# ... but not with LOCK IN SHARE MODE / FOR UPDATE
--error ER_LOCK_WAIT_TIMEOUT
SELECT COUNT(*) FROM t1 FORCE INDEX (sk) LOCK IN SHARE MODE;

--error ER_LOCK_WAIT_TIMEOUT
SELECT COUNT(*) FROM t1 FORCE INDEX (sk) FOR UPDATE;

--connection con1
COMMIT;
--let $assert_text = t1 should have 3 rows
--let $assert_cond = [SELECT COUNT(*) FROM t1 FORCE INDEX (sk)] = 3
--source include/assert.inc

--disconnect con1
--connection default
--let $assert_text = t1 should have 3 rows
--let $assert_cond = [SELECT COUNT(*) FROM t1 FORCE INDEX (sk)] = 3
--source include/assert.inc

# Cleanup

DROP TABLE t1;

--source include/wait_until_count_sessions.inc
