--source include/have_rocksdb.inc
--source include/not_parallel.inc
--source include/count_sessions.inc

connect (con1,localhost,root,,);
####################################################
### Case 1: tmp table create/drop
####################################################
--echo Case 1: tmp table create/drop
connection con1;
use test;
create temporary table tmp1(a int primary key) engine = "ROCKSDB";
insert into tmp1 values(1);
insert into tmp1 values(2);
select * from tmp1;
select table_schema, substring(table_name, 1, 4), index_name from information_schema.rocksdb_ddl where CF = "__tmp__";
drop table tmp1;

create temporary table tmp1(a int) engine = "ROCKSDB";
insert into tmp1 values(1);
select table_schema, substring(table_name, 1, 4), index_name from information_schema.rocksdb_ddl where CF = "__tmp__";
disconnect con1;

connection default;
--source include/wait_until_count_sessions.inc

select table_schema, substring(table_name, 1, 4), index_name from information_schema.rocksdb_ddl where CF = "__tmp__";

####################################################
### Case 2: Verify tmp tables index numbers are different from regular tables
####################################################
--echo Case 2: Verify tmp tables index numbers are different from regular tables
create temporary table tmp1(a int primary key) engine = "ROCKSDB";
create table t1(a int primary key) engine = "ROCKSDB";
--let $start_tmp_cf_index_number = query_get_value(select max(index_number) as Value from information_schema.rocksdb_ddl where CF = "__tmp__", Value, 1)
--let $start_default_cf_index_number = query_get_value(select max(index_number) as Value from information_schema.rocksdb_ddl where CF = "default", Value, 1)
create temporary table tmp2(a int primary key) engine = "ROCKSDB";
create temporary table tmp3(a int primary key, b int, index (b)) engine = "ROCKSDB";

create table t2(a int primary key) engine = "ROCKSDB";
create table t3(a int primary key, b int, index (b) COMMENT 'cfname=test_cf') engine = "ROCKSDB";
create table t4(a int primary key, b int, index (b)) engine = "ROCKSDB";

--let $end_tmp_cf_index_number = query_get_value(select max(index_number) as Value from information_schema.rocksdb_ddl where CF = "__tmp__", Value, 1)
--let $end_default_cf_index_number = query_get_value(select max(index_number) as Value from information_schema.rocksdb_ddl where CF = "default", Value, 1)
drop table t1;
drop table t2;
drop table t3;
drop table t4;
drop table tmp1;
drop table tmp2;
drop table tmp3;

--let $assert_text = Number of indexes created in tmp column family should be 3
--let $assert_cond= $end_tmp_cf_index_number - $start_tmp_cf_index_number = 3
--source include/assert.inc

--let $assert_text= Number of indexes created in default column family should be 5
--let $assert_cond= $end_default_cf_index_number - $start_default_cf_index_number = 5
--source include/assert.inc

####################################################
### Case 3: Verify tmp table index number start again after server restart
####################################################
--echo Case 3: Verify tmp table index number start again after server restart
connection default;
create temporary table tmp1(a int primary key) engine = "ROCKSDB";
create table t1(a int primary key) engine = "ROCKSDB";
--let $start_tmp_cf_index_number = query_get_value(select max(index_number) as Value from information_schema.rocksdb_ddl where CF = "__tmp__", Value, 1)
--let $start_default_cf_index_number = query_get_value(select max(index_number) as Value from information_schema.rocksdb_ddl where CF = "default", Value, 1)

--source include/restart_mysqld.inc
--source include/wait_until_connected_again.inc
create temporary table tmp2(a int primary key) engine = "ROCKSDB";
create table t2(a int primary key) engine = "ROCKSDB";

--let $end_tmp_cf_index_number = query_get_value(select max(index_number) as Value from information_schema.rocksdb_ddl where CF = "__tmp__", Value, 1)
--let $end_default_cf_index_number = query_get_value(select max(index_number) as Value from information_schema.rocksdb_ddl where CF = "default", Value, 1)

--let $assert_text = Index number for tmp column family should start again after restart
--let $assert_cond= $end_tmp_cf_index_number - $start_tmp_cf_index_number < 0
--source include/assert.inc

--let $assert_text= Number of indexes created in default column family should be 1
--let $assert_cond= $end_default_cf_index_number - $start_default_cf_index_number = 1
--source include/assert.inc
drop table t1;
drop table t2;
drop table tmp2;

####################################################
### Case 4: Verify tmp tables across different session
####################################################
--echo Case 4: Verify tmp tables across different session
connect (con1,localhost,root,,);
connect (con2,localhost,root,,);
connect (con3,localhost,root,,);
use test;
connection con1;
create temporary table tmp1(a int primary key) engine = "ROCKSDB";
connection con2;
create temporary table tmp1(a int primary key) engine = "ROCKSDB";
connection con3;
create temporary table tmp1(a int primary key) engine = "ROCKSDB";
connection default;
disconnect con1;
disconnect con2;
disconnect con3;
--let $wait_condition= select count(*) = 0 from information_schema.rocksdb_ddl where CF = "__tmp__";
--source include/wait_condition.inc

####################################################
### Case 5: Verify alter tables for regular tables are not landing in tmp column family
####################################################
--echo Case 5: Verify alter tables for regular tables are not landing in tmp column family
connection default;
use test;
create temporary table tmp1(a int primary key) engine = "ROCKSDB";
create table t1 (pk int primary key, a int, c char(8)) engine=rocksdb charset=latin1;
insert into t1 values (1,1,'a'),(2,5,'z');
--let $start_tmp_cf_index_number = query_get_value(select max(index_number) as Value from information_schema.rocksdb_ddl where CF = "__tmp__", Value, 1)
--let $start_default_cf_index_number = query_get_value(select max(index_number) as Value from information_schema.rocksdb_ddl where CF = "default", Value, 1)
alter table t1 add column b int;
alter table t1 alter column a set default '0';
alter table t1 alter a drop default;
alter table t1 change column b b1 char(8) first;
alter table t1 change b1 b int after c;
alter table t1 change b b char(8);
alter table t1 modify column b int;
alter table t1 modify column b char(8) first;
alter table t1 modify column b int after a;
alter table t1 drop column b;
alter table t1 rename to t2;
--let $end_tmp_cf_index_number = query_get_value(select max(index_number) as Value from information_schema.rocksdb_ddl where CF = "__tmp__", Value, 1)
--let $end_default_cf_index_number = query_get_value(select max(index_number) as Value from information_schema.rocksdb_ddl where CF = "default", Value, 1)

--let $assert_text = Number of indexes created in tmp column family should be 0
--let $assert_cond= $end_tmp_cf_index_number - $start_tmp_cf_index_number = 0
--source include/assert.inc

--let $assert_text= Number of indexes created in default column family should be > 0
--let $assert_cond= $end_default_cf_index_number - $start_default_cf_index_number > 0
--source include/assert.inc
drop table t2;
drop table tmp1;
####################################################
### Case 6: Verify alter tables for tmp tables are not landing in default column family
####################################################
--echo Case 6: Verify alter tables for tmp tables are not landing in default column family
connection default;
use test;
create temporary table tmp1 (pk int primary key, a int, c char(8)) engine=rocksdb charset=latin1;
create table t1 (pk int primary key, a int, c char(8)) engine=rocksdb charset=latin1;
--let $start_tmp_cf_index_number = query_get_value(select max(index_number) as Value from information_schema.rocksdb_ddl where CF = "__tmp__", Value, 1)
--let $start_default_cf_index_number = query_get_value(select max(index_number) as Value from information_schema.rocksdb_ddl where CF = "default", Value, 1)
alter table tmp1 add column b int;
show create table tmp1;
alter table tmp1 alter column a set default '0';
show create table tmp1;
alter table tmp1 alter a drop default;
show create table tmp1;
alter table tmp1 change column b b1 char(8) first;
show create table tmp1;
alter table tmp1 change b1 b int after c;
show create table tmp1;
alter table tmp1 change b b char(8);
alter table tmp1 modify column b int;
alter table tmp1 modify column b char(8) first;
alter table tmp1 modify column b int after a;
alter table tmp1 drop column b;
alter table tmp1 rename to tmp2;
--let $end_tmp_cf_index_number = query_get_value(select max(index_number) as Value from information_schema.rocksdb_ddl where CF = "__tmp__", Value, 1)
--let $end_default_cf_index_number = query_get_value(select max(index_number) as Value from information_schema.rocksdb_ddl where CF = "default", Value, 1)

--let $assert_text = Number of indexes created in tmp column family should be  > 0
--let $assert_cond= $end_tmp_cf_index_number - $start_tmp_cf_index_number > 0
--source include/assert.inc

--let $assert_text= Number of indexes created in default column family should be = 0
--let $assert_cond= $end_default_cf_index_number - $start_default_cf_index_number = 0
--source include/assert.inc
drop table t1;
drop table tmp2;

####################################################
### Case 7: Create temp table and regular table with same name
####################################################
--echo Case 7:  Create temp table and regular table with same name
connection default;
create temporary table t1 (pk int primary key) engine=rocksdb charset=latin1;
insert into t1 values(1);
create table t1 (pk int primary key) engine=rocksdb charset=latin1;
insert into t1 values(2);
select * from t1;
show create table t1;
drop temporary table t1;
show create table t1;
select * from t1;
drop table t1;

create temporary table t1 (pk int primary key) engine=rocksdb charset=latin1;
create table t1 (pk int primary key) engine=rocksdb charset=latin1;
show create table t1;
drop table t1;
show create table t1;
drop table t1;

create temporary table t1 (pk int primary key) engine=rocksdb charset=latin1;
create table t1 (pk int primary key) engine=rocksdb charset=latin1;
show create table t1;
drop table t1;
show create table t1;
drop table t1;

####################################################
### Case 8: Validate all names used for tmp tables are restricted
####################################################
--echo Case 8: Validate all names used for tmp tables are restricted
--error ER_WRONG_ARGUMENTS
create table t1(a int primary key, b int, index (b) COMMENT 'cfname=__system__') engine = "ROCKSDB";
--error ER_WRONG_ARGUMENTS
create table t1(a int primary key, b int, index (b) COMMENT 'cfname=__tmp__') engine = "ROCKSDB";
--error ER_WRONG_ARGUMENTS
create table t1(a int primary key, b int, index (b) COMMENT 'cfname=__tmp_system__') engine = "ROCKSDB";
--error ER_WRONG_ARGUMENTS
create temporary table t1(a int primary key, b int, index (b) COMMENT 'cfname=__system__') engine = "ROCKSDB";
--error ER_WRONG_ARGUMENTS
create temporary table t1(a int primary key, b int, index (b) COMMENT 'cfname=__tmp__') engine = "ROCKSDB";
--error ER_WRONG_ARGUMENTS
create temporary table t1(a int primary key, b int, index (b) COMMENT 'cfname=__tmp_system__') engine = "ROCKSDB";
--error ER_WRONG_ARGUMENTS
create temporary table t1(a int primary key, b int, index (b) COMMENT 'cfname=test_cf') engine = "ROCKSDB";
--error ER_WRONG_ARGUMENTS
--error 1064
create database #sqltmp;
--error 1064
create table #sql_1 (pk int primary key) engine=rocksdb charset=latin1;
