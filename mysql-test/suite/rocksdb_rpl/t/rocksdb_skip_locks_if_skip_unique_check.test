--source include/have_binlog_format_row.inc
--source include/have_rocksdb.inc
--source include/master-slave.inc
--source include/count_sessions.inc

--source include/rpl_connection_master.inc
create table t1 (a int primary key, b int) engine = rocksdb;
set @@unique_checks = 0;
insert into t1 values(1, 1);
insert into t1 values(2, 2);
--source include/sync_slave_sql_with_master.inc

--source include/rpl_connection_slave.inc
begin;
update t1 set b = 20 where a = 2;

--source include/rpl_connection_master.inc
set @@unique_checks = 0;
insert into t1 values(2, 200);

--source include/rpl_connection_slave.inc
let $wait_condition=
    select count(*)= 1 from information_schema.processlist
      where state = 'Waiting for row lock';
--source include/wait_condition.inc
rollback;


# Now let's check if locks are not taken when # rocksdb_skip_locks_if_skip_unique_check is enabled
--source include/rpl_connection_slave.inc
set @@global.rocksdb_skip_locks_if_skip_unique_check = 1;
stop replica; start replica;
begin;
update t1 set b = 10 where a = 1;

--source include/rpl_connection_master.inc
set @@unique_checks = 0;
insert into t1 values(1, 100);
--source include/sync_slave_sql_with_master.inc

--source include/rpl_connection_slave.inc
rollback;
select * from t1;
set @@global.rocksdb_skip_locks_if_skip_unique_check = 0;

--source include/rpl_connection_master.inc
drop table t1;
--source include/sync_slave_sql_with_master.inc

--source include/rpl_end.inc

--source include/wait_until_count_sessions.inc
