#################
# Initialization
#################
include/master-slave.inc
Warnings:
Note	####	Sending passwords in plain text without SSL/TLS is extremely insecure.
Note	####	Storing MySQL user name or password information in the master info repository is not secure and is therefore not recommended. Please consider using the USER and PASSWORD connection options for START SLAVE; see the 'START SLAVE Syntax' in the MySQL Manual for more information.
[connection master]
connection slave;
call mtr.add_suppression("Event crc check failed! Most likely there is event corruption");
include/stop_slave.inc
#####################################################
# Part 1: unencrypted master
#####################################################
connection master;
call mtr.add_suppression("Got fatal error 1236 from master when reading data from binary log: 'event read from binlog did not pass crc check");
call mtr.add_suppression("Event crc check failed! Most likely there is event corruption");
call mtr.add_suppression("Error reading GTIDs from binary log");
CREATE TABLE table1_no_encryption (
pk INT AUTO_INCREMENT PRIMARY KEY,
ts TIMESTAMP NULL,
b BLOB
);
INSERT INTO table1_no_encryption VALUES (NULL,NOW(),'data_no_encryption');
INSERT INTO table1_no_encryption SELECT NULL,NOW(),b FROM table1_no_encryption;
FLUSH BINARY LOGS;
SET binlog_format=ROW;
INSERT INTO table1_no_encryption SELECT NULL,NOW(),b FROM table1_no_encryption;
INSERT INTO table1_no_encryption SELECT NULL,NOW(),b FROM table1_no_encryption;
# Make sure that binary logs are not encrypted
FOUND /table1_no_encryption/ in master-bin.0*
include/save_master_pos.inc
connection master;
#####################################################
# Part 2: restart master, now with binlog encryption
#####################################################
include/rpl_restart_server.inc [server_number=1]
connection server_1;
connection master;
connection server_1;
connection default;
connection master;
connection master1;
connection server_1;
connection server_1_1;
connection default;
connection master;
connection master1;
connection server_1;
connection server_1_1;
connection server_1;
connection master;
connection master;
CREATE TABLE table2_to_encrypt (
pk INT AUTO_INCREMENT PRIMARY KEY,
ts TIMESTAMP NULL,
b BLOB
);
INSERT INTO table2_to_encrypt VALUES (NULL,NOW(),'data_to_encrypt');
INSERT INTO table2_to_encrypt SELECT NULL,NOW(),b FROM table2_to_encrypt;
FLUSH BINARY LOGS;
SET binlog_format=ROW;
INSERT INTO table2_to_encrypt SELECT NULL,NOW(),b FROM table2_to_encrypt;
INSERT INTO table2_to_encrypt SELECT NULL,NOW(),b FROM table2_to_encrypt;
# Make sure that binary logs are encrypted
NOT FOUND /table2_to_encrypt/ in master-bin.0*
#####################################################
# Part 3: restart master again without encryption
#####################################################
call mtr.add_suppression("Failed to fetch percona_binlog key \\(version 1\\) from keyring and thus failed to initialize binlog encryption.");
call mtr.add_suppression("Error initializing decryption while reading GTIDs from binary log");
call mtr.add_suppression("Found invalid Format description event in binary log");
include/rpl_restart_server.inc [server_number=1]
connection server_1;
connection master;
connection server_1;
connection default;
connection master;
connection master1;
connection server_1;
connection server_1_1;
connection default;
connection master;
connection master1;
connection server_1;
connection server_1_1;
connection server_1;
connection master;
connection master;
CREATE TABLE table3_no_encryption (
pk INT AUTO_INCREMENT PRIMARY KEY,
ts TIMESTAMP NULL,
b BLOB
);
INSERT INTO table3_no_encryption VALUES (NULL,NOW(),'data_no_encryption');
INSERT INTO table3_no_encryption SELECT NULL,NOW(),b FROM table3_no_encryption;
INSERT INTO table3_no_encryption SELECT NULL,NOW(),b FROM table3_no_encryption;
#####################################################
# Check: resume replication and check how it goes
#####################################################
connection slave;
start slave;
include/sync_slave_sql.inc
connection slave;
connection master;
include/save_master_pos.inc
connection master;
connection slave;
call mtr.add_suppression("Slave I/O for channel '': Got fatal error 1236 from master when reading data from binary log: 'Could not decrypt binlog: encryption key error;");
include/wait_for_slave_io_error.inc [errno=1236]
connection slave;
connection slave;
connection slave;
SHOW TABLES;
Tables_in_test
table1_no_encryption
include/stop_slave.inc
RESET SLAVE;
##########
# Cleanup
##########
connection master;
SELECT COUNT(*) FROM table1_no_encryption;
COUNT(*)
8
SELECT COUNT(*) FROM table2_to_encrypt;
COUNT(*)
8
SELECT COUNT(*) FROM table3_no_encryption;
COUNT(*)
4
DROP TABLE table1_no_encryption, table2_to_encrypt, table3_no_encryption;
RESET MASTER;
connection slave;
include/start_slave.inc
DROP TABLE table1_no_encryption;
include/rpl_end.inc
