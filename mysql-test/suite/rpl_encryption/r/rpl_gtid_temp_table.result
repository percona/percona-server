include/master-slave.inc
Warnings:
Note	####	Sending passwords in plain text without SSL/TLS is extremely insecure.
Note	####	Storing MySQL user name or password information in the master info repository is not secure and is therefore not recommended. Please consider using the USER and PASSWORD connection options for START SLAVE; see the 'START SLAVE Syntax' in the MySQL Manual for more information.
[connection master]
CREATE TABLE trans_table1 (i INT) ENGINE=INNODB;
INSERT INTO trans_table1 VALUES (1);
CREATE TABLE trans_table2 (i INT) ENGINE=INNODB;
INSERT INTO trans_table2 VALUES (1);
CREATE TABLE non_trans_table1 (i INT) ENGINE=MYISAM;
INSERT INTO non_trans_table1 VALUES (1);
CREATE TABLE non_trans_table2 (i INT) ENGINE=MYISAM;
INSERT INTO non_trans_table2 VALUES (1);
CREATE FUNCTION func1 () RETURNS varchar(30) CHARSET utf8
BEGIN
CREATE TEMPORARY TABLE tt1(i INT) ENGINE=MyISAM; DROP TEMPORARY TABLE IF EXISTS tt1;
RETURN 0;
END;
SELECT func1();
func1()
0
START TRANSACTION;
SELECT func1();
func1()
0
COMMIT;
INSERT INTO trans_table2 VALUES (func1());
UPDATE trans_table2 SET i=func1();
DELETE FROM trans_table2 WHERE i=func1();
INSERT INTO non_trans_table2 VALUES (func1());
UPDATE non_trans_table2 SET i=func1();
DELETE FROM non_trans_table2 WHERE i=func1();
DROP FUNCTION func1;
CREATE TRIGGER trigger1
BEFORE INSERT ON trans_table2 FOR EACH ROW
BEGIN
CREATE TEMPORARY TABLE tt1(i INT) ENGINE=MyISAM; DROP TEMPORARY TABLE IF EXISTS tt1;
END;
INSERT INTO trans_table2 VALUES (10);
DROP TRIGGER trigger1;
CREATE TRIGGER trigger1
AFTER INSERT ON trans_table2 FOR EACH ROW
BEGIN
CREATE TEMPORARY TABLE tt1(i INT) ENGINE=MyISAM; DROP TEMPORARY TABLE IF EXISTS tt1;
END;
INSERT INTO trans_table2 VALUES (10);
DROP TRIGGER trigger1;
CREATE TRIGGER trigger1
BEFORE UPDATE ON trans_table2 FOR EACH ROW
BEGIN
CREATE TEMPORARY TABLE tt1(i INT) ENGINE=MyISAM; DROP TEMPORARY TABLE IF EXISTS tt1;
END;
UPDATE trans_table2 SET i=12;
DROP TRIGGER trigger1;
CREATE TRIGGER trigger1
AFTER UPDATE ON trans_table2 FOR EACH ROW
BEGIN
CREATE TEMPORARY TABLE tt1(i INT) ENGINE=MyISAM; DROP TEMPORARY TABLE IF EXISTS tt1;
END;
UPDATE trans_table2 SET i=12;
DROP TRIGGER trigger1;
CREATE TRIGGER trigger1
BEFORE DELETE ON trans_table2 FOR EACH ROW
BEGIN
CREATE TEMPORARY TABLE tt1(i INT) ENGINE=MyISAM; DROP TEMPORARY TABLE IF EXISTS tt1;
END;
DELETE FROM trans_table2;
DROP TRIGGER trigger1;
CREATE TRIGGER trigger1
AFTER DELETE ON trans_table2 FOR EACH ROW
BEGIN
CREATE TEMPORARY TABLE tt1(i INT) ENGINE=MyISAM; DROP TEMPORARY TABLE IF EXISTS tt1;
END;
DELETE FROM trans_table2;
DROP TRIGGER trigger1;
CREATE TRIGGER trigger1
BEFORE INSERT ON non_trans_table2 FOR EACH ROW
BEGIN
CREATE TEMPORARY TABLE tt1(i INT) ENGINE=MyISAM; DROP TEMPORARY TABLE IF EXISTS tt1;
END;
INSERT INTO non_trans_table2 VALUES (10);
DROP TRIGGER trigger1;
CREATE TRIGGER trigger1
AFTER INSERT ON non_trans_table2 FOR EACH ROW
BEGIN
CREATE TEMPORARY TABLE tt1(i INT) ENGINE=MyISAM; DROP TEMPORARY TABLE IF EXISTS tt1;
END;
INSERT INTO non_trans_table2 VALUES (10);
DROP TRIGGER trigger1;
CREATE TRIGGER trigger1
BEFORE UPDATE ON non_trans_table2 FOR EACH ROW
BEGIN
CREATE TEMPORARY TABLE tt1(i INT) ENGINE=MyISAM; DROP TEMPORARY TABLE IF EXISTS tt1;
END;
UPDATE non_trans_table2 SET i=12;
DROP TRIGGER trigger1;
CREATE TRIGGER trigger1
AFTER UPDATE ON non_trans_table2 FOR EACH ROW
BEGIN
CREATE TEMPORARY TABLE tt1(i INT) ENGINE=MyISAM; DROP TEMPORARY TABLE IF EXISTS tt1;
END;
UPDATE non_trans_table2 SET i=12;
DROP TRIGGER trigger1;
CREATE TRIGGER trigger1
BEFORE DELETE ON non_trans_table2 FOR EACH ROW
BEGIN
CREATE TEMPORARY TABLE tt1(i INT) ENGINE=MyISAM; DROP TEMPORARY TABLE IF EXISTS tt1;
END;
DELETE FROM non_trans_table2;
DROP TRIGGER trigger1;
CREATE TRIGGER trigger1
AFTER DELETE ON non_trans_table2 FOR EACH ROW
BEGIN
CREATE TEMPORARY TABLE tt1(i INT) ENGINE=MyISAM; DROP TEMPORARY TABLE IF EXISTS tt1;
END;
DELETE FROM non_trans_table2;
DROP TRIGGER trigger1;
CREATE FUNCTION func1 () RETURNS varchar(30) CHARSET utf8
BEGIN
CREATE TEMPORARY TABLE tt1(i INT) ENGINE=INNODB; DROP TEMPORARY TABLE IF EXISTS tt1;
RETURN 0;
END;
SELECT func1();
func1()
0
START TRANSACTION;
SELECT func1();
func1()
0
COMMIT;
INSERT INTO trans_table2 VALUES (func1());
UPDATE trans_table2 SET i=func1();
DELETE FROM trans_table2 WHERE i=func1();
INSERT INTO non_trans_table2 VALUES (func1());
UPDATE non_trans_table2 SET i=func1();
DELETE FROM non_trans_table2 WHERE i=func1();
DROP FUNCTION func1;
CREATE TRIGGER trigger1
BEFORE INSERT ON trans_table2 FOR EACH ROW
BEGIN
CREATE TEMPORARY TABLE tt1(i INT) ENGINE=INNODB; DROP TEMPORARY TABLE IF EXISTS tt1;
END;
INSERT INTO trans_table2 VALUES (10);
DROP TRIGGER trigger1;
CREATE TRIGGER trigger1
AFTER INSERT ON trans_table2 FOR EACH ROW
BEGIN
CREATE TEMPORARY TABLE tt1(i INT) ENGINE=INNODB; DROP TEMPORARY TABLE IF EXISTS tt1;
END;
INSERT INTO trans_table2 VALUES (10);
DROP TRIGGER trigger1;
CREATE TRIGGER trigger1
BEFORE UPDATE ON trans_table2 FOR EACH ROW
BEGIN
CREATE TEMPORARY TABLE tt1(i INT) ENGINE=INNODB; DROP TEMPORARY TABLE IF EXISTS tt1;
END;
UPDATE trans_table2 SET i=12;
DROP TRIGGER trigger1;
CREATE TRIGGER trigger1
AFTER UPDATE ON trans_table2 FOR EACH ROW
BEGIN
CREATE TEMPORARY TABLE tt1(i INT) ENGINE=INNODB; DROP TEMPORARY TABLE IF EXISTS tt1;
END;
UPDATE trans_table2 SET i=12;
DROP TRIGGER trigger1;
CREATE TRIGGER trigger1
BEFORE DELETE ON trans_table2 FOR EACH ROW
BEGIN
CREATE TEMPORARY TABLE tt1(i INT) ENGINE=INNODB; DROP TEMPORARY TABLE IF EXISTS tt1;
END;
DELETE FROM trans_table2;
DROP TRIGGER trigger1;
CREATE TRIGGER trigger1
AFTER DELETE ON trans_table2 FOR EACH ROW
BEGIN
CREATE TEMPORARY TABLE tt1(i INT) ENGINE=INNODB; DROP TEMPORARY TABLE IF EXISTS tt1;
END;
DELETE FROM trans_table2;
DROP TRIGGER trigger1;
CREATE TRIGGER trigger1
BEFORE INSERT ON non_trans_table2 FOR EACH ROW
BEGIN
CREATE TEMPORARY TABLE tt1(i INT) ENGINE=INNODB; DROP TEMPORARY TABLE IF EXISTS tt1;
END;
INSERT INTO non_trans_table2 VALUES (10);
DROP TRIGGER trigger1;
CREATE TRIGGER trigger1
AFTER INSERT ON non_trans_table2 FOR EACH ROW
BEGIN
CREATE TEMPORARY TABLE tt1(i INT) ENGINE=INNODB; DROP TEMPORARY TABLE IF EXISTS tt1;
END;
INSERT INTO non_trans_table2 VALUES (10);
DROP TRIGGER trigger1;
CREATE TRIGGER trigger1
BEFORE UPDATE ON non_trans_table2 FOR EACH ROW
BEGIN
CREATE TEMPORARY TABLE tt1(i INT) ENGINE=INNODB; DROP TEMPORARY TABLE IF EXISTS tt1;
END;
UPDATE non_trans_table2 SET i=12;
DROP TRIGGER trigger1;
CREATE TRIGGER trigger1
AFTER UPDATE ON non_trans_table2 FOR EACH ROW
BEGIN
CREATE TEMPORARY TABLE tt1(i INT) ENGINE=INNODB; DROP TEMPORARY TABLE IF EXISTS tt1;
END;
UPDATE non_trans_table2 SET i=12;
DROP TRIGGER trigger1;
CREATE TRIGGER trigger1
BEFORE DELETE ON non_trans_table2 FOR EACH ROW
BEGIN
CREATE TEMPORARY TABLE tt1(i INT) ENGINE=INNODB; DROP TEMPORARY TABLE IF EXISTS tt1;
END;
DELETE FROM non_trans_table2;
DROP TRIGGER trigger1;
CREATE TRIGGER trigger1
AFTER DELETE ON non_trans_table2 FOR EACH ROW
BEGIN
CREATE TEMPORARY TABLE tt1(i INT) ENGINE=INNODB; DROP TEMPORARY TABLE IF EXISTS tt1;
END;
DELETE FROM non_trans_table2;
DROP TRIGGER trigger1;
CREATE FUNCTION func1 () RETURNS varchar(30) CHARSET utf8
BEGIN
DROP TEMPORARY TABLE IF EXISTS tt1;
RETURN 0;
END;
SELECT func1();
func1()
0
START TRANSACTION;
SELECT func1();
func1()
0
COMMIT;
INSERT INTO trans_table2 VALUES (func1());
UPDATE trans_table2 SET i=func1();
DELETE FROM trans_table2 WHERE i=func1();
INSERT INTO non_trans_table2 VALUES (func1());
UPDATE non_trans_table2 SET i=func1();
DELETE FROM non_trans_table2 WHERE i=func1();
DROP FUNCTION func1;
CREATE TRIGGER trigger1
BEFORE INSERT ON trans_table2 FOR EACH ROW
BEGIN
DROP TEMPORARY TABLE IF EXISTS tt1;
END;
INSERT INTO trans_table2 VALUES (10);
DROP TRIGGER trigger1;
CREATE TRIGGER trigger1
AFTER INSERT ON trans_table2 FOR EACH ROW
BEGIN
DROP TEMPORARY TABLE IF EXISTS tt1;
END;
INSERT INTO trans_table2 VALUES (10);
DROP TRIGGER trigger1;
CREATE TRIGGER trigger1
BEFORE UPDATE ON trans_table2 FOR EACH ROW
BEGIN
DROP TEMPORARY TABLE IF EXISTS tt1;
END;
UPDATE trans_table2 SET i=12;
DROP TRIGGER trigger1;
CREATE TRIGGER trigger1
AFTER UPDATE ON trans_table2 FOR EACH ROW
BEGIN
DROP TEMPORARY TABLE IF EXISTS tt1;
END;
UPDATE trans_table2 SET i=12;
DROP TRIGGER trigger1;
CREATE TRIGGER trigger1
BEFORE DELETE ON trans_table2 FOR EACH ROW
BEGIN
DROP TEMPORARY TABLE IF EXISTS tt1;
END;
DELETE FROM trans_table2;
DROP TRIGGER trigger1;
CREATE TRIGGER trigger1
AFTER DELETE ON trans_table2 FOR EACH ROW
BEGIN
DROP TEMPORARY TABLE IF EXISTS tt1;
END;
DELETE FROM trans_table2;
DROP TRIGGER trigger1;
CREATE TRIGGER trigger1
BEFORE INSERT ON non_trans_table2 FOR EACH ROW
BEGIN
DROP TEMPORARY TABLE IF EXISTS tt1;
END;
INSERT INTO non_trans_table2 VALUES (10);
DROP TRIGGER trigger1;
CREATE TRIGGER trigger1
AFTER INSERT ON non_trans_table2 FOR EACH ROW
BEGIN
DROP TEMPORARY TABLE IF EXISTS tt1;
END;
INSERT INTO non_trans_table2 VALUES (10);
DROP TRIGGER trigger1;
CREATE TRIGGER trigger1
BEFORE UPDATE ON non_trans_table2 FOR EACH ROW
BEGIN
DROP TEMPORARY TABLE IF EXISTS tt1;
END;
UPDATE non_trans_table2 SET i=12;
DROP TRIGGER trigger1;
CREATE TRIGGER trigger1
AFTER UPDATE ON non_trans_table2 FOR EACH ROW
BEGIN
DROP TEMPORARY TABLE IF EXISTS tt1;
END;
UPDATE non_trans_table2 SET i=12;
DROP TRIGGER trigger1;
CREATE TRIGGER trigger1
BEFORE DELETE ON non_trans_table2 FOR EACH ROW
BEGIN
DROP TEMPORARY TABLE IF EXISTS tt1;
END;
DELETE FROM non_trans_table2;
DROP TRIGGER trigger1;
CREATE TRIGGER trigger1
AFTER DELETE ON non_trans_table2 FOR EACH ROW
BEGIN
DROP TEMPORARY TABLE IF EXISTS tt1;
END;
DELETE FROM non_trans_table2;
DROP TRIGGER trigger1;
CREATE FUNCTION func1 () RETURNS varchar(30) CHARSET utf8
BEGIN
CREATE TEMPORARY TABLE tt1(i INT) ENGINE=MyISAM; CREATE TEMPORARY TABLE tt2(i INT) ENGINE=Innodb; DROP TEMPORARY TABLE IF EXISTS tt1; DROP TEMPORARY TABLE IF EXISTS tt2;
RETURN 0;
END;
SELECT func1();
func1()
0
START TRANSACTION;
SELECT func1();
func1()
0
COMMIT;
INSERT INTO trans_table2 VALUES (func1());
UPDATE trans_table2 SET i=func1();
DELETE FROM trans_table2 WHERE i=func1();
INSERT INTO non_trans_table2 VALUES (func1());
UPDATE non_trans_table2 SET i=func1();
DELETE FROM non_trans_table2 WHERE i=func1();
DROP FUNCTION func1;
CREATE TRIGGER trigger1
BEFORE INSERT ON trans_table2 FOR EACH ROW
BEGIN
CREATE TEMPORARY TABLE tt1(i INT) ENGINE=MyISAM; CREATE TEMPORARY TABLE tt2(i INT) ENGINE=Innodb; DROP TEMPORARY TABLE IF EXISTS tt1; DROP TEMPORARY TABLE IF EXISTS tt2;
END;
INSERT INTO trans_table2 VALUES (10);
DROP TRIGGER trigger1;
CREATE TRIGGER trigger1
AFTER INSERT ON trans_table2 FOR EACH ROW
BEGIN
CREATE TEMPORARY TABLE tt1(i INT) ENGINE=MyISAM; CREATE TEMPORARY TABLE tt2(i INT) ENGINE=Innodb; DROP TEMPORARY TABLE IF EXISTS tt1; DROP TEMPORARY TABLE IF EXISTS tt2;
END;
INSERT INTO trans_table2 VALUES (10);
DROP TRIGGER trigger1;
CREATE TRIGGER trigger1
BEFORE UPDATE ON trans_table2 FOR EACH ROW
BEGIN
CREATE TEMPORARY TABLE tt1(i INT) ENGINE=MyISAM; CREATE TEMPORARY TABLE tt2(i INT) ENGINE=Innodb; DROP TEMPORARY TABLE IF EXISTS tt1; DROP TEMPORARY TABLE IF EXISTS tt2;
END;
UPDATE trans_table2 SET i=12;
DROP TRIGGER trigger1;
CREATE TRIGGER trigger1
AFTER UPDATE ON trans_table2 FOR EACH ROW
BEGIN
CREATE TEMPORARY TABLE tt1(i INT) ENGINE=MyISAM; CREATE TEMPORARY TABLE tt2(i INT) ENGINE=Innodb; DROP TEMPORARY TABLE IF EXISTS tt1; DROP TEMPORARY TABLE IF EXISTS tt2;
END;
UPDATE trans_table2 SET i=12;
DROP TRIGGER trigger1;
CREATE TRIGGER trigger1
BEFORE DELETE ON trans_table2 FOR EACH ROW
BEGIN
CREATE TEMPORARY TABLE tt1(i INT) ENGINE=MyISAM; CREATE TEMPORARY TABLE tt2(i INT) ENGINE=Innodb; DROP TEMPORARY TABLE IF EXISTS tt1; DROP TEMPORARY TABLE IF EXISTS tt2;
END;
DELETE FROM trans_table2;
DROP TRIGGER trigger1;
CREATE TRIGGER trigger1
AFTER DELETE ON trans_table2 FOR EACH ROW
BEGIN
CREATE TEMPORARY TABLE tt1(i INT) ENGINE=MyISAM; CREATE TEMPORARY TABLE tt2(i INT) ENGINE=Innodb; DROP TEMPORARY TABLE IF EXISTS tt1; DROP TEMPORARY TABLE IF EXISTS tt2;
END;
DELETE FROM trans_table2;
DROP TRIGGER trigger1;
CREATE TRIGGER trigger1
BEFORE INSERT ON non_trans_table2 FOR EACH ROW
BEGIN
CREATE TEMPORARY TABLE tt1(i INT) ENGINE=MyISAM; CREATE TEMPORARY TABLE tt2(i INT) ENGINE=Innodb; DROP TEMPORARY TABLE IF EXISTS tt1; DROP TEMPORARY TABLE IF EXISTS tt2;
END;
INSERT INTO non_trans_table2 VALUES (10);
DROP TRIGGER trigger1;
CREATE TRIGGER trigger1
AFTER INSERT ON non_trans_table2 FOR EACH ROW
BEGIN
CREATE TEMPORARY TABLE tt1(i INT) ENGINE=MyISAM; CREATE TEMPORARY TABLE tt2(i INT) ENGINE=Innodb; DROP TEMPORARY TABLE IF EXISTS tt1; DROP TEMPORARY TABLE IF EXISTS tt2;
END;
INSERT INTO non_trans_table2 VALUES (10);
DROP TRIGGER trigger1;
CREATE TRIGGER trigger1
BEFORE UPDATE ON non_trans_table2 FOR EACH ROW
BEGIN
CREATE TEMPORARY TABLE tt1(i INT) ENGINE=MyISAM; CREATE TEMPORARY TABLE tt2(i INT) ENGINE=Innodb; DROP TEMPORARY TABLE IF EXISTS tt1; DROP TEMPORARY TABLE IF EXISTS tt2;
END;
UPDATE non_trans_table2 SET i=12;
DROP TRIGGER trigger1;
CREATE TRIGGER trigger1
AFTER UPDATE ON non_trans_table2 FOR EACH ROW
BEGIN
CREATE TEMPORARY TABLE tt1(i INT) ENGINE=MyISAM; CREATE TEMPORARY TABLE tt2(i INT) ENGINE=Innodb; DROP TEMPORARY TABLE IF EXISTS tt1; DROP TEMPORARY TABLE IF EXISTS tt2;
END;
UPDATE non_trans_table2 SET i=12;
DROP TRIGGER trigger1;
CREATE TRIGGER trigger1
BEFORE DELETE ON non_trans_table2 FOR EACH ROW
BEGIN
CREATE TEMPORARY TABLE tt1(i INT) ENGINE=MyISAM; CREATE TEMPORARY TABLE tt2(i INT) ENGINE=Innodb; DROP TEMPORARY TABLE IF EXISTS tt1; DROP TEMPORARY TABLE IF EXISTS tt2;
END;
DELETE FROM non_trans_table2;
DROP TRIGGER trigger1;
CREATE TRIGGER trigger1
AFTER DELETE ON non_trans_table2 FOR EACH ROW
BEGIN
CREATE TEMPORARY TABLE tt1(i INT) ENGINE=MyISAM; CREATE TEMPORARY TABLE tt2(i INT) ENGINE=Innodb; DROP TEMPORARY TABLE IF EXISTS tt1; DROP TEMPORARY TABLE IF EXISTS tt2;
END;
DELETE FROM non_trans_table2;
DROP TRIGGER trigger1;
CREATE FUNCTION func1 () RETURNS varchar(30) CHARSET utf8
BEGIN
INSERT INTO trans_table1 VALUES (12); CREATE TEMPORARY TABLE tt1(i INT) ENGINE=MyISAM; DROP TEMPORARY TABLE IF EXISTS tt1;
RETURN 0;
END;
SELECT func1();
func1()
0
START TRANSACTION;
SELECT func1();
func1()
0
COMMIT;
INSERT INTO trans_table2 VALUES (func1());
UPDATE trans_table2 SET i=func1();
DELETE FROM trans_table2 WHERE i=func1();
INSERT INTO non_trans_table2 VALUES (func1());
UPDATE non_trans_table2 SET i=func1();
DELETE FROM non_trans_table2 WHERE i=func1();
DROP FUNCTION func1;
CREATE TRIGGER trigger1
BEFORE INSERT ON trans_table2 FOR EACH ROW
BEGIN
INSERT INTO trans_table1 VALUES (12); CREATE TEMPORARY TABLE tt1(i INT) ENGINE=MyISAM; DROP TEMPORARY TABLE IF EXISTS tt1;
END;
INSERT INTO trans_table2 VALUES (10);
DROP TRIGGER trigger1;
CREATE TRIGGER trigger1
AFTER INSERT ON trans_table2 FOR EACH ROW
BEGIN
INSERT INTO trans_table1 VALUES (12); CREATE TEMPORARY TABLE tt1(i INT) ENGINE=MyISAM; DROP TEMPORARY TABLE IF EXISTS tt1;
END;
INSERT INTO trans_table2 VALUES (10);
DROP TRIGGER trigger1;
CREATE TRIGGER trigger1
BEFORE UPDATE ON trans_table2 FOR EACH ROW
BEGIN
INSERT INTO trans_table1 VALUES (12); CREATE TEMPORARY TABLE tt1(i INT) ENGINE=MyISAM; DROP TEMPORARY TABLE IF EXISTS tt1;
END;
UPDATE trans_table2 SET i=12;
DROP TRIGGER trigger1;
CREATE TRIGGER trigger1
AFTER UPDATE ON trans_table2 FOR EACH ROW
BEGIN
INSERT INTO trans_table1 VALUES (12); CREATE TEMPORARY TABLE tt1(i INT) ENGINE=MyISAM; DROP TEMPORARY TABLE IF EXISTS tt1;
END;
UPDATE trans_table2 SET i=12;
DROP TRIGGER trigger1;
CREATE TRIGGER trigger1
BEFORE DELETE ON trans_table2 FOR EACH ROW
BEGIN
INSERT INTO trans_table1 VALUES (12); CREATE TEMPORARY TABLE tt1(i INT) ENGINE=MyISAM; DROP TEMPORARY TABLE IF EXISTS tt1;
END;
DELETE FROM trans_table2;
DROP TRIGGER trigger1;
CREATE TRIGGER trigger1
AFTER DELETE ON trans_table2 FOR EACH ROW
BEGIN
INSERT INTO trans_table1 VALUES (12); CREATE TEMPORARY TABLE tt1(i INT) ENGINE=MyISAM; DROP TEMPORARY TABLE IF EXISTS tt1;
END;
DELETE FROM trans_table2;
DROP TRIGGER trigger1;
CREATE TRIGGER trigger1
BEFORE INSERT ON non_trans_table2 FOR EACH ROW
BEGIN
INSERT INTO trans_table1 VALUES (12); CREATE TEMPORARY TABLE tt1(i INT) ENGINE=MyISAM; DROP TEMPORARY TABLE IF EXISTS tt1;
END;
INSERT INTO non_trans_table2 VALUES (10);
DROP TRIGGER trigger1;
CREATE TRIGGER trigger1
AFTER INSERT ON non_trans_table2 FOR EACH ROW
BEGIN
INSERT INTO trans_table1 VALUES (12); CREATE TEMPORARY TABLE tt1(i INT) ENGINE=MyISAM; DROP TEMPORARY TABLE IF EXISTS tt1;
END;
INSERT INTO non_trans_table2 VALUES (10);
DROP TRIGGER trigger1;
CREATE TRIGGER trigger1
BEFORE UPDATE ON non_trans_table2 FOR EACH ROW
BEGIN
INSERT INTO trans_table1 VALUES (12); CREATE TEMPORARY TABLE tt1(i INT) ENGINE=MyISAM; DROP TEMPORARY TABLE IF EXISTS tt1;
END;
UPDATE non_trans_table2 SET i=12;
DROP TRIGGER trigger1;
CREATE TRIGGER trigger1
AFTER UPDATE ON non_trans_table2 FOR EACH ROW
BEGIN
INSERT INTO trans_table1 VALUES (12); CREATE TEMPORARY TABLE tt1(i INT) ENGINE=MyISAM; DROP TEMPORARY TABLE IF EXISTS tt1;
END;
UPDATE non_trans_table2 SET i=12;
DROP TRIGGER trigger1;
CREATE TRIGGER trigger1
BEFORE DELETE ON non_trans_table2 FOR EACH ROW
BEGIN
INSERT INTO trans_table1 VALUES (12); CREATE TEMPORARY TABLE tt1(i INT) ENGINE=MyISAM; DROP TEMPORARY TABLE IF EXISTS tt1;
END;
DELETE FROM non_trans_table2;
DROP TRIGGER trigger1;
CREATE TRIGGER trigger1
AFTER DELETE ON non_trans_table2 FOR EACH ROW
BEGIN
INSERT INTO trans_table1 VALUES (12); CREATE TEMPORARY TABLE tt1(i INT) ENGINE=MyISAM; DROP TEMPORARY TABLE IF EXISTS tt1;
END;
DELETE FROM non_trans_table2;
DROP TRIGGER trigger1;
CREATE FUNCTION func1 () RETURNS varchar(30) CHARSET utf8
BEGIN
INSERT INTO non_trans_table1 VALUES (12); CREATE TEMPORARY TABLE tt1(i INT) ENGINE=INNODB; DROP TEMPORARY TABLE IF EXISTS tt1;
RETURN 0;
END;
SELECT func1();
func1()
0
START TRANSACTION;
SELECT func1();
func1()
0
COMMIT;
INSERT INTO trans_table2 VALUES (func1());
UPDATE trans_table2 SET i=func1();
DELETE FROM trans_table2 WHERE i=func1();
INSERT INTO non_trans_table2 VALUES (func1());
UPDATE non_trans_table2 SET i=func1();
DELETE FROM non_trans_table2 WHERE i=func1();
DROP FUNCTION func1;
CREATE TRIGGER trigger1
BEFORE INSERT ON trans_table2 FOR EACH ROW
BEGIN
INSERT INTO non_trans_table1 VALUES (12); CREATE TEMPORARY TABLE tt1(i INT) ENGINE=INNODB; DROP TEMPORARY TABLE IF EXISTS tt1;
END;
INSERT INTO trans_table2 VALUES (10);
DROP TRIGGER trigger1;
CREATE TRIGGER trigger1
AFTER INSERT ON trans_table2 FOR EACH ROW
BEGIN
INSERT INTO non_trans_table1 VALUES (12); CREATE TEMPORARY TABLE tt1(i INT) ENGINE=INNODB; DROP TEMPORARY TABLE IF EXISTS tt1;
END;
INSERT INTO trans_table2 VALUES (10);
DROP TRIGGER trigger1;
CREATE TRIGGER trigger1
BEFORE UPDATE ON trans_table2 FOR EACH ROW
BEGIN
INSERT INTO non_trans_table1 VALUES (12); CREATE TEMPORARY TABLE tt1(i INT) ENGINE=INNODB; DROP TEMPORARY TABLE IF EXISTS tt1;
END;
UPDATE trans_table2 SET i=12;
DROP TRIGGER trigger1;
CREATE TRIGGER trigger1
AFTER UPDATE ON trans_table2 FOR EACH ROW
BEGIN
INSERT INTO non_trans_table1 VALUES (12); CREATE TEMPORARY TABLE tt1(i INT) ENGINE=INNODB; DROP TEMPORARY TABLE IF EXISTS tt1;
END;
UPDATE trans_table2 SET i=12;
DROP TRIGGER trigger1;
CREATE TRIGGER trigger1
BEFORE DELETE ON trans_table2 FOR EACH ROW
BEGIN
INSERT INTO non_trans_table1 VALUES (12); CREATE TEMPORARY TABLE tt1(i INT) ENGINE=INNODB; DROP TEMPORARY TABLE IF EXISTS tt1;
END;
DELETE FROM trans_table2;
DROP TRIGGER trigger1;
CREATE TRIGGER trigger1
AFTER DELETE ON trans_table2 FOR EACH ROW
BEGIN
INSERT INTO non_trans_table1 VALUES (12); CREATE TEMPORARY TABLE tt1(i INT) ENGINE=INNODB; DROP TEMPORARY TABLE IF EXISTS tt1;
END;
DELETE FROM trans_table2;
DROP TRIGGER trigger1;
CREATE TRIGGER trigger1
BEFORE INSERT ON non_trans_table2 FOR EACH ROW
BEGIN
INSERT INTO non_trans_table1 VALUES (12); CREATE TEMPORARY TABLE tt1(i INT) ENGINE=INNODB; DROP TEMPORARY TABLE IF EXISTS tt1;
END;
INSERT INTO non_trans_table2 VALUES (10);
DROP TRIGGER trigger1;
CREATE TRIGGER trigger1
AFTER INSERT ON non_trans_table2 FOR EACH ROW
BEGIN
INSERT INTO non_trans_table1 VALUES (12); CREATE TEMPORARY TABLE tt1(i INT) ENGINE=INNODB; DROP TEMPORARY TABLE IF EXISTS tt1;
END;
INSERT INTO non_trans_table2 VALUES (10);
DROP TRIGGER trigger1;
CREATE TRIGGER trigger1
BEFORE UPDATE ON non_trans_table2 FOR EACH ROW
BEGIN
INSERT INTO non_trans_table1 VALUES (12); CREATE TEMPORARY TABLE tt1(i INT) ENGINE=INNODB; DROP TEMPORARY TABLE IF EXISTS tt1;
END;
UPDATE non_trans_table2 SET i=12;
DROP TRIGGER trigger1;
CREATE TRIGGER trigger1
AFTER UPDATE ON non_trans_table2 FOR EACH ROW
BEGIN
INSERT INTO non_trans_table1 VALUES (12); CREATE TEMPORARY TABLE tt1(i INT) ENGINE=INNODB; DROP TEMPORARY TABLE IF EXISTS tt1;
END;
UPDATE non_trans_table2 SET i=12;
DROP TRIGGER trigger1;
CREATE TRIGGER trigger1
BEFORE DELETE ON non_trans_table2 FOR EACH ROW
BEGIN
INSERT INTO non_trans_table1 VALUES (12); CREATE TEMPORARY TABLE tt1(i INT) ENGINE=INNODB; DROP TEMPORARY TABLE IF EXISTS tt1;
END;
DELETE FROM non_trans_table2;
DROP TRIGGER trigger1;
CREATE TRIGGER trigger1
AFTER DELETE ON non_trans_table2 FOR EACH ROW
BEGIN
INSERT INTO non_trans_table1 VALUES (12); CREATE TEMPORARY TABLE tt1(i INT) ENGINE=INNODB; DROP TEMPORARY TABLE IF EXISTS tt1;
END;
DELETE FROM non_trans_table2;
DROP TRIGGER trigger1;
CREATE FUNCTION func1 () RETURNS varchar(30) CHARSET utf8
BEGIN
CREATE TEMPORARY TABLE tt1(i INT) ENGINE=INNODB; DROP TEMPORARY TABLE IF EXISTS tt1; INSERT INTO non_trans_table1 VALUES (12);
RETURN 0;
END;
SELECT func1();
func1()
0
START TRANSACTION;
SELECT func1();
func1()
0
COMMIT;
INSERT INTO trans_table2 VALUES (func1());
UPDATE trans_table2 SET i=func1();
DELETE FROM trans_table2 WHERE i=func1();
INSERT INTO non_trans_table2 VALUES (func1());
UPDATE non_trans_table2 SET i=func1();
DELETE FROM non_trans_table2 WHERE i=func1();
DROP FUNCTION func1;
CREATE TRIGGER trigger1
BEFORE INSERT ON trans_table2 FOR EACH ROW
BEGIN
CREATE TEMPORARY TABLE tt1(i INT) ENGINE=INNODB; DROP TEMPORARY TABLE IF EXISTS tt1; INSERT INTO non_trans_table1 VALUES (12);
END;
INSERT INTO trans_table2 VALUES (10);
DROP TRIGGER trigger1;
CREATE TRIGGER trigger1
AFTER INSERT ON trans_table2 FOR EACH ROW
BEGIN
CREATE TEMPORARY TABLE tt1(i INT) ENGINE=INNODB; DROP TEMPORARY TABLE IF EXISTS tt1; INSERT INTO non_trans_table1 VALUES (12);
END;
INSERT INTO trans_table2 VALUES (10);
DROP TRIGGER trigger1;
CREATE TRIGGER trigger1
BEFORE UPDATE ON trans_table2 FOR EACH ROW
BEGIN
CREATE TEMPORARY TABLE tt1(i INT) ENGINE=INNODB; DROP TEMPORARY TABLE IF EXISTS tt1; INSERT INTO non_trans_table1 VALUES (12);
END;
UPDATE trans_table2 SET i=12;
DROP TRIGGER trigger1;
CREATE TRIGGER trigger1
AFTER UPDATE ON trans_table2 FOR EACH ROW
BEGIN
CREATE TEMPORARY TABLE tt1(i INT) ENGINE=INNODB; DROP TEMPORARY TABLE IF EXISTS tt1; INSERT INTO non_trans_table1 VALUES (12);
END;
UPDATE trans_table2 SET i=12;
DROP TRIGGER trigger1;
CREATE TRIGGER trigger1
BEFORE DELETE ON trans_table2 FOR EACH ROW
BEGIN
CREATE TEMPORARY TABLE tt1(i INT) ENGINE=INNODB; DROP TEMPORARY TABLE IF EXISTS tt1; INSERT INTO non_trans_table1 VALUES (12);
END;
DELETE FROM trans_table2;
DROP TRIGGER trigger1;
CREATE TRIGGER trigger1
AFTER DELETE ON trans_table2 FOR EACH ROW
BEGIN
CREATE TEMPORARY TABLE tt1(i INT) ENGINE=INNODB; DROP TEMPORARY TABLE IF EXISTS tt1; INSERT INTO non_trans_table1 VALUES (12);
END;
DELETE FROM trans_table2;
DROP TRIGGER trigger1;
CREATE TRIGGER trigger1
BEFORE INSERT ON non_trans_table2 FOR EACH ROW
BEGIN
CREATE TEMPORARY TABLE tt1(i INT) ENGINE=INNODB; DROP TEMPORARY TABLE IF EXISTS tt1; INSERT INTO non_trans_table1 VALUES (12);
END;
INSERT INTO non_trans_table2 VALUES (10);
DROP TRIGGER trigger1;
CREATE TRIGGER trigger1
AFTER INSERT ON non_trans_table2 FOR EACH ROW
BEGIN
CREATE TEMPORARY TABLE tt1(i INT) ENGINE=INNODB; DROP TEMPORARY TABLE IF EXISTS tt1; INSERT INTO non_trans_table1 VALUES (12);
END;
INSERT INTO non_trans_table2 VALUES (10);
DROP TRIGGER trigger1;
CREATE TRIGGER trigger1
BEFORE UPDATE ON non_trans_table2 FOR EACH ROW
BEGIN
CREATE TEMPORARY TABLE tt1(i INT) ENGINE=INNODB; DROP TEMPORARY TABLE IF EXISTS tt1; INSERT INTO non_trans_table1 VALUES (12);
END;
UPDATE non_trans_table2 SET i=12;
DROP TRIGGER trigger1;
CREATE TRIGGER trigger1
AFTER UPDATE ON non_trans_table2 FOR EACH ROW
BEGIN
CREATE TEMPORARY TABLE tt1(i INT) ENGINE=INNODB; DROP TEMPORARY TABLE IF EXISTS tt1; INSERT INTO non_trans_table1 VALUES (12);
END;
UPDATE non_trans_table2 SET i=12;
DROP TRIGGER trigger1;
CREATE TRIGGER trigger1
BEFORE DELETE ON non_trans_table2 FOR EACH ROW
BEGIN
CREATE TEMPORARY TABLE tt1(i INT) ENGINE=INNODB; DROP TEMPORARY TABLE IF EXISTS tt1; INSERT INTO non_trans_table1 VALUES (12);
END;
DELETE FROM non_trans_table2;
DROP TRIGGER trigger1;
CREATE TRIGGER trigger1
AFTER DELETE ON non_trans_table2 FOR EACH ROW
BEGIN
CREATE TEMPORARY TABLE tt1(i INT) ENGINE=INNODB; DROP TEMPORARY TABLE IF EXISTS tt1; INSERT INTO non_trans_table1 VALUES (12);
END;
DELETE FROM non_trans_table2;
DROP TRIGGER trigger1;
CREATE FUNCTION func1 () RETURNS varchar(30) CHARSET utf8
BEGIN
CREATE TEMPORARY TABLE tt1(i INT) ENGINE=MyISAM; DROP TEMPORARY TABLE IF EXISTS tt1; INSERT INTO trans_table1 VALUES (12);
RETURN 0;
END;
SELECT func1();
func1()
0
START TRANSACTION;
SELECT func1();
func1()
0
COMMIT;
INSERT INTO trans_table2 VALUES (func1());
UPDATE trans_table2 SET i=func1();
DELETE FROM trans_table2 WHERE i=func1();
INSERT INTO non_trans_table2 VALUES (func1());
UPDATE non_trans_table2 SET i=func1();
DELETE FROM non_trans_table2 WHERE i=func1();
DROP FUNCTION func1;
CREATE TRIGGER trigger1
BEFORE INSERT ON trans_table2 FOR EACH ROW
BEGIN
CREATE TEMPORARY TABLE tt1(i INT) ENGINE=MyISAM; DROP TEMPORARY TABLE IF EXISTS tt1; INSERT INTO trans_table1 VALUES (12);
END;
INSERT INTO trans_table2 VALUES (10);
DROP TRIGGER trigger1;
CREATE TRIGGER trigger1
AFTER INSERT ON trans_table2 FOR EACH ROW
BEGIN
CREATE TEMPORARY TABLE tt1(i INT) ENGINE=MyISAM; DROP TEMPORARY TABLE IF EXISTS tt1; INSERT INTO trans_table1 VALUES (12);
END;
INSERT INTO trans_table2 VALUES (10);
DROP TRIGGER trigger1;
CREATE TRIGGER trigger1
BEFORE UPDATE ON trans_table2 FOR EACH ROW
BEGIN
CREATE TEMPORARY TABLE tt1(i INT) ENGINE=MyISAM; DROP TEMPORARY TABLE IF EXISTS tt1; INSERT INTO trans_table1 VALUES (12);
END;
UPDATE trans_table2 SET i=12;
DROP TRIGGER trigger1;
CREATE TRIGGER trigger1
AFTER UPDATE ON trans_table2 FOR EACH ROW
BEGIN
CREATE TEMPORARY TABLE tt1(i INT) ENGINE=MyISAM; DROP TEMPORARY TABLE IF EXISTS tt1; INSERT INTO trans_table1 VALUES (12);
END;
UPDATE trans_table2 SET i=12;
DROP TRIGGER trigger1;
CREATE TRIGGER trigger1
BEFORE DELETE ON trans_table2 FOR EACH ROW
BEGIN
CREATE TEMPORARY TABLE tt1(i INT) ENGINE=MyISAM; DROP TEMPORARY TABLE IF EXISTS tt1; INSERT INTO trans_table1 VALUES (12);
END;
DELETE FROM trans_table2;
DROP TRIGGER trigger1;
CREATE TRIGGER trigger1
AFTER DELETE ON trans_table2 FOR EACH ROW
BEGIN
CREATE TEMPORARY TABLE tt1(i INT) ENGINE=MyISAM; DROP TEMPORARY TABLE IF EXISTS tt1; INSERT INTO trans_table1 VALUES (12);
END;
DELETE FROM trans_table2;
DROP TRIGGER trigger1;
CREATE TRIGGER trigger1
BEFORE INSERT ON non_trans_table2 FOR EACH ROW
BEGIN
CREATE TEMPORARY TABLE tt1(i INT) ENGINE=MyISAM; DROP TEMPORARY TABLE IF EXISTS tt1; INSERT INTO trans_table1 VALUES (12);
END;
INSERT INTO non_trans_table2 VALUES (10);
DROP TRIGGER trigger1;
CREATE TRIGGER trigger1
AFTER INSERT ON non_trans_table2 FOR EACH ROW
BEGIN
CREATE TEMPORARY TABLE tt1(i INT) ENGINE=MyISAM; DROP TEMPORARY TABLE IF EXISTS tt1; INSERT INTO trans_table1 VALUES (12);
END;
INSERT INTO non_trans_table2 VALUES (10);
DROP TRIGGER trigger1;
CREATE TRIGGER trigger1
BEFORE UPDATE ON non_trans_table2 FOR EACH ROW
BEGIN
CREATE TEMPORARY TABLE tt1(i INT) ENGINE=MyISAM; DROP TEMPORARY TABLE IF EXISTS tt1; INSERT INTO trans_table1 VALUES (12);
END;
UPDATE non_trans_table2 SET i=12;
DROP TRIGGER trigger1;
CREATE TRIGGER trigger1
AFTER UPDATE ON non_trans_table2 FOR EACH ROW
BEGIN
CREATE TEMPORARY TABLE tt1(i INT) ENGINE=MyISAM; DROP TEMPORARY TABLE IF EXISTS tt1; INSERT INTO trans_table1 VALUES (12);
END;
UPDATE non_trans_table2 SET i=12;
DROP TRIGGER trigger1;
CREATE TRIGGER trigger1
BEFORE DELETE ON non_trans_table2 FOR EACH ROW
BEGIN
CREATE TEMPORARY TABLE tt1(i INT) ENGINE=MyISAM; DROP TEMPORARY TABLE IF EXISTS tt1; INSERT INTO trans_table1 VALUES (12);
END;
DELETE FROM non_trans_table2;
DROP TRIGGER trigger1;
CREATE TRIGGER trigger1
AFTER DELETE ON non_trans_table2 FOR EACH ROW
BEGIN
CREATE TEMPORARY TABLE tt1(i INT) ENGINE=MyISAM; DROP TEMPORARY TABLE IF EXISTS tt1; INSERT INTO trans_table1 VALUES (12);
END;
DELETE FROM non_trans_table2;
DROP TRIGGER trigger1;
include/sync_slave_sql_with_master.inc
[connection master]
include/diff_tables.inc [master:trans_table1, slave:trans_table1]
include/diff_tables.inc [master:trans_table2, slave:trans_table2]
include/diff_tables.inc [master:non_trans_table1, slave:non_trans_table1]
include/diff_tables.inc [master:non_trans_table2, slave:non_trans_table2]
DROP TABLE trans_table1, trans_table2;
DROP TABLE non_trans_table1, non_trans_table2;
include/rpl_end.inc
