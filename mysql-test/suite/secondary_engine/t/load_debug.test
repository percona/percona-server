--source include/have_debug.inc
--disable_query_log
eval INSTALL PLUGIN mock SONAME '$MOCK_PLUGIN';
--enable_query_log

--echo #
--echo # Bug#32508608: MDLS FOR ALTER TABLE SECONDARY_LOAD ARE TOO STRICT
--echo #

CREATE TABLE t1 (a INT) SECONDARY_ENGINE MOCK;
INSERT INTO t1 VALUES (1),(2),(3);
SELECT * FROM t1;

--echo # Starting reader connection
connect(reader,localhost,root,,);
--echo # Run query which will block while holding shared MDL
SET DEBUG_SYNC="after_open_table_mdl_shared SIGNAL holding_shared_mdl WAIT_FOR finish_select";
--send SELECT * FROM t1

--echo # Switch to default connection
connection default;

--echo # Wait until reader has acquired shared MDL
SET DEBUG_SYNC="now WAIT_FOR holding_shared_mdl";

--echo # Verify that load can proceed to the point where it needs to
--echo # upgrade to X-MDL, and then signal the reader con to proceed
SET DEBUG_SYNC="secload_upgrade_mdl_x SIGNAL finish_select";
ALTER TABLE t1 SECONDARY_LOAD;

SET DEBUG_SYNC="RESET";

--echo # Switch to reader con and wait for query to complete
connection reader;
--reap
disconnect reader;
--source include/wait_until_disconnected.inc

--echo # Switch to default connection
connection default;

--echo # Test error handling in secondary unload
SET DEBUG="+d,sim_secunload_fail";
--error ER_SECONDARY_ENGINE
ALTER TABLE t1 SECONDARY_UNLOAD;
SET DEBUG="-d,sim_secunload_fail";

SELECT * FROM t1;
ALTER TABLE t1 SECONDARY_UNLOAD;

--echo # Test error handling in secondary unload
SET DEBUG="+d,sim_secload_fail";
--error ER_SECONDARY_ENGINE
ALTER TABLE t1 SECONDARY_LOAD;
SET DEBUG="-d,sim_secload_fail";

SELECT * FROM t1;

--echo # Cleanup
DROP TABLE t1;

--disable_query_log
UNINSTALL PLUGIN mock;
--enable_query_log
