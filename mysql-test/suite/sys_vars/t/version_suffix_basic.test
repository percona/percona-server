####################################################################
#   Displaying default value                                       #
####################################################################
SELECT COUNT(@@GLOBAL.version_suffix);
--echo 1 Expected


####################################################################
#   Check if Value can set and if @@version is set according to    #
#   @@version_suffix                                               #
####################################################################

--error ER_WRONG_TYPE_FOR_VAR
SET @@GLOBAL.version_suffix=1;
--echo Expected error 'Incorrect argument type to variable'

# save the start value
SET @saved_version_suffix = @@global.version_suffix;

SET GLOBAL version_suffix = DEFAULT;

SET GLOBAL version_suffix = '';
SET @version_base = @@global.version;
SELECT @@global.version_suffix;

SET GLOBAL version_suffix = '-my_version';
SELECT @@global.version_suffix;
--let $assert_text= Strings should be equal
--let $assert_cond= STRCMP(@@global.version, CONCAT(@version_base, @@global.version_suffix)) = 0
--source include/assert.inc

SET GLOBAL version_suffix = '-my_version2';
SELECT @@global.version_suffix;
--let $assert_text= Strings should be equal
--let $assert_cond= STRCMP(@@global.version, CONCAT(@version_base, @@global.version_suffix)) = 0
--source include/assert.inc

# restore the start value
SET GLOBAL version_suffix = @saved_version_suffix;

SELECT COUNT(@@GLOBAL.version_suffix);
--echo 1 Expected




#################################################################
# Check if the value in GLOBAL Table matches value in variable  #
#################################################################

SELECT @@GLOBAL.version_suffix = VARIABLE_VALUE
FROM performance_schema.global_variables
WHERE VARIABLE_NAME='version_suffix';
--echo 1 Expected

SELECT COUNT(@@GLOBAL.version_suffix);
--echo 1 Expected

SELECT COUNT(VARIABLE_VALUE)
FROM performance_schema.global_variables
WHERE VARIABLE_NAME='version_suffix';
--echo 1 Expected



################################################################################
#  Check if accessing variable with and without GLOBAL point to same variable  #
################################################################################
SELECT @@version_suffix = @@GLOBAL.version_suffix;
--echo 1 Expected



################################################################################
#   Check if version_suffix can be accessed with and without @@ sign          #
################################################################################

SELECT COUNT(@@version_suffix);
--echo 1 Expected

--Error ER_INCORRECT_GLOBAL_LOCAL_VAR
SELECT COUNT(@@local.version_suffix);
--echo Expected error 'Variable is a GLOBAL variable'

--Error ER_INCORRECT_GLOBAL_LOCAL_VAR
SELECT COUNT(@@SESSION.version_suffix);
--echo Expected error 'Variable is a GLOBAL variable'

SELECT COUNT(@@GLOBAL.version_suffix);
--echo 1 Expected

--Error ER_BAD_FIELD_ERROR
SELECT version_suffix = @@SESSION.version_suffix;
--echo Expected error 'Readonly variable'



#####################################################################################
# Bug PS-4785: Setting version_suffix to NULL leads to handle_fatal_signal (sig=11) #
#####################################################################################

SET GLOBAL version_suffix = NULL;
SHOW GLOBAL VARIABLES LIKE 'a';
SELECT @@GLOBAL.version_suffix;

SELECT COUNT(@@GLOBAL.version_suffix);
--echo 0 Expected

# restore the start value
SET GLOBAL version_suffix = @saved_version_suffix;
