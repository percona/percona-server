# Test for ability to load plugins from different plugin directories

#
# Check if server has support for loading plugins
#
if (`SELECT @@have_dynamic_loading != 'YES'`) {
  --skip This test requires dynamic loading
}

#
# Check if the variable EXAMPLE_PLUGIN is set
#
if (!$EXAMPLE_PLUGIN) {
  --skip Example plugin requires the environment variable \$EXAMPLE_PLUGIN to be set (normally done by mtr)
}

#
# Check if the variable PLUGIN_AUTH is set
#
if (!$PLUGIN_AUTH) {
  --skip Example plugin requires the environment variable \$PLUGIN_AUTH to be set (normally done by mtr)
}

#
# Check if the variable UDF_EXAMPLE_LIB is set
#
if (!$UDF_EXAMPLE_LIB) {
  --skip UDF requires the environment variable \$UDF_EXAMPLE_LIB to be set (normally done by mtr)
}


--let MYSQL_BASEDIR= `select @@basedir`

--echo ////////////////
--echo // test for delimiter-only string
--echo ////////////////

--let $DELIMITER= :

--let $restart_parameters= restart:--plugin-dir=$DELIMITER
--source include/restart_mysqld.inc

--replace_result $MYSQL_BASEDIR MYSQL_BASEDIR
SELECT @@plugin_dir;

--echo ////////////////
--echo // test for several-delimiters string
--echo ////////////////

--let $SEVERAL_DELIMITERS= :::

--let $restart_parameters= restart:--plugin-dir=$SEVERAL_DELIMITERS
--source include/restart_mysqld.inc

--replace_result $MYSQL_BASEDIR MYSQL_BASEDIR
SELECT @@plugin_dir;

--echo ////////////////
--echo // test for empty entries
--echo ////////////////

--let $EMPTY_ENTRIES= /some/dir/1::/some/dir/2::/some/dir/3:

--let $restart_parameters= restart:--plugin-dir=$EMPTY_ENTRIES
--source include/restart_mysqld.inc

--replace_result $MYSQL_BASEDIR MYSQL_BASEDIR
SELECT @@plugin_dir;

--echo ////////////////
--echo // test for some plugin dir entry exceeds size limit
--echo ////////////////

call mtr.add_suppression("Plugin dir max len was exceed");
--let $TOO_LONG_PLUGIN_DIR_ENTRY= /0123456789/0123456789/0123456789/0123456789/0123456789/0123456789/0123456789/0123456789/0123456789/0123456789/0123456789/0123456789/0123456789/0123456789/0123456789/0123456789/0123456789/0123456789/0123456789/0123456789/0123456789/0123456789/0123456789/0123456789/0123456789/0123456789/0123456789/0123456789/0123456789/0123456789/0123456789/0123456789/0123456789/0123456789/0123456789/0123456789/0123456789/0123456789/0123456789/0123456789/0123456789/0123456789/0123456789/0123456789/0123456789/0123456789/0123456789/0123456789/0123456789/0123456789:/some/fake/dir/1:/some/fake/dir/2

--let $restart_parameters= restart:--plugin-dir=$TOO_LONG_PLUGIN_DIR_ENTRY
--source include/restart_mysqld.inc

SELECT @@plugin_dir;

--echo ////////////////
--echo // test for whole plugin dir exceeds size limit
--echo ////////////////

--let $TOO_LONG_PLUGIN_DIR= /0123456789/0123456789/0123456789/0123456789/0123456789/0123456789/0123456789/0123456789/0123456789/0123456789/0123456789/0123456789/0123456789/0123456789/0123456789/0123456789/0123456789/0123456789/0123456789/0123456789/0123456789/0123456789/0123456789:/0123456789/0123456789/0123456789/0123456789/0123456789/0123456789/0123456789/0123456789/0123456789/0123456789/0123456789/0123456789/0123456789/0123456789/0123456789/0123456789/0123456789/0123456789/0123456789/0123456789/0123456789/0123456789/0123456789:/0123456789/0123456789/0123456789/0123456789/0123456789/0123456789:/0123456789/0123456789/0123456789/0123456789/0123456789/0123456789/0123456789/0123456789/0123456789/0123456789/0123456789/0123456789/0123456789/0123456789/0123456789/0123456789/0123456789/0123456789/0123456789/0123456789/0123456789/0123456789/0123456789:/0123456789/0123456789/0123456789/0123456789/0123456789/0123456789/0123456789/0123456789/0123456789/0123456789/0123456789/0123456789/0123456789/0123456789/0123456789/0123456789/0123456789/0123456789/0123456789/0123456789/0123456789/0123456789/0123456789:/0123456789/0123456789/0123456789/0123456789/0123456789/0123456789:/0123456789/0123456789/0123456789/0123456789/0123456789/0123456789/0123456789/0123456789/0123456789/0123456789/0123456789/0123456789/0123456789/0123456789/0123456789/0123456789/0123456789/0123456789/0123456789/0123456789/0123456789/0123456789/0123456789:/0123456789/0123456789/0123456789/0123456789/0123456789/0123456789/0123456789/0123456789/0123456789/0123456789/0123456789/0123456789/0123456789/0123456789/0123456789/0123456789/0123456789/0123456789/0123456789/0123456789/0123456789/0123456789/0123456789:/0123456789/0123456789/0123456789/0123456789/0123456789/0123456789:/0123456789/0123456789/0123456789/0123456789/0123456789/0123456789/0123456789/0123456789/0123456789/0123456789/0123456789/0123456789/0123456789/0123456789/0123456789/0123456789/0123456789/0123456789/0123456789/0123456789/0123456789/0123456789/0123456789:/0123456789/0123456789/0123456789/0123456789/0123456789/0123456789/0123456789/0123456789/0123456789/0123456789/0123456789/0123456789/0123456789/0123456789/0123456789/0123456789/0123456789/0123456789/0123456789/0123456789/0123456789/0123456789/0123456789:/0123456789/0123456789/0123456789/0123456789/0123456789/0123456789:/0123456789/0123456789/0123456789/0123456789/0123456789/0123456789/0123456789/0123456789/0123456789/0123456789/0123456789/0123456789/0123456789/0123456789/0123456789/0123456789/0123456789/0123456789/0123456789/0123456789/0123456789/0123456789/0123456789:/0123456789/0123456789/0123456789/0123456789/0123456789/0123456789/0123456789/0123456789/0123456789/0123456789/0123456789/0123456789/0123456789/0123456789/0123456789/0123456789/0123456789/0123456789/0123456789/0123456789/0123456789/0123456789/0123456789:/0123456789/0123456789/0123456789/0123456789/0123456789/0123456789:/0123456789/0123456789/0123456789/0123456789/0123456789/0123456789/0123456789/0123456789/0123456789/0123456789/0123456789/0123456789/0123456789/0123456789/0123456789/0123456789/0123456789/0123456789/0123456789/0123456789/0123456789/0123456789/0123456789:/0123456789/0123456789/0123456789/0123456789/0123456789/0123456789/0123456789/0123456789/0123456789/0123456789/0123456789/0123456789/0123456789/0123456789/0123456789/0123456789/0123456789/0123456789/0123456789/0123456789/0123456789/0123456789/0123456789:/0123456789/0123456789/0123456789/0123456789/0123456789/0123456789

--let $restart_parameters= restart:--plugin-dir=$TOO_LONG_PLUGIN_DIR
--source include/restart_mysqld.inc
--enable_warnings

SELECT @@plugin_dir;

--echo ////////////////
--echo // test for using command-line option including UDF
--echo ////////////////

--let $TEST_PLUGIN_DIR = /some/fake/dir:$EXAMPLE_PLUGIN_DIR:$PLUGIN_AUTH_DIR:$UDF_EXAMPLE_LIB_DIR:/some/fake/dir/again
--let $TEST_PLUGIN_LOAD = $PLUGIN_AUTH_LOAD_ADD $EXAMPLE_PLUGIN_LOAD_ADD
--let $restart_parameters= restart:--plugin-dir=$TEST_PLUGIN_DIR $TEST_PLUGIN_LOAD
--source include/restart_mysqld.inc

--replace_result $EXAMPLE_PLUGIN_DIR EXAMPLE_PLUGIN_DIR $PLUGIN_AUTH_DIR PLUGIN_AUTH_DIR $UDF_EXAMPLE_LIB_DIR UDF_EXAMPLE_LIB_DIR
SELECT @@plugin_dir;

SELECT COUNT(*) FROM INFORMATION_SCHEMA.PLUGINS WHERE PLUGIN_NAME = 'EXAMPLE';
SELECT COUNT(*) FROM INFORMATION_SCHEMA.PLUGINS WHERE PLUGIN_NAME = 'test_plugin_server';
SELECT COUNT(*) FROM INFORMATION_SCHEMA.PLUGINS WHERE PLUGIN_NAME = 'cleartext_plugin_server';

--replace_result $UDF_EXAMPLE_LIB UDF_EXAMPLE_LIB
eval CREATE FUNCTION metaphon RETURNS STRING SONAME "$UDF_EXAMPLE_LIB";
DROP FUNCTION metaphon;

--echo ////////////////
--echo // test for using "INSTALL PLUGIN" statement
--echo ////////////////

--let $TEST_PLUGIN_DIR = /some/fake/dir:$EXAMPLE_PLUGIN_DIR:$PLUGIN_AUTH_DIR:/some/fake/dir/again
--let $restart_parameters= restart:--plugin-dir=$TEST_PLUGIN_DIR
--source include/restart_mysqld.inc

--replace_result $EXAMPLE_PLUGIN_DIR EXAMPLE_PLUGIN_DIR $PLUGIN_AUTH_DIR PLUGIN_AUTH_DIR
SELECT @@plugin_dir;

--replace_regex /\.dll/.so/
--eval INSTALL PLUGIN example SONAME '$EXAMPLE_PLUGIN'
--replace_regex /\.dll/.so/
--eval INSTALL PLUGIN test_plugin_server SONAME '$PLUGIN_AUTH'
--replace_regex /\.dll/.so/
--eval INSTALL PLUGIN cleartext_plugin_server SONAME '$PLUGIN_AUTH'
--error ER_CANT_OPEN_LIBRARY
INSTALL PLUGIN no_such_plugin SONAME 'no_such_object';

SELECT COUNT(*) FROM INFORMATION_SCHEMA.PLUGINS WHERE PLUGIN_NAME = 'EXAMPLE';
SELECT COUNT(*) FROM INFORMATION_SCHEMA.PLUGINS WHERE PLUGIN_NAME = 'test_plugin_server';
SELECT COUNT(*) FROM INFORMATION_SCHEMA.PLUGINS WHERE PLUGIN_NAME = 'cleartext_plugin_server';

UNINSTALL PLUGIN example;
UNINSTALL PLUGIN test_plugin_server;
UNINSTALL PLUGIN cleartext_plugin_server;


--echo ////////////////
--echo // test for fake plugin file from command line option
--echo // Copy PLUGIN_AUTH file to some plugin dir, rename it to EXAMPLE_PLUGIN
--echo // and try to load EXAMPLE_PLUGIN from wrong plugin file.
--echo // The rule - stop looking for plugin file if the first found plugin
--echo // file load fails.
--echo ////////////////

--let  $FAKE_EXAMPLE_PLUGIN_DIR= $MYSQL_TMP_DIR/fake_example_plugin
--mkdir $FAKE_EXAMPLE_PLUGIN_DIR
--copy_file $PLUGIN_AUTH_DIR/$PLUGIN_AUTH $FAKE_EXAMPLE_PLUGIN_DIR/$EXAMPLE_PLUGIN
--let $TEST_PLUGIN_DIR = $FAKE_EXAMPLE_PLUGIN_DIR:$EXAMPLE_PLUGIN_DIR:$PLUGIN_AUTH_DIR
--let $TEST_PLUGIN_LOAD = $PLUGIN_AUTH_LOAD_ADD $EXAMPLE_PLUGIN_LOAD_ADD

call mtr.add_suppression("Can't find symbol 'EXAMPLE' in library");
call mtr.add_suppression("Couldn't load plugin named 'EXAMPLE' with soname");

--let $restart_parameters= restart:--plugin-dir=$TEST_PLUGIN_DIR $TEST_PLUGIN_LOAD
--source include/restart_mysqld.inc

--replace_result $EXAMPLE_PLUGIN_DIR EXAMPLE_PLUGIN_DIR $PLUGIN_AUTH_DIR PLUGIN_AUTH_DIR $FAKE_EXAMPLE_PLUGIN_DIR FAKE_EXAMPLE_PLUGIN_DIR
SELECT @@plugin_dir;

SELECT COUNT(*) FROM INFORMATION_SCHEMA.PLUGINS WHERE PLUGIN_NAME = 'EXAMPLE';
SELECT COUNT(*) FROM INFORMATION_SCHEMA.PLUGINS WHERE PLUGIN_NAME = 'test_plugin_server';
SELECT COUNT(*) FROM INFORMATION_SCHEMA.PLUGINS WHERE PLUGIN_NAME = 'cleartext_plugin_server';


--echo ////////////////
--echo // test for fake plugin file from 'INSERT PLUGIN' statement
--echo // Copy PLUGIN_AUTH file to some plugin dir, rename it to EXAMPLE_PLUGIN
--echo // and try to load EXAMPLE_PLUGIN from wrong plugin file.
--echo // The rule - stop looking for plugin file if the first found plugin
--echo // file load fails.
--echo ////////////////

# This was already done in previous test
#--let  $FAKE_EXAMPLE_PLUGIN_DIR= $MYSQL_TMP_DIR/fake_example_plugin
#--mkdir $FAKE_EXAMPLE_PLUGIN_DIR
#--copy_file $PLUGIN_AUTH_DIR/$PLUGIN_AUTH $FAKE_EXAMPLE_PLUGIN_DIR/$EXAMPLE_PLUGIN
--let $TEST_PLUGIN_DIR = $FAKE_EXAMPLE_PLUGIN_DIR:$EXAMPLE_PLUGIN_DIR:$PLUGIN_AUTH_DIR

call mtr.add_suppression("Can't find symbol 'EXAMPLE' in library");
call mtr.add_suppression("Couldn't load plugin named 'EXAMPLE' with soname");

--let $restart_parameters= restart:--plugin-dir=$TEST_PLUGIN_DIR
--source include/restart_mysqld.inc

--replace_result $EXAMPLE_PLUGIN_DIR EXAMPLE_PLUGIN_DIR $PLUGIN_AUTH_DIR PLUGIN_AUTH_DIR $FAKE_EXAMPLE_PLUGIN_DIR FAKE_EXAMPLE_PLUGIN_DIR
SELECT @@plugin_dir;

--replace_regex /\.dll/.so/
--error ER_CANT_FIND_DL_ENTRY
--eval INSTALL PLUGIN example SONAME '$EXAMPLE_PLUGIN'
--replace_regex /\.dll/.so/
--eval INSTALL PLUGIN test_plugin_server SONAME '$PLUGIN_AUTH'
--replace_regex /\.dll/.so/
--eval INSTALL PLUGIN cleartext_plugin_server SONAME '$PLUGIN_AUTH'

SELECT COUNT(*) FROM INFORMATION_SCHEMA.PLUGINS WHERE PLUGIN_NAME = 'EXAMPLE';
SELECT COUNT(*) FROM INFORMATION_SCHEMA.PLUGINS WHERE PLUGIN_NAME = 'test_plugin_server';
SELECT COUNT(*) FROM INFORMATION_SCHEMA.PLUGINS WHERE PLUGIN_NAME = 'cleartext_plugin_server';

UNINSTALL PLUGIN test_plugin_server;
UNINSTALL PLUGIN cleartext_plugin_server;


