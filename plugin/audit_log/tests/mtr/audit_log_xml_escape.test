--source include/not_embedded.inc

--let $MYSQL_TMP_DIR = `select @@tmpdir`
--let $MYSQLD_DATADIR = `select @@datadir`
--let $TMP_QUERY_FILE = $MYSQL_TMP_DIR/tmp_query

--let MYSQLD_DATADIR = $MYSQLD_DATADIR
--let TMP_QUERY_FILE = $TMP_QUERY_FILE

--perl
  use strict;
  use warnings;

  my $query_file = $ENV{'TMP_QUERY_FILE'} or die "TMP_QUERY_FILE not set";
  open(my $fh, ">", $query_file) or die "Can't open < $query_file: $!";

  print $fh "CREATE TABLE a (id int) ENGINE = InnoDB;\n";
  print $fh "INSERT INTO a \nVALUES (1);\n";
  print $fh "INSERT INTO a \tVALUES (2);\n";
  print $fh "INSERT INTO a \rVALUES (3);\n";

  close($fh);
EOF

SET GLOBAL audit_log_flush=ON;
--remove_file $MYSQLD_DATADIR/test_audit.log
SET GLOBAL audit_log_flush=ON;

--source $TMP_QUERY_FILE
--move_file $MYSQLD_DATADIR/test_audit.log $MYSQLD_DATADIR/test_audit_new.log
set global audit_log_flush= ON;

perl;
  use strict;
  use warnings;

  my $log_file = "$ENV{MYSQLD_DATADIR}/test_audit_new.log";
  open(my $fh, "<", $log_file) or die "Can't open < $log_file: $!";

  my $escape_seq_count = 0;
  my $expected_escape_seq_count = 3;

  while (my $line = <$fh>) {
    if ($line =~ m/INSERT\sINTO\sa\s&#10;VALUES\s\(1\)/
          || $line =~ m/INSERT\sINTO\sa\s&#9;VALUES\s\(2\)/
          || $line =~ m/INSERT\sINTO\sa\s&#13;VALUES\s\(3\)/) {
      ++$escape_seq_count;
    }
  }

  if ($escape_seq_count == $expected_escape_seq_count) {
    print "Escape rules Ok\n";
  }
  else {
    print "Found $escape_seq_count escape sequences, expected $expected_escape_seq_count\n";
  }

  close($fh);
EOF

--remove_file $MYSQLD_DATADIR/test_audit.log
--remove_file $MYSQLD_DATADIR/test_audit_new.log

DROP TABLE a;
