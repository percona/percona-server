# Keyring_vault plugin and keyring_vault_config variable testing.

--source include/have_keyring_vault_plugin.inc

--let $vault_conf_mount_point_uuid = `SELECT UUID()`

--source parse_combination.inc

--let $conf_file1 = $MYSQLTEST_VARDIR/keyring_vault1.conf
--let $conf_file2 = $MYSQLTEST_VARDIR/keyring_vault2.conf
--let $conf_invalid = $MYSQLTEST_VARDIR/keyring_vault_invalid_token.conf

--let $mount_point_service_op = CREATE

--let $vault_conf_file = $conf_file1
--let $vault_conf_mount_point_suffix = _1
--source generate_conf_file.inc
--source mount_point_service.inc

--let $vault_conf_file = $conf_file2
--let $vault_conf_mount_point_suffix = _2
--source generate_conf_file.inc
if (!$vault_conf_mount_point_directory)
{
  --source mount_point_service.inc
}

--let $vault_conf_file = $conf_invalid
--let $vault_conf_mount_point_suffix = _3
--let $vault_conf_token = aabbccddeeffeegghhiijjkk
--source generate_conf_file.inc

--disable_query_log
call mtr.add_suppression("Plugin keyring_vault reported: 'Could not open credentials file.'");
call mtr.add_suppression("Plugin keyring_vault reported: 'Could not read secret_mount_point from the configuration file.'");
call mtr.add_suppression("Plugin keyring_vault reported: 'Could not read credentials file content.'");
call mtr.add_suppression("Function 'keyring_vault' already exists");
call mtr.add_suppression("Couldn't load plugin named 'keyring_vault' with soname 'keyring_vault.so'.");

call mtr.add_suppression("Plugin keyring_vault reported: 'keyring_vault initialization failure.");
call mtr.add_suppression("Plugin keyring_vault reported:.* Connection timed out");
call mtr.add_suppression("Plugin keyring_vault reported: 'Could not retrieve list of keys from Vault.");
call mtr.add_suppression("Plugin keyring_vault reported: 'Error while loading keyring content. The keyring might be malformed'");
call mtr.add_suppression("Plugin keyring_vault reported: 'Could not identify credentials file size.'");
call mtr.add_suppression("Plugin keyring_vault reported: 'Cannot seek in file '/'");
call mtr.add_suppression("Plugin keyring_vault reported: 'CURL returned this error code: 28 with error message : connect\\(\\) timed out!'");
call mtr.add_suppression("Plugin keyring_vault reported: 'vault_ca is not specified but vault_url is https://");
call mtr.add_suppression("Plugin keyring_vault reported: 'Auto-detected mount point version is not the same as specified in 'secret_mount_point_version'\\.");
call mtr.add_suppression("for being a mount point unsuccessful - skipped.");
call mtr.add_suppression("for being a mount point successful - identified kv-v2 secret engine.");
--enable_query_log

# Installing keyring plugin.
--replace_regex /\.dll/.so/
eval INSTALL PLUGIN keyring_vault SONAME '$KEYRING_VAULT_PLUGIN';
# Check keyring plugin
query_vertical SELECT PLUGIN_NAME,PLUGIN_VERSION,PLUGIN_STATUS
FROM INFORMATION_SCHEMA.PLUGINS WHERE plugin_name='keyring_vault';
--echo
--replace_result $MYSQLTEST_VARDIR MYSQLTEST_VARDIR
eval SET @@global.keyring_vault_config='$conf_file1';
--replace_result $MYSQLTEST_VARDIR MYSQLTEST_VARDIR
SELECT @@global.keyring_vault_config;
# Creating table with encryption.
CREATE TABLE t1(c1 INT, c2 char(20)) ENCRYPTION="Y" ENGINE = InnoDB;

# Setting keyring_vault_config value to file.
--replace_result $MYSQLTEST_VARDIR MYSQLTEST_VARDIR
eval SET @@global.keyring_vault_config='$conf_file2';
--replace_result $MYSQLTEST_VARDIR MYSQLTEST_VARDIR
SELECT @@global.keyring_vault_config;

# Invalid values
--error ER_WRONG_VALUE_FOR_VAR
SET @@global.keyring_vault_config='';
--error ER_WRONG_VALUE_FOR_VAR
SET @@global.keyring_vault_config='#^$^@E&(';
--error ER_WRONG_TYPE_FOR_VAR
SET @@global.keyring_vault_config=1;
#This statement generates Could not read secret_mount_point error
#As location can be opened for reading
--error ER_WRONG_VALUE_FOR_VAR
SET @@global.keyring_vault_config='/';
--replace_result $MYSQL_TMP_DIR MYSQL_TMP_DIR
--error ER_GLOBAL_VARIABLE
eval SET @@session.keyring_vault_config='$MYSQL_TMP_DIR/new_keyring_vault_config';
--replace_result $MYSQL_TMP_DIR MYSQL_TMP_DIR
--error ER_GLOBAL_VARIABLE
eval SET @@local.keyring_vault_config='$MYSQL_TMP_DIR/new_keyring_vault_config';

--replace_result $MYSQLTEST_VARDIR MYSQLTEST_VARDIR
--error ER_WRONG_VALUE_FOR_VAR
eval SET @@global.keyring_vault_config='$conf_invalid';

--replace_result $MYSQLTEST_VARDIR MYSQLTEST_VARDIR
eval SET @@global.keyring_vault_config='$conf_file1';
--replace_result $MYSQLTEST_VARDIR MYSQLTEST_VARDIR
SELECT @@global.keyring_vault_config;

# Setting keyring_vault_config value to dir.
--Error ER_WRONG_VALUE_FOR_VAR
SET @@global.keyring_vault_config='MYSQL_test_invalid/dir/';
--replace_result $MYSQLTEST_VARDIR MYSQLTEST_VARDIR
SELECT @@global.keyring_vault_config;
--echo

UNINSTALL PLUGIN keyring_vault;
# Check keyring plugin
query_vertical SELECT PLUGIN_NAME,PLUGIN_VERSION,PLUGIN_STATUS
FROM INFORMATION_SCHEMA.PLUGINS WHERE plugin_name='keyring_vault';

# Cleanup
DROP TABLE t1;

# Restart is required here for --repeat=N runs because without it when MK is
# created and stored in the keyring during the first run it will be inaccessible
# during the second as keyring storage is reset
--source include/restart_mysqld.inc

# Delete mount points
--let $vault_conf_token =
--let $mount_point_service_op = DELETE

--let $vault_conf_mount_point_suffix = _1
--source mount_point_service.inc
if (!$vault_conf_mount_point_directory)
{
  --let $vault_conf_mount_point_suffix = _2
  --source mount_point_service.inc
}

--echo
--echo #End:

# Removing .conf files
--remove_file $conf_file1
--remove_file $conf_file2
--remove_file $conf_invalid
