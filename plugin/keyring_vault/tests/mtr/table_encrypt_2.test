# InnoDB transparent tablespace data encryption
# This test case will test basic encryption support features.

--source include/have_keyring_vault_plugin.inc
--source include/no_valgrind_without_big.inc
--source include/have_innodb.inc
--source include/not_embedded.inc

# Waiting time when (re)starting the server
--let $explicit_default_counter=10000

--let $vault_conf_mount_point_uuid = `SELECT UUID()`

--source parse_combination.inc

--let $conf_file1 = $MYSQLTEST_VARDIR/keyring_vault1.conf
--let $conf_file2 = $MYSQLTEST_VARDIR/keyring_vault2.conf

--let $mount_point_service_op = CREATE

--let $vault_conf_file = $conf_file1
--let $vault_conf_mount_point_suffix = _1
--source generate_conf_file.inc
--source mount_point_service.inc

--let $vault_conf_file = $conf_file2
--let $vault_conf_mount_point_suffix = _2
--source generate_conf_file.inc
if (!$vault_conf_mount_point_directory)
{
  --source mount_point_service.inc
}

--let $keyring1_restart_param = restart: $KEYRING_VAULT_PLUGIN_OPT $KEYRING_VAULT_PLUGIN_EARLY_LOAD --loose-keyring_vault_config=$conf_file1
--let $keyring2_restart_param = restart: $KEYRING_VAULT_PLUGIN_OPT $KEYRING_VAULT_PLUGIN_EARLY_LOAD --loose-keyring_vault_config=$conf_file2

--disable_query_log
call mtr.add_suppression("\\[ERROR\\] Function 'keyring_vault' already exists");
call mtr.add_suppression("\\[ERROR\\] Couldn't load plugin named 'keyring_vault' with soname 'keyring_vault.*'.");
call mtr.add_suppression("Plugin keyring_vault reported");
--enable_query_log

--replace_result $MYSQLTEST_VARDIR MYSQLTEST_VARDIR
eval SET @@global.keyring_vault_config = '$conf_file1';

--let $encryption_type = Y
--source include/table_encrypt_2.inc

# Delete mount points
--let $mount_point_service_op = DELETE
--let $vault_conf_mount_point_suffix = _1
--source mount_point_service.inc
if (!$vault_conf_mount_point_directory)
{
  --let $vault_conf_mount_point_suffix = _2
  --source mount_point_service.inc
}

# Removing .conf files
--remove_file $conf_file1
--remove_file $conf_file2
