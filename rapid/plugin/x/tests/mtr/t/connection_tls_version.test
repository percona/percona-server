## Test cases for mysqlx plugin TLS versions

--source include/not_ubuntu_precise.inc
--source include/have_ssl.inc
--source ../include/have_performance_schema_threads.inc
--source ../include/xplugin_preamble.inc

call mtr.add_suppression("Plugin mysqlx reported: 'Error during SSL handshake for client connection \\([0-9]*\\)'");
call mtr.add_suppression("Plugin mysqlx reported: '[0-9]*: Error during SSL handshake'");

SET GLOBAL mysqlx_connect_timeout = 300;

CREATE USER user5_mysqlx@localhost
            IDENTIFIED WITH 'mysql_native_password' BY 'auth_string'
            REQUIRE SSL;

GRANT ALL ON *.* TO user5_mysqlx@localhost;

## Test starts here

--let $xtest_file= $MYSQL_TMP_DIR/connection_tls_version.tmp
--write_file $xtest_file
-->quiet
-->sql
SELECT CONNECTION_TYPE from performance_schema.threads where processlist_command='Query';
SHOW VARIABLES LIKE 'tls_version';
SHOW STATUS LIKE 'Mysqlx_ssl_version';
-->endsql
EOF

--exec $MYSQLXTEST -uroot --file=$xtest_file 2>&1

--let $XTESTPARAMS= -u user5_mysqlx --password='auth_string' --file=$xtest_file --ssl-cipher='DHE-RSA-AES256-SHA'

# In ERROR1 and ERROR5, the first regex handles OpenSSL < 1.1, the second one OpenSSL >= 1.1

--let $ERROR1= /in main, line 0:ERROR: error:14077102:SSL routines:SSL23_GET_SERVER_HELLO:/Application terminated with expected error: / /in main, line 0:ERROR: error:14171102:SSL routines:tls_process_server_hello:/Application terminated with expected error: / /in main, line 0:ERROR: error:1425F102:SSL routines:ssl_choose_client_version:/Application terminated with expected error: /

--let $ERROR5= /in main, line 0:ERROR: error:00000000:lib\(0\):func\(0\):reason\(0\)/Application terminated with expected error: socket layer receive error/ /in main, line 0:ERROR: error:1409442E:SSL routines:ssl3_read_bytes:tlsv1 alert protocol version/Application terminated with expected error: socket layer receive error/

--exec $MYSQLXTEST                                     $XTESTPARAMS 2>&1
--exec $MYSQLXTEST --tls-version=TLSv1,TLSv1.1,TLSv1.2 $XTESTPARAMS 2>&1
--exec $MYSQLXTEST --tls-version=TLSv1,TLSv1.1         $XTESTPARAMS 2>&1
--exec $MYSQLXTEST --tls-version=TLSv1,TLSv1.2         $XTESTPARAMS 2>&1
--exec $MYSQLXTEST --tls-version=TLSv1.1,TLSv1.2       $XTESTPARAMS 2>&1
--exec $MYSQLXTEST --tls-version=TLSv1                 $XTESTPARAMS 2>&1
--exec $MYSQLXTEST --tls-version=TLSv1.1               $XTESTPARAMS 2>&1

--let $expected_error_msg= TLS version is invalid \(code 2026\)
--source ../include/mysqlxtest_expected_error.inc
--exec $MYSQLXTEST --tls-version=TLSv3                 $XTESTPARAMS 2>&1


--let $restart_parameters = restart: --tls-version=TLSv1
--source ../include/restart_mysqld_and_wait_for_xplugin.inc

--exec $MYSQLXTEST                                     $XTESTPARAMS 2>&1
--exec $MYSQLXTEST --tls-version=TLSv1,TLSv1.1,TLSv1.2 $XTESTPARAMS 2>&1
--exec $MYSQLXTEST --tls-version=TLSv1,TLSv1.1         $XTESTPARAMS 2>&1
--exec $MYSQLXTEST --tls-version=TLSv1,TLSv1.2         $XTESTPARAMS 2>&1

--let $expected_error_extra= $ERROR1
--let $expected_error_msg= unsupported protocol \(code 2026\)
--source ../include/mysqlxtest_expected_error.inc
--exec $MYSQLXTEST --tls-version=TLSv1.1,TLSv1.2       $XTESTPARAMS 2>&1

--exec $MYSQLXTEST --tls-version=TLSv1                 $XTESTPARAMS 2>&1

--let $expected_error_extra= $ERROR1
--let $expected_error_msg= unsupported protocol \(code 2026\)
--source ../include/mysqlxtest_expected_error.inc
--exec $MYSQLXTEST --tls-version=TLSv1.1               $XTESTPARAMS 2>&1

--let $expected_error_msg= TLS version is invalid \(code 2026\)
--source ../include/mysqlxtest_expected_error.inc
--exec $MYSQLXTEST --tls-version=TLSv3                 $XTESTPARAMS 2>&1


--let $restart_parameters = restart: --tls-version=TLSv1.1
--source ../include/restart_mysqld_and_wait_for_xplugin.inc

--exec $MYSQLXTEST                                     $XTESTPARAMS 2>&1
--exec $MYSQLXTEST --tls-version=TLSv1,TLSv1.1,TLSv1.2 $XTESTPARAMS 2>&1
--exec $MYSQLXTEST --tls-version=TLSv1,TLSv1.1         $XTESTPARAMS 2>&1

--let $expected_error_extra= $ERROR5
--let $expected_error_msg= socket layer receive error \(code 2026\)
--source ../include/mysqlxtest_expected_error.inc
--exec $MYSQLXTEST --tls-version=TLSv1,TLSv1.2         $XTESTPARAMS 2>&1
--exec $MYSQLXTEST --tls-version=TLSv1.1,TLSv1.2       $XTESTPARAMS 2>&1

--let $expected_error_extra= $ERROR5
--let $expected_error_msg= socket layer receive error \(code 2026\)
--source ../include/mysqlxtest_expected_error.inc
--exec $MYSQLXTEST --tls-version=TLSv1                 $XTESTPARAMS 2>&1

--exec $MYSQLXTEST --tls-version=TLSv1.1               $XTESTPARAMS 2>&1

--let $expected_error_msg= TLS version is invalid \(code 2026\)
--source ../include/mysqlxtest_expected_error.inc
--exec $MYSQLXTEST --tls-version=TLSv3                 $XTESTPARAMS 2>&1


# Postamble
--remove_file $xtest_file

DROP USER user5_mysqlx@localhost;
UNINSTALL PLUGIN mysqlx;


